@PACKAGE_INIT@
set(DNNL_CPU_RUNTIME "@DNNL_CPU_RUNTIME@")
set(DNNL_CPU_THREADING_RUNTIME "@DNNL_CPU_THREADING_RUNTIME@")
set(DNNL_GPU_RUNTIME "@DNNL_GPU_RUNTIME@")

# Use a custom find module for transitive dependencies
set(DNNL_ORIGINAL_CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
list(APPEND CMAKE_MODULE_PATH ${PACKAGE_PREFIX_DIR}/@LIB_CONFIG_INSTALL_DIR@)

if(DNNL_CPU_RUNTIME STREQUAL "SYCL" OR DNNL_GPU_RUNTIME STREQUAL "SYCL")
    find_package(SYCL REQUIRED)
    set(DNNL_COMPILE_FLAGS "${SYCL_FLAGS} -DCL_TARGET_OPENCL_VERSION=220")

    # Use TBB library from SYCL bundle if it is there
    if(NOT TBBROOT)
        get_target_property(sycl_lib_path SYCL::SYCL IMPORTED_LOCATION)
        get_filename_component(sycl_lib_dir "${sycl_lib_path}" PATH)

        find_path(_tbbroot
            NAMES "include/tbb/tbb.h"
            PATHS "${sycl_lib_dir}/../../tbb"
                  "${sycl_lib_dir}/../../../tbb"
            PATH_SUFFIXES "latest"
        NO_DEFAULT_PATH)
        if(_tbbroot)
            set(TBBROOT "${_tbbroot}" CACHE STRING "" FORCE)
        endif()
    endif()
endif()

if(DNNL_CPU_THREADING_RUNTIME STREQUAL "TBB")
    find_package(TBB REQUIRED)
endif()

if(DNNL_GPU_RUNTIME STREQUAL "OCL")
    find_package(OpenCL REQUIRED)
    set(DNNL_COMPILE_FLAGS "-DCL_TARGET_OPENCL_VERSION=220")
endif()

# Reverting the CMAKE_MODULE_PATH to its original state
set(CMAKE_MODULE_PATH ${DNNL_ORIGINAL_CMAKE_MODULE_PATH})

include("${CMAKE_CURRENT_LIST_DIR}/@LIB_EXPORT_NAME@.cmake")
check_required_components("@LIB_NAME@")
