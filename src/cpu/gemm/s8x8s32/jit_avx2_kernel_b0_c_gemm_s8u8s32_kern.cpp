/*******************************************************************************
* Copyright 2019 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#include "common_u8.hpp"
#include "jit_generator.hpp"

namespace dnnl {
namespace impl {
namespace cpu {

jit_avx2_kernel_b0_c_gemm_s8u8s32_kern::jit_avx2_kernel_b0_c_gemm_s8u8s32_kern()
    : jit_generator(nullptr, S8U8S32_COMPUTE_KERNEL_CODE_SIZE) {

#ifndef _WIN32

#define M rdi
#define N rsi
#define K rdx
#define A r8
#define B r9
#define C r10
#define LDC r11

#define AA rcx
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#else

#define M rcx
#define N rdx
#define K r8
#define A rsi
#define B r9
#define C r10
#define LDC r11

#define AA rdi
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#endif

#ifdef _WIN32
#define ARG_A (args_offset - 16) + rsp
#define ARG_B (args_offset - 8) + rsp
#endif
#define ARG_C (args_offset + 0) + rsp
#define ARG_LDC (args_offset + 8) + rsp
#define ARG_COFFSET_C (args_offset + 16) + rsp

#define COFFSET_CX 0 + rsp
#define COFFSET_CY 8 + rsp

    inLocalLabel();
    {

        Xbyak::Label l1018;
        Xbyak::Label l104;
        Xbyak::Label l104c;
        Xbyak::Label l1060;
        Xbyak::Label l10ac;
        Xbyak::Label l10cc;
        Xbyak::Label l11b4;
        Xbyak::Label l11c4;
        Xbyak::Label l12b4;
        Xbyak::Label l12c0;
        Xbyak::Label l13a8;
        Xbyak::Label l1408;
        Xbyak::Label l1480;
        Xbyak::Label l1508;
        Xbyak::Label l1560;
        Xbyak::Label l1590;
        Xbyak::Label l162c;
        Xbyak::Label l163c;
        Xbyak::Label l16e0;
        Xbyak::Label l16ec;
        Xbyak::Label l1788;
        Xbyak::Label l17c4;
        Xbyak::Label l1818;
        Xbyak::Label l1878;
        Xbyak::Label l18a8;
        Xbyak::Label l18d4;
        Xbyak::Label l1944;
        Xbyak::Label l1950;
        Xbyak::Label l19c8;
        Xbyak::Label l19d0;
        Xbyak::Label l1a40;
        Xbyak::Label l1a68;
        Xbyak::Label l1aa8;
        Xbyak::Label l1af4;
        Xbyak::Label l1b14;
        Xbyak::Label l1b18;
        Xbyak::Label l1b64;
        Xbyak::Label l1b84;
        Xbyak::Label l1c6c;
        Xbyak::Label l1c7c;
        Xbyak::Label l1d6c;
        Xbyak::Label l1d78;
        Xbyak::Label l1e60;
        Xbyak::Label l1ec0;
        Xbyak::Label l1f38;
        Xbyak::Label l1fc0;
        Xbyak::Label l2018;
        Xbyak::Label l2048;
        Xbyak::Label l20e4;
        Xbyak::Label l20f4;
        Xbyak::Label l2198;
        Xbyak::Label l21a4;
        Xbyak::Label l2240;
        Xbyak::Label l227c;
        Xbyak::Label l22d0;
        Xbyak::Label l2330;
        Xbyak::Label l2360;
        Xbyak::Label l238c;
        Xbyak::Label l23fc;
        Xbyak::Label l2408;
        Xbyak::Label l2484;
        Xbyak::Label l248c;
        Xbyak::Label l24fc;
        Xbyak::Label l2524;
        Xbyak::Label l2564;
        Xbyak::Label l25b0;
        Xbyak::Label l25d0;
        Xbyak::Label l25d4;
        Xbyak::Label l260;
        Xbyak::Label l2620;
        Xbyak::Label l2640;
        Xbyak::Label l270;
        Xbyak::Label l2728;
        Xbyak::Label l2738;
        Xbyak::Label l2828;
        Xbyak::Label l2834;
        Xbyak::Label l291c;
        Xbyak::Label l297c;
        Xbyak::Label l29f4;
        Xbyak::Label l2a7c;
        Xbyak::Label l2ad4;
        Xbyak::Label l2b04;
        Xbyak::Label l2ba0;
        Xbyak::Label l2bb0;
        Xbyak::Label l2c54;
        Xbyak::Label l2c60;
        Xbyak::Label l2cfc;
        Xbyak::Label l2d38;
        Xbyak::Label l2d8c;
        Xbyak::Label l2dec;
        Xbyak::Label l2e1c;
        Xbyak::Label l2e48;
        Xbyak::Label l2eb8;
        Xbyak::Label l2ec4;
        Xbyak::Label l2f40;
        Xbyak::Label l2f48;
        Xbyak::Label l2fb8;
        Xbyak::Label l2fe0;
        Xbyak::Label l3020;
        Xbyak::Label l306c;
        Xbyak::Label l308c;
        Xbyak::Label l3090;
        Xbyak::Label l30dc;
        Xbyak::Label l30fc;
        Xbyak::Label l31e4;
        Xbyak::Label l31f4;
        Xbyak::Label l32e4;
        Xbyak::Label l32f0;
        Xbyak::Label l33d8;
        Xbyak::Label l3438;
        Xbyak::Label l34b0;
        Xbyak::Label l3538;
        Xbyak::Label l3590;
        Xbyak::Label l35c0;
        Xbyak::Label l365c;
        Xbyak::Label l366c;
        Xbyak::Label l3710;
        Xbyak::Label l371c;
        Xbyak::Label l37b8;
        Xbyak::Label l37f4;
        Xbyak::Label l3848;
        Xbyak::Label l38a8;
        Xbyak::Label l38d8;
        Xbyak::Label l3904;
        Xbyak::Label l3974;
        Xbyak::Label l3980;
        Xbyak::Label l39fc;
        Xbyak::Label l3a04;
        Xbyak::Label l3a74;
        Xbyak::Label l3a9c;
        Xbyak::Label l3adc;
        Xbyak::Label l3b28;
        Xbyak::Label l3b48;
        Xbyak::Label l3b4c;
        Xbyak::Label l3dc;
        Xbyak::Label l3e8;
        Xbyak::Label l544;
        Xbyak::Label l5dc;
        Xbyak::Label l6a0;
        Xbyak::Label l780;
        Xbyak::Label l81c;
        Xbyak::Label l850;
        Xbyak::Label l92c;
        Xbyak::Label l93c;
        Xbyak::Label la0;
        Xbyak::Label la28;
        Xbyak::Label la34;
        Xbyak::Label lb10;
        Xbyak::Label lb64;
        Xbyak::Label lbe4;
        Xbyak::Label lc84;
        Xbyak::Label lcd4;
        Xbyak::Label ld08;
        Xbyak::Label lda4;
        Xbyak::Label ldb4;
        Xbyak::Label ldc;
        Xbyak::Label le60;
        Xbyak::Label le6c;
        Xbyak::Label lf08;
        Xbyak::Label lf3c;
        Xbyak::Label lf9c;

        auto stack_alloc_size = 32;
        auto args_offset = stack_alloc_size + get_size_of_abi_save_regs() + 8;
#ifdef _WIN32
        args_offset += 48;
#endif
        preamble();
        sub(rsp, stack_alloc_size);
#ifdef _WIN32
        mov(A, ptr[ARG_A]);
        mov(B, ptr[ARG_B]);
#endif

        mov(C, qword[ARG_C]);
        mov(LDC, qword[ARG_LDC]);
        sub(A, -64);
        sub(B, -64);
        mov(M, qword[M]);
        mov(N, qword[N]);
        mov(K, qword[K]);
        lea(LDC, ptr[LDC * 4 + 0x0]);
        mov(H, qword[ARG_COFFSET_C]);
        mov(qword[COFFSET_CX], H);
        vxorps(ymm8, ymm8, ymm8);
        vxorps(ymm9, ymm9, ymm9);
        vxorps(ymm10, ymm10, ymm10);
        vxorps(ymm11, ymm11, ymm11);
        vxorps(ymm12, ymm12, ymm12);
        vxorps(ymm13, ymm13, ymm13);
        vxorps(ymm14, ymm14, ymm14);
        vxorps(ymm15, ymm15, ymm15);
        mov(H, 0x1);
        movq(xmm7, H);
        vpbroadcastw(ymm7, xmm7);
        mov(J, M);
        cmp(J, 0x10);
        jl(l1060, T_NEAR);
        align(4);

        L(la0);
        mov(CO1, C);
        add(C, 0x40);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x20);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x40);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l81c, T_NEAR);
        align(4);

        L(ldc);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(l544, T_NEAR);
        sub(H, 0x14);
        jle(l260, T_NEAR);
        align(4);

        L(l104);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l104, T_NEAR);
        align(4);

        L(l260);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l3dc, T_NEAR);
        align(4);

        L(l270);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l270, T_NEAR);
        align(4);

        L(l3dc);
        add(H, 0x10);
        jle(l544, T_NEAR);
        align(4);

        L(l3e8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3e8, T_NEAR);
        align(4);

        L(l544);
        mov(H, K);
        test(H, 0x4);
        je(l5dc, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x40);
        add(BO, 0x10);
        align(4);

        L(l5dc);
        mov(H, K);
        test(H, 0x2);
        je(l6a0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l6a0);
        mov(H, K);
        test(H, 0x1);
        je(l780, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l780);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        vmovdqu(ymm0, yword[H + 0x20]);
        vpaddd(ymm12, ymm12, ymm0);
        vpaddd(ymm13, ymm13, ymm0);
        vpaddd(ymm14, ymm14, ymm0);
        vpaddd(ymm15, ymm15, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm13);
        vxorps(ymm13, ymm13, ymm13);
        vmovdqu(yword[CO1 + LDC * 2], ymm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(yword[CO1 + LDC * 2 + 0x20], ymm14);
        vxorps(ymm14, ymm14, ymm14);
        vmovdqu(yword[CO1 + H * 1], ymm11);
        vxorps(ymm11, ymm11, ymm11);
        vmovdqu(yword[CO1 + H * 1 + 0x20], ymm15);
        vxorps(ymm15, ymm15, ymm15);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(ldc, T_NEAR);
        align(4);

        L(l81c);
        test(I, 0x2);
        jle(lcd4, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lb10, T_NEAR);
        sub(H, 0x12);
        jle(l92c, T_NEAR);
        align(4);

        L(l850);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l850, T_NEAR);
        align(4);

        L(l92c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(la28, T_NEAR);
        align(4);

        L(l93c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l93c, T_NEAR);
        align(4);

        L(la28);
        add(H, 0x10);
        jle(lb10, T_NEAR);
        align(4);

        L(la34);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(la34, T_NEAR);
        align(4);

        L(lb10);
        mov(H, K);
        test(H, 0x4);
        je(lb64, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x40);
        add(BO, 0x8);
        align(4);

        L(lb64);
        mov(H, K);
        test(H, 0x2);
        je(lbe4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(lbe4);
        mov(H, K);
        test(H, 0x1);
        je(lc84, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(lc84);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vmovdqu(ymm0, yword[H + 0x20]);
        vpaddd(ymm12, ymm12, ymm0);
        vpaddd(ymm13, ymm13, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm13);
        vxorps(ymm13, ymm13, ymm13);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(lcd4);
        test(I, 0x1);
        jle(l104c, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lf08, T_NEAR);
        sub(H, 0x11);
        jle(lda4, T_NEAR);
        align(4);

        L(ld08);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(ld08, T_NEAR);
        align(4);

        L(lda4);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(le60, T_NEAR);
        align(4);

        L(ldb4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(ldb4, T_NEAR);
        align(4);

        L(le60);
        add(H, 0x10);
        jle(lf08, T_NEAR);
        align(4);

        L(le6c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(le6c, T_NEAR);
        align(4);

        L(lf08);
        mov(H, K);
        test(H, 0x4);
        je(lf3c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x40);
        add(BO, 0x4);
        align(4);

        L(lf3c);
        mov(H, K);
        test(H, 0x2);
        je(lf9c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x20);
        add(BO, 0x2);
        align(4);

        L(lf9c);
        mov(H, K);
        test(H, 0x1);
        je(l1018, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x10);
        add(BO, 0x1);
        align(4);

        L(l1018);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vmovdqu(ymm0, yword[H + 0x20]);
        vpaddd(ymm12, ymm12, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l104c);
        mov(A, AO);
        sub(J, 0x10);
        cmp(J, 0x10);
        jge(la0, T_NEAR);
        align(4);

        L(l1060);
        test(J, 0x8);
        jle(l1b18, T_NEAR);
        mov(CO1, C);
        add(C, 0x20);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x10);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x20);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l1560, T_NEAR);
        align(4);

        L(l10ac);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l13a8, T_NEAR);
        sub(H, 0x14);
        jle(l11b4, T_NEAR);
        align(4);

        L(l10cc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l10cc, T_NEAR);
        align(4);

        L(l11b4);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l12b4, T_NEAR);
        align(4);

        L(l11c4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l11c4, T_NEAR);
        align(4);

        L(l12b4);
        add(H, 0x10);
        jle(l13a8, T_NEAR);
        align(4);

        L(l12c0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l12c0, T_NEAR);
        align(4);

        L(l13a8);
        mov(H, K);
        test(H, 0x4);
        je(l1408, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x20);
        add(BO, 0x10);
        align(4);

        L(l1408);
        mov(H, K);
        test(H, 0x2);
        je(l1480, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l1480);
        mov(H, K);
        test(H, 0x1);
        je(l1508, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l1508);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 2], ymm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(yword[CO1 + H * 1], ymm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l10ac, T_NEAR);
        align(4);

        L(l1560);
        test(I, 0x2);
        jle(l18a8, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1788, T_NEAR);
        sub(H, 0x12);
        jle(l162c, T_NEAR);
        align(4);

        L(l1590);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l1590, T_NEAR);
        align(4);

        L(l162c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l16e0, T_NEAR);
        align(4);

        L(l163c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l163c, T_NEAR);
        align(4);

        L(l16e0);
        add(H, 0x10);
        jle(l1788, T_NEAR);
        align(4);

        L(l16ec);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l16ec, T_NEAR);
        align(4);

        L(l1788);
        mov(H, K);
        test(H, 0x4);
        je(l17c4, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l17c4);
        mov(H, K);
        test(H, 0x2);
        je(l1818, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l1818);
        mov(H, K);
        test(H, 0x1);
        je(l1878, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l1878);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l18a8);
        test(I, 0x1);
        jle(l1b14, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1a40, T_NEAR);
        sub(H, 0x11);
        jle(l1944, T_NEAR);
        align(4);

        L(l18d4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l18d4, T_NEAR);
        align(4);

        L(l1944);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l19c8, T_NEAR);
        align(4);

        L(l1950);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l1950, T_NEAR);
        align(4);

        L(l19c8);
        add(H, 0x10);
        jle(l1a40, T_NEAR);
        align(4);

        L(l19d0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l19d0, T_NEAR);
        align(4);

        L(l1a40);
        mov(H, K);
        test(H, 0x4);
        je(l1a68, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(l1a68);
        mov(H, K);
        test(H, 0x2);
        je(l1aa8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(l1aa8);
        mov(H, K);
        test(H, 0x1);
        je(l1af4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x1);
        align(4);

        L(l1af4);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l1b14);
        mov(A, AO);
        align(4);

        L(l1b18);
        test(J, 0x4);
        jle(l25d4, T_NEAR);
        mov(CO1, C);
        add(C, 0x10);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x8);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x10);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l2018, T_NEAR);
        align(4);

        L(l1b64);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1e60, T_NEAR);
        sub(H, 0x14);
        jle(l1c6c, T_NEAR);
        align(4);

        L(l1b84);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1b84, T_NEAR);
        align(4);

        L(l1c6c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l1d6c, T_NEAR);
        align(4);

        L(l1c7c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1c7c, T_NEAR);
        align(4);

        L(l1d6c);
        add(H, 0x10);
        jle(l1e60, T_NEAR);
        align(4);

        L(l1d78);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1d78, T_NEAR);
        align(4);

        L(l1e60);
        mov(H, K);
        test(H, 0x4);
        je(l1ec0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x10);
        align(4);

        L(l1ec0);
        mov(H, K);
        test(H, 0x2);
        je(l1f38, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l1f38);
        mov(H, K);
        test(H, 0x1);
        je(l1fc0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l1fc0);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(xmm0, xword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(xword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(xword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l1b64, T_NEAR);
        align(4);

        L(l2018);
        test(I, 0x2);
        jle(l2360, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2240, T_NEAR);
        sub(H, 0x12);
        jle(l20e4, T_NEAR);
        align(4);

        L(l2048);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2048, T_NEAR);
        align(4);

        L(l20e4);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l2198, T_NEAR);
        align(4);

        L(l20f4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l20f4, T_NEAR);
        align(4);

        L(l2198);
        add(H, 0x10);
        jle(l2240, T_NEAR);
        align(4);

        L(l21a4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l21a4, T_NEAR);
        align(4);

        L(l2240);
        mov(H, K);
        test(H, 0x4);
        je(l227c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l227c);
        mov(H, K);
        test(H, 0x2);
        je(l22d0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l22d0);
        mov(H, K);
        test(H, 0x1);
        je(l2330, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l2330);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(xmm0, xword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l2360);
        test(I, 0x1);
        jle(l25d0, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l24fc, T_NEAR);
        sub(H, 0x11);
        jle(l23fc, T_NEAR);
        align(4);

        L(l238c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l238c, T_NEAR);
        align(4);

        L(l23fc);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l2484, T_NEAR);
        align(4);

        L(l2408);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2408, T_NEAR);
        align(4);

        L(l2484);
        add(H, 0x10);
        jle(l24fc, T_NEAR);
        align(4);

        L(l248c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l248c, T_NEAR);
        align(4);

        L(l24fc);
        mov(H, K);
        test(H, 0x4);
        je(l2524, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l2524);
        mov(H, K);
        test(H, 0x2);
        je(l2564, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l2564);
        mov(H, K);
        test(H, 0x1);
        je(l25b0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x1);
        align(4);

        L(l25b0);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(xmm0, xword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l25d0);
        mov(A, AO);
        align(4);

        L(l25d4);
        test(J, 0x2);
        jle(l3090, T_NEAR);
        mov(CO1, C);
        add(C, 0x8);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x4);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x8);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l2ad4, T_NEAR);
        align(4);

        L(l2620);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l291c, T_NEAR);
        sub(H, 0x14);
        jle(l2728, T_NEAR);
        align(4);

        L(l2640);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2640, T_NEAR);
        align(4);

        L(l2728);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l2828, T_NEAR);
        align(4);

        L(l2738);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2738, T_NEAR);
        align(4);

        L(l2828);
        add(H, 0x10);
        jle(l291c, T_NEAR);
        align(4);

        L(l2834);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2834, T_NEAR);
        align(4);

        L(l291c);
        mov(H, K);
        test(H, 0x4);
        je(l297c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x10);
        align(4);

        L(l297c);
        mov(H, K);
        test(H, 0x2);
        je(l29f4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l29f4);
        mov(H, K);
        test(H, 0x1);
        je(l2a7c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l2a7c);
        mov(H, qword[COFFSET_CY]);
        vmovsd(xmm0, qword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovlps(qword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovlps(qword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovlps(qword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l2620, T_NEAR);
        align(4);

        L(l2ad4);
        test(I, 0x2);
        jle(l2e1c, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2cfc, T_NEAR);
        sub(H, 0x12);
        jle(l2ba0, T_NEAR);
        align(4);

        L(l2b04);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2b04, T_NEAR);
        align(4);

        L(l2ba0);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l2c54, T_NEAR);
        align(4);

        L(l2bb0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2bb0, T_NEAR);
        align(4);

        L(l2c54);
        add(H, 0x10);
        jle(l2cfc, T_NEAR);
        align(4);

        L(l2c60);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2c60, T_NEAR);
        align(4);

        L(l2cfc);
        mov(H, K);
        test(H, 0x4);
        je(l2d38, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l2d38);
        mov(H, K);
        test(H, 0x2);
        je(l2d8c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l2d8c);
        mov(H, K);
        test(H, 0x1);
        je(l2dec, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l2dec);
        mov(H, qword[COFFSET_CY]);
        vmovsd(xmm0, qword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovlps(qword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l2e1c);
        test(I, 0x1);
        jle(l308c, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2fb8, T_NEAR);
        sub(H, 0x11);
        jle(l2eb8, T_NEAR);
        align(4);

        L(l2e48);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2e48, T_NEAR);
        align(4);

        L(l2eb8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l2f40, T_NEAR);
        align(4);

        L(l2ec4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2ec4, T_NEAR);
        align(4);

        L(l2f40);
        add(H, 0x10);
        jle(l2fb8, T_NEAR);
        align(4);

        L(l2f48);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2f48, T_NEAR);
        align(4);

        L(l2fb8);
        mov(H, K);
        test(H, 0x4);
        je(l2fe0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l2fe0);
        mov(H, K);
        test(H, 0x2);
        je(l3020, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l3020);
        mov(H, K);
        test(H, 0x1);
        je(l306c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x1);
        align(4);

        L(l306c);
        mov(H, qword[COFFSET_CY]);
        vmovsd(xmm0, qword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l308c);
        mov(A, AO);
        align(4);

        L(l3090);
        test(J, 0x1);
        jle(l3b4c, T_NEAR);
        mov(CO1, C);
        add(C, 0x4);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x2);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x4);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l3590, T_NEAR);
        align(4);

        L(l30dc);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l33d8, T_NEAR);
        sub(H, 0x14);
        jle(l31e4, T_NEAR);
        align(4);

        L(l30fc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l30fc, T_NEAR);
        align(4);

        L(l31e4);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l32e4, T_NEAR);
        align(4);

        L(l31f4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l31f4, T_NEAR);
        align(4);

        L(l32e4);
        add(H, 0x10);
        jle(l33d8, T_NEAR);
        align(4);

        L(l32f0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l32f0, T_NEAR);
        align(4);

        L(l33d8);
        mov(H, K);
        test(H, 0x4);
        je(l3438, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x10);
        align(4);

        L(l3438);
        mov(H, K);
        test(H, 0x2);
        je(l34b0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x8);
        align(4);

        L(l34b0);
        mov(H, K);
        test(H, 0x1);
        je(l3538, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x1);
        add(BO, 0x4);
        align(4);

        L(l3538);
        mov(H, qword[COFFSET_CY]);
        vmovss(xmm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(dword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovss(dword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovss(dword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l30dc, T_NEAR);
        align(4);

        L(l3590);
        test(I, 0x2);
        jle(l38d8, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l37b8, T_NEAR);
        sub(H, 0x12);
        jle(l365c, T_NEAR);
        align(4);

        L(l35c0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l35c0, T_NEAR);
        align(4);

        L(l365c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l3710, T_NEAR);
        align(4);

        L(l366c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l366c, T_NEAR);
        align(4);

        L(l3710);
        add(H, 0x10);
        jle(l37b8, T_NEAR);
        align(4);

        L(l371c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l371c, T_NEAR);
        align(4);

        L(l37b8);
        mov(H, K);
        test(H, 0x4);
        je(l37f4, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l37f4);
        mov(H, K);
        test(H, 0x2);
        je(l3848, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l3848);
        mov(H, K);
        test(H, 0x1);
        je(l38a8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x1);
        add(BO, 0x2);
        align(4);

        L(l38a8);
        mov(H, qword[COFFSET_CY]);
        vmovss(xmm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(dword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l38d8);
        test(I, 0x1);
        jle(l3b48, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3a74, T_NEAR);
        sub(H, 0x11);
        jle(l3974, T_NEAR);
        align(4);

        L(l3904);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3904, T_NEAR);
        align(4);

        L(l3974);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l39fc, T_NEAR);
        align(4);

        L(l3980);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3980, T_NEAR);
        align(4);

        L(l39fc);
        add(H, 0x10);
        jle(l3a74, T_NEAR);
        align(4);

        L(l3a04);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3a04, T_NEAR);
        align(4);

        L(l3a74);
        mov(H, K);
        test(H, 0x4);
        je(l3a9c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l3a9c);
        mov(H, K);
        test(H, 0x2);
        je(l3adc, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l3adc);
        mov(H, K);
        test(H, 0x1);
        je(l3b28, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x1);
        add(BO, 0x1);
        align(4);

        L(l3b28);
        mov(H, qword[COFFSET_CY]);
        vmovss(xmm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l3b48);
        mov(A, AO);
        align(4);

        L(l3b4c);
        vzeroupper();
        add(rsp, stack_alloc_size);
        postamble();
    }
    outLocalLabel();

#undef M
#undef N
#undef K
#undef A
#undef B
#undef C
#undef LDC
#undef AA
#undef I
#undef J
#undef H
#undef AO
#undef BO
#undef CO1
#undef CO2
#ifdef _WIN32
#undef ARG_A
#undef ARG_B
#endif
#undef ARG_C
#undef ARG_LDC
#undef ARG_COFFSET_C
#undef COFFSET_CX
#undef COFFSET_CY
}

} // namespace cpu
} // namespace impl
} // namespace dnnl
