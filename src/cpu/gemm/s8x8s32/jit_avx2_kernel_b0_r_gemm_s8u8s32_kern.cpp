/*******************************************************************************
* Copyright 2019 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#include "common_u8.hpp"
#include "jit_generator.hpp"

namespace dnnl {
namespace impl {
namespace cpu {

jit_avx2_kernel_b0_r_gemm_s8u8s32_kern::jit_avx2_kernel_b0_r_gemm_s8u8s32_kern()
    : jit_generator(nullptr, S8U8S32_COMPUTE_KERNEL_CODE_SIZE) {

#ifndef _WIN32

#define M rdi
#define N rsi
#define K rdx
#define A r8
#define B r9
#define C r10
#define LDC r11

#define AA rcx
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#else

#define M rcx
#define N rdx
#define K r8
#define A rsi
#define B r9
#define C r10
#define LDC r11

#define AA rdi
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#endif

#ifdef _WIN32
#define ARG_A (args_offset - 16) + rsp
#define ARG_B (args_offset - 8) + rsp
#endif
#define ARG_C (args_offset + 0) + rsp
#define ARG_LDC (args_offset + 8) + rsp
#define ARG_COFFSET_R (args_offset + 24) + rsp

#define COFFSET_RX 16 + rsp
#define COFFSET_RY 24 + rsp

    inLocalLabel();
    {

        Xbyak::Label l1028;
        Xbyak::Label l105c;
        Xbyak::Label l1070;
        Xbyak::Label l10b0;
        Xbyak::Label l10d0;
        Xbyak::Label l11b8;
        Xbyak::Label l11c8;
        Xbyak::Label l12b8;
        Xbyak::Label l12c4;
        Xbyak::Label l13ac;
        Xbyak::Label l140c;
        Xbyak::Label l1484;
        Xbyak::Label l150c;
        Xbyak::Label l1580;
        Xbyak::Label l15b0;
        Xbyak::Label l164c;
        Xbyak::Label l165c;
        Xbyak::Label l1700;
        Xbyak::Label l170c;
        Xbyak::Label l17a8;
        Xbyak::Label l17e4;
        Xbyak::Label l1838;
        Xbyak::Label l1898;
        Xbyak::Label l18d4;
        Xbyak::Label l1900;
        Xbyak::Label l1970;
        Xbyak::Label l197c;
        Xbyak::Label l19f4;
        Xbyak::Label l19fc;
        Xbyak::Label l1a6c;
        Xbyak::Label l1a94;
        Xbyak::Label l1ad4;
        Xbyak::Label l1b20;
        Xbyak::Label l1b48;
        Xbyak::Label l1b4c;
        Xbyak::Label l1b8c;
        Xbyak::Label l1bac;
        Xbyak::Label l1c94;
        Xbyak::Label l1ca4;
        Xbyak::Label l1d94;
        Xbyak::Label l1da0;
        Xbyak::Label l1e88;
        Xbyak::Label l1ee8;
        Xbyak::Label l1f60;
        Xbyak::Label l1fe8;
        Xbyak::Label l205c;
        Xbyak::Label l208c;
        Xbyak::Label l2128;
        Xbyak::Label l2138;
        Xbyak::Label l21dc;
        Xbyak::Label l21e8;
        Xbyak::Label l2284;
        Xbyak::Label l22c0;
        Xbyak::Label l2314;
        Xbyak::Label l2374;
        Xbyak::Label l23b0;
        Xbyak::Label l23dc;
        Xbyak::Label l244c;
        Xbyak::Label l2458;
        Xbyak::Label l24d4;
        Xbyak::Label l24dc;
        Xbyak::Label l254;
        Xbyak::Label l254c;
        Xbyak::Label l2574;
        Xbyak::Label l25b4;
        Xbyak::Label l2600;
        Xbyak::Label l2628;
        Xbyak::Label l262c;
        Xbyak::Label l264;
        Xbyak::Label l266c;
        Xbyak::Label l268c;
        Xbyak::Label l2774;
        Xbyak::Label l2784;
        Xbyak::Label l2874;
        Xbyak::Label l2880;
        Xbyak::Label l2968;
        Xbyak::Label l29c8;
        Xbyak::Label l2a40;
        Xbyak::Label l2ac8;
        Xbyak::Label l2b3c;
        Xbyak::Label l2b6c;
        Xbyak::Label l2c08;
        Xbyak::Label l2c18;
        Xbyak::Label l2cbc;
        Xbyak::Label l2cc8;
        Xbyak::Label l2d64;
        Xbyak::Label l2da0;
        Xbyak::Label l2df4;
        Xbyak::Label l2e54;
        Xbyak::Label l2e90;
        Xbyak::Label l2ebc;
        Xbyak::Label l2f2c;
        Xbyak::Label l2f38;
        Xbyak::Label l2fb4;
        Xbyak::Label l2fbc;
        Xbyak::Label l302c;
        Xbyak::Label l3054;
        Xbyak::Label l3094;
        Xbyak::Label l30e0;
        Xbyak::Label l3108;
        Xbyak::Label l310c;
        Xbyak::Label l314c;
        Xbyak::Label l316c;
        Xbyak::Label l3254;
        Xbyak::Label l3264;
        Xbyak::Label l3354;
        Xbyak::Label l3360;
        Xbyak::Label l3448;
        Xbyak::Label l34a8;
        Xbyak::Label l3520;
        Xbyak::Label l35a8;
        Xbyak::Label l361c;
        Xbyak::Label l364c;
        Xbyak::Label l36e8;
        Xbyak::Label l36f8;
        Xbyak::Label l379c;
        Xbyak::Label l37a8;
        Xbyak::Label l3844;
        Xbyak::Label l3880;
        Xbyak::Label l38d4;
        Xbyak::Label l3934;
        Xbyak::Label l3970;
        Xbyak::Label l399c;
        Xbyak::Label l3a0c;
        Xbyak::Label l3a18;
        Xbyak::Label l3a94;
        Xbyak::Label l3a9c;
        Xbyak::Label l3b0c;
        Xbyak::Label l3b34;
        Xbyak::Label l3b74;
        Xbyak::Label l3bc0;
        Xbyak::Label l3be8;
        Xbyak::Label l3bec;
        Xbyak::Label l3d0;
        Xbyak::Label l3dc;
        Xbyak::Label l538;
        Xbyak::Label l5d0;
        Xbyak::Label l694;
        Xbyak::Label l774;
        Xbyak::Label l824;
        Xbyak::Label l858;
        Xbyak::Label l934;
        Xbyak::Label l944;
        Xbyak::Label la0;
        Xbyak::Label la30;
        Xbyak::Label la3c;
        Xbyak::Label lb18;
        Xbyak::Label lb6c;
        Xbyak::Label lbec;
        Xbyak::Label lc8c;
        Xbyak::Label lce4;
        Xbyak::Label ld0;
        Xbyak::Label ld18;
        Xbyak::Label ldb4;
        Xbyak::Label ldc4;
        Xbyak::Label le70;
        Xbyak::Label le7c;
        Xbyak::Label lf18;
        Xbyak::Label lf4c;
        Xbyak::Label lf8;
        Xbyak::Label lfac;

        auto stack_alloc_size = 32;
        auto args_offset = stack_alloc_size + get_size_of_abi_save_regs() + 8;
#ifdef _WIN32
        args_offset += 48;
#endif
        preamble();
        sub(rsp, stack_alloc_size);
#ifdef _WIN32
        mov(A, ptr[ARG_A]);
        mov(B, ptr[ARG_B]);
#endif

        mov(C, qword[ARG_C]);
        mov(LDC, qword[ARG_LDC]);
        sub(A, -64);
        sub(B, -64);
        mov(M, qword[M]);
        mov(N, qword[N]);
        mov(K, qword[K]);
        lea(LDC, ptr[LDC * 4 + 0x0]);
        mov(H, qword[ARG_COFFSET_R]);
        mov(qword[COFFSET_RX], H);
        vxorps(ymm8, ymm8, ymm8);
        vxorps(ymm9, ymm9, ymm9);
        vxorps(ymm10, ymm10, ymm10);
        vxorps(ymm11, ymm11, ymm11);
        vxorps(ymm12, ymm12, ymm12);
        vxorps(ymm13, ymm13, ymm13);
        vxorps(ymm14, ymm14, ymm14);
        vxorps(ymm15, ymm15, ymm15);
        mov(H, 0x1);
        movq(xmm7, H);
        vpbroadcastw(ymm7, xmm7);
        mov(J, M);
        cmp(J, 0x10);
        jl(l1070, T_NEAR);
        align(4);

        L(la0);
        mov(CO1, C);
        add(C, 0x40);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x20);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l824, T_NEAR);
        align(4);

        L(ld0);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(l538, T_NEAR);
        sub(H, 0x14);
        jle(l254, T_NEAR);
        align(4);

        L(lf8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(lf8, T_NEAR);
        align(4);

        L(l254);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l3d0, T_NEAR);
        align(4);

        L(l264);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l264, T_NEAR);
        align(4);

        L(l3d0);
        add(H, 0x10);
        jle(l538, T_NEAR);
        align(4);

        L(l3dc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3dc, T_NEAR);
        align(4);

        L(l538);
        mov(H, K);
        test(H, 0x4);
        je(l5d0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x40);
        add(BO, 0x10);
        align(4);

        L(l5d0);
        mov(H, K);
        test(H, 0x2);
        je(l694, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l694);
        mov(H, K);
        test(H, 0x1);
        je(l774, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l774);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm12, ymm12, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm13, ymm13, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm14, ymm14, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        vpaddd(ymm15, ymm15, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm13);
        vxorps(ymm13, ymm13, ymm13);
        vmovdqu(yword[CO1 + LDC * 2], ymm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(yword[CO1 + LDC * 2 + 0x20], ymm14);
        vxorps(ymm14, ymm14, ymm14);
        vmovdqu(yword[CO1 + H * 1], ymm11);
        vxorps(ymm11, ymm11, ymm11);
        vmovdqu(yword[CO1 + H * 1 + 0x20], ymm15);
        vxorps(ymm15, ymm15, ymm15);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(ld0, T_NEAR);
        align(4);

        L(l824);
        test(I, 0x2);
        jle(lce4, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lb18, T_NEAR);
        sub(H, 0x12);
        jle(l934, T_NEAR);
        align(4);

        L(l858);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l858, T_NEAR);
        align(4);

        L(l934);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(la30, T_NEAR);
        align(4);

        L(l944);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l944, T_NEAR);
        align(4);

        L(la30);
        add(H, 0x10);
        jle(lb18, T_NEAR);
        align(4);

        L(la3c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(la3c, T_NEAR);
        align(4);

        L(lb18);
        mov(H, K);
        test(H, 0x4);
        je(lb6c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x40);
        add(BO, 0x8);
        align(4);

        L(lb6c);
        mov(H, K);
        test(H, 0x2);
        je(lbec, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(lbec);
        mov(H, K);
        test(H, 0x1);
        je(lc8c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(lc8c);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm12, ymm12, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm13, ymm13, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm13);
        vxorps(ymm13, ymm13, ymm13);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(lce4);
        test(I, 0x1);
        jle(l105c, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lf18, T_NEAR);
        sub(H, 0x11);
        jle(ldb4, T_NEAR);
        align(4);

        L(ld18);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(ld18, T_NEAR);
        align(4);

        L(ldb4);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(le70, T_NEAR);
        align(4);

        L(ldc4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(ldc4, T_NEAR);
        align(4);

        L(le70);
        add(H, 0x10);
        jle(lf18, T_NEAR);
        align(4);

        L(le7c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(le7c, T_NEAR);
        align(4);

        L(lf18);
        mov(H, K);
        test(H, 0x4);
        je(lf4c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x40);
        add(BO, 0x4);
        align(4);

        L(lf4c);
        mov(H, K);
        test(H, 0x2);
        je(lfac, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x20);
        add(BO, 0x2);
        align(4);

        L(lfac);
        mov(H, K);
        test(H, 0x1);
        je(l1028, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x10);
        add(BO, 0x1);
        align(4);

        L(l1028);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm12, ymm12, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l105c);
        mov(A, AO);
        sub(J, 0x10);
        cmp(J, 0x10);
        jge(la0, T_NEAR);
        align(4);

        L(l1070);
        test(J, 0x8);
        jle(l1b4c, T_NEAR);
        mov(CO1, C);
        add(C, 0x20);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x10);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l1580, T_NEAR);
        align(4);

        L(l10b0);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l13ac, T_NEAR);
        sub(H, 0x14);
        jle(l11b8, T_NEAR);
        align(4);

        L(l10d0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l10d0, T_NEAR);
        align(4);

        L(l11b8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l12b8, T_NEAR);
        align(4);

        L(l11c8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l11c8, T_NEAR);
        align(4);

        L(l12b8);
        add(H, 0x10);
        jle(l13ac, T_NEAR);
        align(4);

        L(l12c4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l12c4, T_NEAR);
        align(4);

        L(l13ac);
        mov(H, K);
        test(H, 0x4);
        je(l140c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x20);
        add(BO, 0x10);
        align(4);

        L(l140c);
        mov(H, K);
        test(H, 0x2);
        je(l1484, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l1484);
        mov(H, K);
        test(H, 0x1);
        je(l150c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l150c);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 2], ymm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(yword[CO1 + H * 1], ymm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l10b0, T_NEAR);
        align(4);

        L(l1580);
        test(I, 0x2);
        jle(l18d4, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l17a8, T_NEAR);
        sub(H, 0x12);
        jle(l164c, T_NEAR);
        align(4);

        L(l15b0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l15b0, T_NEAR);
        align(4);

        L(l164c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l1700, T_NEAR);
        align(4);

        L(l165c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l165c, T_NEAR);
        align(4);

        L(l1700);
        add(H, 0x10);
        jle(l17a8, T_NEAR);
        align(4);

        L(l170c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l170c, T_NEAR);
        align(4);

        L(l17a8);
        mov(H, K);
        test(H, 0x4);
        je(l17e4, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l17e4);
        mov(H, K);
        test(H, 0x2);
        je(l1838, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l1838);
        mov(H, K);
        test(H, 0x1);
        je(l1898, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l1898);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l18d4);
        test(I, 0x1);
        jle(l1b48, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1a6c, T_NEAR);
        sub(H, 0x11);
        jle(l1970, T_NEAR);
        align(4);

        L(l1900);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l1900, T_NEAR);
        align(4);

        L(l1970);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l19f4, T_NEAR);
        align(4);

        L(l197c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l197c, T_NEAR);
        align(4);

        L(l19f4);
        add(H, 0x10);
        jle(l1a6c, T_NEAR);
        align(4);

        L(l19fc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l19fc, T_NEAR);
        align(4);

        L(l1a6c);
        mov(H, K);
        test(H, 0x4);
        je(l1a94, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(l1a94);
        mov(H, K);
        test(H, 0x2);
        je(l1ad4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(l1ad4);
        mov(H, K);
        test(H, 0x1);
        je(l1b20, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x1);
        align(4);

        L(l1b20);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l1b48);
        mov(A, AO);
        align(4);

        L(l1b4c);
        test(J, 0x4);
        jle(l262c, T_NEAR);
        mov(CO1, C);
        add(C, 0x10);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x8);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l205c, T_NEAR);
        align(4);

        L(l1b8c);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1e88, T_NEAR);
        sub(H, 0x14);
        jle(l1c94, T_NEAR);
        align(4);

        L(l1bac);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1bac, T_NEAR);
        align(4);

        L(l1c94);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l1d94, T_NEAR);
        align(4);

        L(l1ca4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1ca4, T_NEAR);
        align(4);

        L(l1d94);
        add(H, 0x10);
        jle(l1e88, T_NEAR);
        align(4);

        L(l1da0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1da0, T_NEAR);
        align(4);

        L(l1e88);
        mov(H, K);
        test(H, 0x4);
        je(l1ee8, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x10);
        align(4);

        L(l1ee8);
        mov(H, K);
        test(H, 0x2);
        je(l1f60, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l1f60);
        mov(H, K);
        test(H, 0x1);
        je(l1fe8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l1fe8);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(xword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(xword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l1b8c, T_NEAR);
        align(4);

        L(l205c);
        test(I, 0x2);
        jle(l23b0, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2284, T_NEAR);
        sub(H, 0x12);
        jle(l2128, T_NEAR);
        align(4);

        L(l208c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l208c, T_NEAR);
        align(4);

        L(l2128);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l21dc, T_NEAR);
        align(4);

        L(l2138);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2138, T_NEAR);
        align(4);

        L(l21dc);
        add(H, 0x10);
        jle(l2284, T_NEAR);
        align(4);

        L(l21e8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l21e8, T_NEAR);
        align(4);

        L(l2284);
        mov(H, K);
        test(H, 0x4);
        je(l22c0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l22c0);
        mov(H, K);
        test(H, 0x2);
        je(l2314, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l2314);
        mov(H, K);
        test(H, 0x1);
        je(l2374, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l2374);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l23b0);
        test(I, 0x1);
        jle(l2628, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l254c, T_NEAR);
        sub(H, 0x11);
        jle(l244c, T_NEAR);
        align(4);

        L(l23dc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l23dc, T_NEAR);
        align(4);

        L(l244c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l24d4, T_NEAR);
        align(4);

        L(l2458);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2458, T_NEAR);
        align(4);

        L(l24d4);
        add(H, 0x10);
        jle(l254c, T_NEAR);
        align(4);

        L(l24dc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l24dc, T_NEAR);
        align(4);

        L(l254c);
        mov(H, K);
        test(H, 0x4);
        je(l2574, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l2574);
        mov(H, K);
        test(H, 0x2);
        je(l25b4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l25b4);
        mov(H, K);
        test(H, 0x1);
        je(l2600, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x1);
        align(4);

        L(l2600);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l2628);
        mov(A, AO);
        align(4);

        L(l262c);
        test(J, 0x2);
        jle(l310c, T_NEAR);
        mov(CO1, C);
        add(C, 0x8);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x4);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l2b3c, T_NEAR);
        align(4);

        L(l266c);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2968, T_NEAR);
        sub(H, 0x14);
        jle(l2774, T_NEAR);
        align(4);

        L(l268c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l268c, T_NEAR);
        align(4);

        L(l2774);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l2874, T_NEAR);
        align(4);

        L(l2784);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2784, T_NEAR);
        align(4);

        L(l2874);
        add(H, 0x10);
        jle(l2968, T_NEAR);
        align(4);

        L(l2880);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2880, T_NEAR);
        align(4);

        L(l2968);
        mov(H, K);
        test(H, 0x4);
        je(l29c8, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x10);
        align(4);

        L(l29c8);
        mov(H, K);
        test(H, 0x2);
        je(l2a40, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l2a40);
        mov(H, K);
        test(H, 0x1);
        je(l2ac8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l2ac8);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovlps(qword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovlps(qword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovlps(qword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l266c, T_NEAR);
        align(4);

        L(l2b3c);
        test(I, 0x2);
        jle(l2e90, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2d64, T_NEAR);
        sub(H, 0x12);
        jle(l2c08, T_NEAR);
        align(4);

        L(l2b6c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2b6c, T_NEAR);
        align(4);

        L(l2c08);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l2cbc, T_NEAR);
        align(4);

        L(l2c18);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2c18, T_NEAR);
        align(4);

        L(l2cbc);
        add(H, 0x10);
        jle(l2d64, T_NEAR);
        align(4);

        L(l2cc8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2cc8, T_NEAR);
        align(4);

        L(l2d64);
        mov(H, K);
        test(H, 0x4);
        je(l2da0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l2da0);
        mov(H, K);
        test(H, 0x2);
        je(l2df4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l2df4);
        mov(H, K);
        test(H, 0x1);
        je(l2e54, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l2e54);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovlps(qword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l2e90);
        test(I, 0x1);
        jle(l3108, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l302c, T_NEAR);
        sub(H, 0x11);
        jle(l2f2c, T_NEAR);
        align(4);

        L(l2ebc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2ebc, T_NEAR);
        align(4);

        L(l2f2c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l2fb4, T_NEAR);
        align(4);

        L(l2f38);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2f38, T_NEAR);
        align(4);

        L(l2fb4);
        add(H, 0x10);
        jle(l302c, T_NEAR);
        align(4);

        L(l2fbc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2fbc, T_NEAR);
        align(4);

        L(l302c);
        mov(H, K);
        test(H, 0x4);
        je(l3054, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l3054);
        mov(H, K);
        test(H, 0x2);
        je(l3094, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l3094);
        mov(H, K);
        test(H, 0x1);
        je(l30e0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x1);
        align(4);

        L(l30e0);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l3108);
        mov(A, AO);
        align(4);

        L(l310c);
        test(J, 0x1);
        jle(l3bec, T_NEAR);
        mov(CO1, C);
        add(C, 0x4);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x2);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l361c, T_NEAR);
        align(4);

        L(l314c);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3448, T_NEAR);
        sub(H, 0x14);
        jle(l3254, T_NEAR);
        align(4);

        L(l316c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l316c, T_NEAR);
        align(4);

        L(l3254);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l3354, T_NEAR);
        align(4);

        L(l3264);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3264, T_NEAR);
        align(4);

        L(l3354);
        add(H, 0x10);
        jle(l3448, T_NEAR);
        align(4);

        L(l3360);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3360, T_NEAR);
        align(4);

        L(l3448);
        mov(H, K);
        test(H, 0x4);
        je(l34a8, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x10);
        align(4);

        L(l34a8);
        mov(H, K);
        test(H, 0x2);
        je(l3520, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x8);
        align(4);

        L(l3520);
        mov(H, K);
        test(H, 0x1);
        je(l35a8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x1);
        add(BO, 0x4);
        align(4);

        L(l35a8);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(dword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovss(dword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovss(dword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l314c, T_NEAR);
        align(4);

        L(l361c);
        test(I, 0x2);
        jle(l3970, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3844, T_NEAR);
        sub(H, 0x12);
        jle(l36e8, T_NEAR);
        align(4);

        L(l364c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l364c, T_NEAR);
        align(4);

        L(l36e8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l379c, T_NEAR);
        align(4);

        L(l36f8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l36f8, T_NEAR);
        align(4);

        L(l379c);
        add(H, 0x10);
        jle(l3844, T_NEAR);
        align(4);

        L(l37a8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l37a8, T_NEAR);
        align(4);

        L(l3844);
        mov(H, K);
        test(H, 0x4);
        je(l3880, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l3880);
        mov(H, K);
        test(H, 0x2);
        je(l38d4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l38d4);
        mov(H, K);
        test(H, 0x1);
        je(l3934, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x1);
        add(BO, 0x2);
        align(4);

        L(l3934);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(dword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l3970);
        test(I, 0x1);
        jle(l3be8, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3b0c, T_NEAR);
        sub(H, 0x11);
        jle(l3a0c, T_NEAR);
        align(4);

        L(l399c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l399c, T_NEAR);
        align(4);

        L(l3a0c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l3a94, T_NEAR);
        align(4);

        L(l3a18);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3a18, T_NEAR);
        align(4);

        L(l3a94);
        add(H, 0x10);
        jle(l3b0c, T_NEAR);
        align(4);

        L(l3a9c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3a9c, T_NEAR);
        align(4);

        L(l3b0c);
        mov(H, K);
        test(H, 0x4);
        je(l3b34, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l3b34);
        mov(H, K);
        test(H, 0x2);
        je(l3b74, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l3b74);
        mov(H, K);
        test(H, 0x1);
        je(l3bc0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x1);
        add(BO, 0x1);
        align(4);

        L(l3bc0);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l3be8);
        mov(A, AO);
        align(4);

        L(l3bec);
        vzeroupper();
        add(rsp, stack_alloc_size);
        postamble();
    }
    outLocalLabel();

#undef M
#undef N
#undef K
#undef A
#undef B
#undef C
#undef LDC
#undef AA
#undef I
#undef J
#undef H
#undef AO
#undef BO
#undef CO1
#undef CO2
#ifdef _WIN32
#undef ARG_A
#undef ARG_B
#endif
#undef ARG_C
#undef ARG_LDC
#undef ARG_COFFSET_R
#undef COFFSET_RX
#undef COFFSET_RY
}

} // namespace cpu
} // namespace impl
} // namespace dnnl
