/*******************************************************************************
* Copyright 2019 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#include "common_u8.hpp"
#include "jit_generator.hpp"

namespace dnnl {
namespace impl {
namespace cpu {

jit_avx2_kernel_r_gemm_s8u8s32_kern::jit_avx2_kernel_r_gemm_s8u8s32_kern()
    : jit_generator(nullptr, S8U8S32_COMPUTE_KERNEL_CODE_SIZE) {

#ifndef _WIN32

#define M rdi
#define N rsi
#define K rdx
#define A r8
#define B r9
#define C r10
#define LDC r11

#define AA rcx
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#else

#define M rcx
#define N rdx
#define K r8
#define A rsi
#define B r9
#define C r10
#define LDC r11

#define AA rdi
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#endif

#ifdef _WIN32
#define ARG_A (args_offset - 16) + rsp
#define ARG_B (args_offset - 8) + rsp
#endif
#define ARG_C (args_offset + 0) + rsp
#define ARG_LDC (args_offset + 8) + rsp
#define ARG_COFFSET_R (args_offset + 24) + rsp

#define COFFSET_RX 16 + rsp
#define COFFSET_RY 24 + rsp

    inLocalLabel();
    {

        Xbyak::Label l1020;
        Xbyak::Label l109c;
        Xbyak::Label l10e0;
        Xbyak::Label l10f4;
        Xbyak::Label l1134;
        Xbyak::Label l1154;
        Xbyak::Label l123c;
        Xbyak::Label l124c;
        Xbyak::Label l133c;
        Xbyak::Label l1348;
        Xbyak::Label l1430;
        Xbyak::Label l1490;
        Xbyak::Label l1508;
        Xbyak::Label l1590;
        Xbyak::Label l1628;
        Xbyak::Label l1658;
        Xbyak::Label l16f4;
        Xbyak::Label l1704;
        Xbyak::Label l17a8;
        Xbyak::Label l17b4;
        Xbyak::Label l1850;
        Xbyak::Label l188c;
        Xbyak::Label l18e0;
        Xbyak::Label l1940;
        Xbyak::Label l198c;
        Xbyak::Label l19b8;
        Xbyak::Label l1a28;
        Xbyak::Label l1a34;
        Xbyak::Label l1aac;
        Xbyak::Label l1ab4;
        Xbyak::Label l1b24;
        Xbyak::Label l1b4c;
        Xbyak::Label l1b8c;
        Xbyak::Label l1bd8;
        Xbyak::Label l1c08;
        Xbyak::Label l1c0c;
        Xbyak::Label l1c4c;
        Xbyak::Label l1c6c;
        Xbyak::Label l1d54;
        Xbyak::Label l1d64;
        Xbyak::Label l1e54;
        Xbyak::Label l1e60;
        Xbyak::Label l1f48;
        Xbyak::Label l1fa8;
        Xbyak::Label l2020;
        Xbyak::Label l20a8;
        Xbyak::Label l2140;
        Xbyak::Label l2170;
        Xbyak::Label l220c;
        Xbyak::Label l221c;
        Xbyak::Label l22c0;
        Xbyak::Label l22cc;
        Xbyak::Label l2368;
        Xbyak::Label l23a4;
        Xbyak::Label l23f8;
        Xbyak::Label l2458;
        Xbyak::Label l24a4;
        Xbyak::Label l24d0;
        Xbyak::Label l254;
        Xbyak::Label l2540;
        Xbyak::Label l254c;
        Xbyak::Label l25c8;
        Xbyak::Label l25d0;
        Xbyak::Label l264;
        Xbyak::Label l2640;
        Xbyak::Label l2668;
        Xbyak::Label l26a8;
        Xbyak::Label l26f4;
        Xbyak::Label l2724;
        Xbyak::Label l2728;
        Xbyak::Label l2768;
        Xbyak::Label l2788;
        Xbyak::Label l2870;
        Xbyak::Label l2880;
        Xbyak::Label l2970;
        Xbyak::Label l297c;
        Xbyak::Label l2a64;
        Xbyak::Label l2ac4;
        Xbyak::Label l2b3c;
        Xbyak::Label l2bc4;
        Xbyak::Label l2c5c;
        Xbyak::Label l2c8c;
        Xbyak::Label l2d28;
        Xbyak::Label l2d38;
        Xbyak::Label l2ddc;
        Xbyak::Label l2de8;
        Xbyak::Label l2e84;
        Xbyak::Label l2ec0;
        Xbyak::Label l2f14;
        Xbyak::Label l2f74;
        Xbyak::Label l2fc0;
        Xbyak::Label l2fec;
        Xbyak::Label l305c;
        Xbyak::Label l3068;
        Xbyak::Label l30e4;
        Xbyak::Label l30ec;
        Xbyak::Label l315c;
        Xbyak::Label l3184;
        Xbyak::Label l31c4;
        Xbyak::Label l3210;
        Xbyak::Label l3240;
        Xbyak::Label l3244;
        Xbyak::Label l3284;
        Xbyak::Label l32a4;
        Xbyak::Label l338c;
        Xbyak::Label l339c;
        Xbyak::Label l348c;
        Xbyak::Label l3498;
        Xbyak::Label l3580;
        Xbyak::Label l35e0;
        Xbyak::Label l3658;
        Xbyak::Label l36e0;
        Xbyak::Label l3778;
        Xbyak::Label l37a8;
        Xbyak::Label l3844;
        Xbyak::Label l3854;
        Xbyak::Label l38f8;
        Xbyak::Label l3904;
        Xbyak::Label l39a0;
        Xbyak::Label l39dc;
        Xbyak::Label l3a30;
        Xbyak::Label l3a90;
        Xbyak::Label l3adc;
        Xbyak::Label l3b08;
        Xbyak::Label l3b78;
        Xbyak::Label l3b84;
        Xbyak::Label l3c00;
        Xbyak::Label l3c08;
        Xbyak::Label l3c78;
        Xbyak::Label l3ca0;
        Xbyak::Label l3ce0;
        Xbyak::Label l3d0;
        Xbyak::Label l3d2c;
        Xbyak::Label l3d5c;
        Xbyak::Label l3d60;
        Xbyak::Label l3dc;
        Xbyak::Label l538;
        Xbyak::Label l5d0;
        Xbyak::Label l694;
        Xbyak::Label l774;
        Xbyak::Label l870;
        Xbyak::Label l8a4;
        Xbyak::Label l980;
        Xbyak::Label l990;
        Xbyak::Label la0;
        Xbyak::Label la7c;
        Xbyak::Label la88;
        Xbyak::Label lb64;
        Xbyak::Label lbb8;
        Xbyak::Label lc38;
        Xbyak::Label lcd8;
        Xbyak::Label ld0;
        Xbyak::Label ld58;
        Xbyak::Label ld8c;
        Xbyak::Label le28;
        Xbyak::Label le38;
        Xbyak::Label lee4;
        Xbyak::Label lef0;
        Xbyak::Label lf8;
        Xbyak::Label lf8c;
        Xbyak::Label lfc0;

        auto stack_alloc_size = 32;
        auto args_offset = stack_alloc_size + get_size_of_abi_save_regs() + 8;
#ifdef _WIN32
        args_offset += 48;
#endif
        preamble();
        sub(rsp, stack_alloc_size);
#ifdef _WIN32
        mov(A, ptr[ARG_A]);
        mov(B, ptr[ARG_B]);
#endif

        mov(C, qword[ARG_C]);
        mov(LDC, qword[ARG_LDC]);
        sub(A, -64);
        sub(B, -64);
        mov(M, qword[M]);
        mov(N, qword[N]);
        mov(K, qword[K]);
        lea(LDC, ptr[LDC * 4 + 0x0]);
        mov(H, qword[ARG_COFFSET_R]);
        mov(qword[COFFSET_RX], H);
        vxorps(ymm8, ymm8, ymm8);
        vxorps(ymm9, ymm9, ymm9);
        vxorps(ymm10, ymm10, ymm10);
        vxorps(ymm11, ymm11, ymm11);
        vxorps(ymm12, ymm12, ymm12);
        vxorps(ymm13, ymm13, ymm13);
        vxorps(ymm14, ymm14, ymm14);
        vxorps(ymm15, ymm15, ymm15);
        mov(H, 0x1);
        movq(xmm7, H);
        vpbroadcastw(ymm7, xmm7);
        mov(J, M);
        cmp(J, 0x10);
        jl(l10f4, T_NEAR);
        align(4);

        L(la0);
        mov(CO1, C);
        add(C, 0x40);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x20);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l870, T_NEAR);
        align(4);

        L(ld0);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(l538, T_NEAR);
        sub(H, 0x14);
        jle(l254, T_NEAR);
        align(4);

        L(lf8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(lf8, T_NEAR);
        align(4);

        L(l254);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l3d0, T_NEAR);
        align(4);

        L(l264);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l264, T_NEAR);
        align(4);

        L(l3d0);
        add(H, 0x10);
        jle(l538, T_NEAR);
        align(4);

        L(l3dc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3dc, T_NEAR);
        align(4);

        L(l538);
        mov(H, K);
        test(H, 0x4);
        je(l5d0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x40);
        add(BO, 0x10);
        align(4);

        L(l5d0);
        mov(H, K);
        test(H, 0x2);
        je(l694, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l694);
        mov(H, K);
        test(H, 0x1);
        je(l774, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l774);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm12, ymm12, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm13, ymm13, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm14, ymm14, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        vpaddd(ymm15, ymm15, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + 0x20]);
        vpaddd(ymm0, ymm12, ymm0);
        vmovdqu(yword[CO1 + 0x20], ymm0);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(ymm0, yword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(yword[CO1 + LDC * 1], ymm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(ymm0, yword[CO1 + LDC * 1 + 0x20]);
        vpaddd(ymm0, ymm13, ymm0);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm0);
        vxorps(ymm13, ymm13, ymm13);
        vmovdqu(ymm0, yword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovdqu(yword[CO1 + LDC * 2], ymm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(ymm0, yword[CO1 + LDC * 2 + 0x20]);
        vpaddd(ymm0, ymm14, ymm0);
        vmovdqu(yword[CO1 + LDC * 2 + 0x20], ymm0);
        vxorps(ymm14, ymm14, ymm14);
        vmovdqu(ymm0, yword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovdqu(yword[CO1 + H * 1], ymm0);
        vxorps(ymm11, ymm11, ymm11);
        vmovdqu(ymm0, yword[CO1 + H * 1 + 0x20]);
        vpaddd(ymm0, ymm15, ymm0);
        vmovdqu(yword[CO1 + H * 1 + 0x20], ymm0);
        vxorps(ymm15, ymm15, ymm15);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(ld0, T_NEAR);
        align(4);

        L(l870);
        test(I, 0x2);
        jle(ld58, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lb64, T_NEAR);
        sub(H, 0x12);
        jle(l980, T_NEAR);
        align(4);

        L(l8a4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l8a4, T_NEAR);
        align(4);

        L(l980);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(la7c, T_NEAR);
        align(4);

        L(l990);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l990, T_NEAR);
        align(4);

        L(la7c);
        add(H, 0x10);
        jle(lb64, T_NEAR);
        align(4);

        L(la88);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(la88, T_NEAR);
        align(4);

        L(lb64);
        mov(H, K);
        test(H, 0x4);
        je(lbb8, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x40);
        add(BO, 0x8);
        align(4);

        L(lbb8);
        mov(H, K);
        test(H, 0x2);
        je(lc38, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(lc38);
        mov(H, K);
        test(H, 0x1);
        je(lcd8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(lcd8);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm12, ymm12, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm13, ymm13, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + 0x20]);
        vpaddd(ymm0, ymm12, ymm0);
        vmovdqu(yword[CO1 + 0x20], ymm0);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(ymm0, yword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(yword[CO1 + LDC * 1], ymm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(ymm0, yword[CO1 + LDC * 1 + 0x20]);
        vpaddd(ymm0, ymm13, ymm0);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm0);
        vxorps(ymm13, ymm13, ymm13);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(ld58);
        test(I, 0x1);
        jle(l10e0, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lf8c, T_NEAR);
        sub(H, 0x11);
        jle(le28, T_NEAR);
        align(4);

        L(ld8c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(ld8c, T_NEAR);
        align(4);

        L(le28);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(lee4, T_NEAR);
        align(4);

        L(le38);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(le38, T_NEAR);
        align(4);

        L(lee4);
        add(H, 0x10);
        jle(lf8c, T_NEAR);
        align(4);

        L(lef0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(lef0, T_NEAR);
        align(4);

        L(lf8c);
        mov(H, K);
        test(H, 0x4);
        je(lfc0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x40);
        add(BO, 0x4);
        align(4);

        L(lfc0);
        mov(H, K);
        test(H, 0x2);
        je(l1020, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x20);
        add(BO, 0x2);
        align(4);

        L(l1020);
        mov(H, K);
        test(H, 0x1);
        je(l109c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x10);
        add(BO, 0x1);
        align(4);

        L(l109c);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm12, ymm12, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + 0x20]);
        vpaddd(ymm0, ymm12, ymm0);
        vmovdqu(yword[CO1 + 0x20], ymm0);
        vxorps(ymm12, ymm12, ymm12);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l10e0);
        mov(A, AO);
        sub(J, 0x10);
        cmp(J, 0x10);
        jge(la0, T_NEAR);
        align(4);

        L(l10f4);
        test(J, 0x8);
        jle(l1c0c, T_NEAR);
        mov(CO1, C);
        add(C, 0x20);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x10);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l1628, T_NEAR);
        align(4);

        L(l1134);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1430, T_NEAR);
        sub(H, 0x14);
        jle(l123c, T_NEAR);
        align(4);

        L(l1154);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1154, T_NEAR);
        align(4);

        L(l123c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l133c, T_NEAR);
        align(4);

        L(l124c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l124c, T_NEAR);
        align(4);

        L(l133c);
        add(H, 0x10);
        jle(l1430, T_NEAR);
        align(4);

        L(l1348);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1348, T_NEAR);
        align(4);

        L(l1430);
        mov(H, K);
        test(H, 0x4);
        je(l1490, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x20);
        add(BO, 0x10);
        align(4);

        L(l1490);
        mov(H, K);
        test(H, 0x2);
        je(l1508, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l1508);
        mov(H, K);
        test(H, 0x1);
        je(l1590, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l1590);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(yword[CO1 + LDC * 1], ymm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(ymm0, yword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovdqu(yword[CO1 + LDC * 2], ymm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(ymm0, yword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovdqu(yword[CO1 + H * 1], ymm0);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l1134, T_NEAR);
        align(4);

        L(l1628);
        test(I, 0x2);
        jle(l198c, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1850, T_NEAR);
        sub(H, 0x12);
        jle(l16f4, T_NEAR);
        align(4);

        L(l1658);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l1658, T_NEAR);
        align(4);

        L(l16f4);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l17a8, T_NEAR);
        align(4);

        L(l1704);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l1704, T_NEAR);
        align(4);

        L(l17a8);
        add(H, 0x10);
        jle(l1850, T_NEAR);
        align(4);

        L(l17b4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l17b4, T_NEAR);
        align(4);

        L(l1850);
        mov(H, K);
        test(H, 0x4);
        je(l188c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l188c);
        mov(H, K);
        test(H, 0x2);
        je(l18e0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l18e0);
        mov(H, K);
        test(H, 0x1);
        je(l1940, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l1940);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(yword[CO1 + LDC * 1], ymm0);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l198c);
        test(I, 0x1);
        jle(l1c08, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1b24, T_NEAR);
        sub(H, 0x11);
        jle(l1a28, T_NEAR);
        align(4);

        L(l19b8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l19b8, T_NEAR);
        align(4);

        L(l1a28);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l1aac, T_NEAR);
        align(4);

        L(l1a34);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l1a34, T_NEAR);
        align(4);

        L(l1aac);
        add(H, 0x10);
        jle(l1b24, T_NEAR);
        align(4);

        L(l1ab4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l1ab4, T_NEAR);
        align(4);

        L(l1b24);
        mov(H, K);
        test(H, 0x4);
        je(l1b4c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(l1b4c);
        mov(H, K);
        test(H, 0x2);
        je(l1b8c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(l1b8c);
        mov(H, K);
        test(H, 0x1);
        je(l1bd8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x1);
        align(4);

        L(l1bd8);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l1c08);
        mov(A, AO);
        align(4);

        L(l1c0c);
        test(J, 0x4);
        jle(l2728, T_NEAR);
        mov(CO1, C);
        add(C, 0x10);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x8);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l2140, T_NEAR);
        align(4);

        L(l1c4c);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1f48, T_NEAR);
        sub(H, 0x14);
        jle(l1d54, T_NEAR);
        align(4);

        L(l1c6c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1c6c, T_NEAR);
        align(4);

        L(l1d54);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l1e54, T_NEAR);
        align(4);

        L(l1d64);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1d64, T_NEAR);
        align(4);

        L(l1e54);
        add(H, 0x10);
        jle(l1f48, T_NEAR);
        align(4);

        L(l1e60);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1e60, T_NEAR);
        align(4);

        L(l1f48);
        mov(H, K);
        test(H, 0x4);
        je(l1fa8, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x10);
        align(4);

        L(l1fa8);
        mov(H, K);
        test(H, 0x2);
        je(l2020, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l2020);
        mov(H, K);
        test(H, 0x1);
        je(l20a8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l20a8);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xmm0, xword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(xword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xmm0, xword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(xword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(xmm0, xword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovdqu(xword[CO1 + LDC * 2], xmm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(xmm0, xword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovdqu(xword[CO1 + H * 1], xmm0);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l1c4c, T_NEAR);
        align(4);

        L(l2140);
        test(I, 0x2);
        jle(l24a4, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2368, T_NEAR);
        sub(H, 0x12);
        jle(l220c, T_NEAR);
        align(4);

        L(l2170);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2170, T_NEAR);
        align(4);

        L(l220c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l22c0, T_NEAR);
        align(4);

        L(l221c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l221c, T_NEAR);
        align(4);

        L(l22c0);
        add(H, 0x10);
        jle(l2368, T_NEAR);
        align(4);

        L(l22cc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l22cc, T_NEAR);
        align(4);

        L(l2368);
        mov(H, K);
        test(H, 0x4);
        je(l23a4, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l23a4);
        mov(H, K);
        test(H, 0x2);
        je(l23f8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l23f8);
        mov(H, K);
        test(H, 0x1);
        je(l2458, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l2458);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xmm0, xword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(xword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xmm0, xword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(xword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l24a4);
        test(I, 0x1);
        jle(l2724, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2640, T_NEAR);
        sub(H, 0x11);
        jle(l2540, T_NEAR);
        align(4);

        L(l24d0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l24d0, T_NEAR);
        align(4);

        L(l2540);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l25c8, T_NEAR);
        align(4);

        L(l254c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l254c, T_NEAR);
        align(4);

        L(l25c8);
        add(H, 0x10);
        jle(l2640, T_NEAR);
        align(4);

        L(l25d0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l25d0, T_NEAR);
        align(4);

        L(l2640);
        mov(H, K);
        test(H, 0x4);
        je(l2668, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l2668);
        mov(H, K);
        test(H, 0x2);
        je(l26a8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l26a8);
        mov(H, K);
        test(H, 0x1);
        je(l26f4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x1);
        align(4);

        L(l26f4);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xmm0, xword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(xword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l2724);
        mov(A, AO);
        align(4);

        L(l2728);
        test(J, 0x2);
        jle(l3244, T_NEAR);
        mov(CO1, C);
        add(C, 0x8);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x4);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l2c5c, T_NEAR);
        align(4);

        L(l2768);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2a64, T_NEAR);
        sub(H, 0x14);
        jle(l2870, T_NEAR);
        align(4);

        L(l2788);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2788, T_NEAR);
        align(4);

        L(l2870);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l2970, T_NEAR);
        align(4);

        L(l2880);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2880, T_NEAR);
        align(4);

        L(l2970);
        add(H, 0x10);
        jle(l2a64, T_NEAR);
        align(4);

        L(l297c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l297c, T_NEAR);
        align(4);

        L(l2a64);
        mov(H, K);
        test(H, 0x4);
        je(l2ac4, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x10);
        align(4);

        L(l2ac4);
        mov(H, K);
        test(H, 0x2);
        je(l2b3c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l2b3c);
        mov(H, K);
        test(H, 0x1);
        je(l2bc4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l2bc4);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovsd(xmm0, qword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovlps(qword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovsd(xmm0, qword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovlps(qword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovsd(xmm0, qword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovlps(qword[CO1 + LDC * 2], xmm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovsd(xmm0, qword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovlps(qword[CO1 + H * 1], xmm0);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l2768, T_NEAR);
        align(4);

        L(l2c5c);
        test(I, 0x2);
        jle(l2fc0, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2e84, T_NEAR);
        sub(H, 0x12);
        jle(l2d28, T_NEAR);
        align(4);

        L(l2c8c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2c8c, T_NEAR);
        align(4);

        L(l2d28);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l2ddc, T_NEAR);
        align(4);

        L(l2d38);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2d38, T_NEAR);
        align(4);

        L(l2ddc);
        add(H, 0x10);
        jle(l2e84, T_NEAR);
        align(4);

        L(l2de8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2de8, T_NEAR);
        align(4);

        L(l2e84);
        mov(H, K);
        test(H, 0x4);
        je(l2ec0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l2ec0);
        mov(H, K);
        test(H, 0x2);
        je(l2f14, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l2f14);
        mov(H, K);
        test(H, 0x1);
        je(l2f74, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l2f74);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovsd(xmm0, qword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovlps(qword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovsd(xmm0, qword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovlps(qword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l2fc0);
        test(I, 0x1);
        jle(l3240, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l315c, T_NEAR);
        sub(H, 0x11);
        jle(l305c, T_NEAR);
        align(4);

        L(l2fec);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2fec, T_NEAR);
        align(4);

        L(l305c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l30e4, T_NEAR);
        align(4);

        L(l3068);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3068, T_NEAR);
        align(4);

        L(l30e4);
        add(H, 0x10);
        jle(l315c, T_NEAR);
        align(4);

        L(l30ec);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l30ec, T_NEAR);
        align(4);

        L(l315c);
        mov(H, K);
        test(H, 0x4);
        je(l3184, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l3184);
        mov(H, K);
        test(H, 0x2);
        je(l31c4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l31c4);
        mov(H, K);
        test(H, 0x1);
        je(l3210, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x1);
        align(4);

        L(l3210);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovsd(xmm0, qword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovlps(qword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l3240);
        mov(A, AO);
        align(4);

        L(l3244);
        test(J, 0x1);
        jle(l3d60, T_NEAR);
        mov(CO1, C);
        add(C, 0x4);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x2);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_RX]);
        mov(qword[COFFSET_RY], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l3778, T_NEAR);
        align(4);

        L(l3284);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3580, T_NEAR);
        sub(H, 0x14);
        jle(l338c, T_NEAR);
        align(4);

        L(l32a4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l32a4, T_NEAR);
        align(4);

        L(l338c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l348c, T_NEAR);
        align(4);

        L(l339c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l339c, T_NEAR);
        align(4);

        L(l348c);
        add(H, 0x10);
        jle(l3580, T_NEAR);
        align(4);

        L(l3498);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3498, T_NEAR);
        align(4);

        L(l3580);
        mov(H, K);
        test(H, 0x4);
        je(l35e0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x10);
        align(4);

        L(l35e0);
        mov(H, K);
        test(H, 0x2);
        je(l3658, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x8);
        align(4);

        L(l3658);
        mov(H, K);
        test(H, 0x1);
        je(l36e0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x1);
        add(BO, 0x4);
        align(4);

        L(l36e0);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        vbroadcastss(ymm0, dword[H + 0x8]);
        vpaddd(ymm10, ymm10, ymm0);
        vbroadcastss(ymm0, dword[H + 0xc]);
        vpaddd(ymm11, ymm11, ymm0);
        add(qword[COFFSET_RY], 0x10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(xmm0, dword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovss(dword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(xmm0, dword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovss(dword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovss(xmm0, dword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovss(dword[CO1 + LDC * 2], xmm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovss(xmm0, dword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovss(dword[CO1 + H * 1], xmm0);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l3284, T_NEAR);
        align(4);

        L(l3778);
        test(I, 0x2);
        jle(l3adc, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l39a0, T_NEAR);
        sub(H, 0x12);
        jle(l3844, T_NEAR);
        align(4);

        L(l37a8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l37a8, T_NEAR);
        align(4);

        L(l3844);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l38f8, T_NEAR);
        align(4);

        L(l3854);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l3854, T_NEAR);
        align(4);

        L(l38f8);
        add(H, 0x10);
        jle(l39a0, T_NEAR);
        align(4);

        L(l3904);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l3904, T_NEAR);
        align(4);

        L(l39a0);
        mov(H, K);
        test(H, 0x4);
        je(l39dc, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l39dc);
        mov(H, K);
        test(H, 0x2);
        je(l3a30, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l3a30);
        mov(H, K);
        test(H, 0x1);
        je(l3a90, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x1);
        add(BO, 0x2);
        align(4);

        L(l3a90);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vbroadcastss(ymm0, dword[H + 0x4]);
        vpaddd(ymm9, ymm9, ymm0);
        add(qword[COFFSET_RY], 0x8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(xmm0, dword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovss(dword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(xmm0, dword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovss(dword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l3adc);
        test(I, 0x1);
        jle(l3d5c, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3c78, T_NEAR);
        sub(H, 0x11);
        jle(l3b78, T_NEAR);
        align(4);

        L(l3b08);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3b08, T_NEAR);
        align(4);

        L(l3b78);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l3c00, T_NEAR);
        align(4);

        L(l3b84);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3b84, T_NEAR);
        align(4);

        L(l3c00);
        add(H, 0x10);
        jle(l3c78, T_NEAR);
        align(4);

        L(l3c08);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3c08, T_NEAR);
        align(4);

        L(l3c78);
        mov(H, K);
        test(H, 0x4);
        je(l3ca0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l3ca0);
        mov(H, K);
        test(H, 0x2);
        je(l3ce0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l3ce0);
        mov(H, K);
        test(H, 0x1);
        je(l3d2c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x1);
        add(BO, 0x1);
        align(4);

        L(l3d2c);
        mov(H, qword[COFFSET_RY]);
        vbroadcastss(ymm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        add(qword[COFFSET_RY], 0x4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(xmm0, dword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovss(dword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l3d5c);
        mov(A, AO);
        align(4);

        L(l3d60);
        vzeroupper();
        add(rsp, stack_alloc_size);
        postamble();
    }
    outLocalLabel();

#undef M
#undef N
#undef K
#undef A
#undef B
#undef C
#undef LDC
#undef AA
#undef I
#undef J
#undef H
#undef AO
#undef BO
#undef CO1
#undef CO2
#ifdef _WIN32
#undef ARG_A
#undef ARG_B
#endif
#undef ARG_C
#undef ARG_LDC
#undef ARG_COFFSET_R
#undef COFFSET_RX
#undef COFFSET_RY
}

} // namespace cpu
} // namespace impl
} // namespace dnnl
