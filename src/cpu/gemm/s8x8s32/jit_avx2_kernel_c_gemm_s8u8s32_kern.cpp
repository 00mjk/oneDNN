/*******************************************************************************
* Copyright 2019 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#include "common_u8.hpp"
#include "jit_generator.hpp"

namespace dnnl {
namespace impl {
namespace cpu {

jit_avx2_kernel_c_gemm_s8u8s32_kern::jit_avx2_kernel_c_gemm_s8u8s32_kern()
    : jit_generator(nullptr, S8U8S32_COMPUTE_KERNEL_CODE_SIZE) {

#ifndef _WIN32

#define M rdi
#define N rsi
#define K rdx
#define A r8
#define B r9
#define C r10
#define LDC r11

#define AA rcx
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#else

#define M rcx
#define N rdx
#define K r8
#define A rsi
#define B r9
#define C r10
#define LDC r11

#define AA rdi
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#endif

#ifdef _WIN32
#define ARG_A (args_offset - 16) + rsp
#define ARG_B (args_offset - 8) + rsp
#endif
#define ARG_C (args_offset + 0) + rsp
#define ARG_LDC (args_offset + 8) + rsp
#define ARG_COFFSET_C (args_offset + 16) + rsp

#define COFFSET_CX 0 + rsp
#define COFFSET_CY 8 + rsp

    inLocalLabel();
    {

        Xbyak::Label l1010;
        Xbyak::Label l104;
        Xbyak::Label l108c;
        Xbyak::Label l10d0;
        Xbyak::Label l10e4;
        Xbyak::Label l1130;
        Xbyak::Label l1150;
        Xbyak::Label l1238;
        Xbyak::Label l1248;
        Xbyak::Label l1338;
        Xbyak::Label l1344;
        Xbyak::Label l142c;
        Xbyak::Label l148c;
        Xbyak::Label l1504;
        Xbyak::Label l158c;
        Xbyak::Label l160c;
        Xbyak::Label l163c;
        Xbyak::Label l16d8;
        Xbyak::Label l16e8;
        Xbyak::Label l178c;
        Xbyak::Label l1798;
        Xbyak::Label l1834;
        Xbyak::Label l1870;
        Xbyak::Label l18c4;
        Xbyak::Label l1924;
        Xbyak::Label l1964;
        Xbyak::Label l1990;
        Xbyak::Label l1a00;
        Xbyak::Label l1a0c;
        Xbyak::Label l1a84;
        Xbyak::Label l1a8c;
        Xbyak::Label l1afc;
        Xbyak::Label l1b24;
        Xbyak::Label l1b64;
        Xbyak::Label l1bb0;
        Xbyak::Label l1bd8;
        Xbyak::Label l1bdc;
        Xbyak::Label l1c28;
        Xbyak::Label l1c48;
        Xbyak::Label l1d30;
        Xbyak::Label l1d40;
        Xbyak::Label l1e30;
        Xbyak::Label l1e3c;
        Xbyak::Label l1f24;
        Xbyak::Label l1f84;
        Xbyak::Label l1ffc;
        Xbyak::Label l2084;
        Xbyak::Label l2104;
        Xbyak::Label l2134;
        Xbyak::Label l21d0;
        Xbyak::Label l21e0;
        Xbyak::Label l2284;
        Xbyak::Label l2290;
        Xbyak::Label l232c;
        Xbyak::Label l2368;
        Xbyak::Label l23bc;
        Xbyak::Label l241c;
        Xbyak::Label l245c;
        Xbyak::Label l2488;
        Xbyak::Label l24f8;
        Xbyak::Label l2504;
        Xbyak::Label l2580;
        Xbyak::Label l2588;
        Xbyak::Label l25f8;
        Xbyak::Label l260;
        Xbyak::Label l2620;
        Xbyak::Label l2660;
        Xbyak::Label l26ac;
        Xbyak::Label l26d4;
        Xbyak::Label l26d8;
        Xbyak::Label l270;
        Xbyak::Label l2724;
        Xbyak::Label l2744;
        Xbyak::Label l282c;
        Xbyak::Label l283c;
        Xbyak::Label l292c;
        Xbyak::Label l2938;
        Xbyak::Label l2a20;
        Xbyak::Label l2a80;
        Xbyak::Label l2af8;
        Xbyak::Label l2b80;
        Xbyak::Label l2c00;
        Xbyak::Label l2c30;
        Xbyak::Label l2ccc;
        Xbyak::Label l2cdc;
        Xbyak::Label l2d80;
        Xbyak::Label l2d8c;
        Xbyak::Label l2e28;
        Xbyak::Label l2e64;
        Xbyak::Label l2eb8;
        Xbyak::Label l2f18;
        Xbyak::Label l2f58;
        Xbyak::Label l2f84;
        Xbyak::Label l2ff4;
        Xbyak::Label l3000;
        Xbyak::Label l307c;
        Xbyak::Label l3084;
        Xbyak::Label l30f4;
        Xbyak::Label l311c;
        Xbyak::Label l315c;
        Xbyak::Label l31a8;
        Xbyak::Label l31d0;
        Xbyak::Label l31d4;
        Xbyak::Label l3220;
        Xbyak::Label l3240;
        Xbyak::Label l3328;
        Xbyak::Label l3338;
        Xbyak::Label l3428;
        Xbyak::Label l3434;
        Xbyak::Label l351c;
        Xbyak::Label l357c;
        Xbyak::Label l35f4;
        Xbyak::Label l367c;
        Xbyak::Label l36fc;
        Xbyak::Label l372c;
        Xbyak::Label l37c8;
        Xbyak::Label l37d8;
        Xbyak::Label l387c;
        Xbyak::Label l3888;
        Xbyak::Label l3924;
        Xbyak::Label l3960;
        Xbyak::Label l39b4;
        Xbyak::Label l3a14;
        Xbyak::Label l3a54;
        Xbyak::Label l3a80;
        Xbyak::Label l3af0;
        Xbyak::Label l3afc;
        Xbyak::Label l3b78;
        Xbyak::Label l3b80;
        Xbyak::Label l3bf0;
        Xbyak::Label l3c18;
        Xbyak::Label l3c58;
        Xbyak::Label l3ca4;
        Xbyak::Label l3ccc;
        Xbyak::Label l3cd0;
        Xbyak::Label l3dc;
        Xbyak::Label l3e8;
        Xbyak::Label l544;
        Xbyak::Label l5dc;
        Xbyak::Label l6a0;
        Xbyak::Label l780;
        Xbyak::Label l868;
        Xbyak::Label l89c;
        Xbyak::Label l978;
        Xbyak::Label l988;
        Xbyak::Label la0;
        Xbyak::Label la74;
        Xbyak::Label la80;
        Xbyak::Label lb5c;
        Xbyak::Label lbb0;
        Xbyak::Label lc30;
        Xbyak::Label lcd0;
        Xbyak::Label ld48;
        Xbyak::Label ld7c;
        Xbyak::Label ldc;
        Xbyak::Label le18;
        Xbyak::Label le28;
        Xbyak::Label led4;
        Xbyak::Label lee0;
        Xbyak::Label lf7c;
        Xbyak::Label lfb0;

        auto stack_alloc_size = 32;
        auto args_offset = stack_alloc_size + get_size_of_abi_save_regs() + 8;
#ifdef _WIN32
        args_offset += 48;
#endif
        preamble();
        sub(rsp, stack_alloc_size);
#ifdef _WIN32
        mov(A, ptr[ARG_A]);
        mov(B, ptr[ARG_B]);
#endif

        mov(C, qword[ARG_C]);
        mov(LDC, qword[ARG_LDC]);
        sub(A, -64);
        sub(B, -64);
        mov(M, qword[M]);
        mov(N, qword[N]);
        mov(K, qword[K]);
        lea(LDC, ptr[LDC * 4 + 0x0]);
        mov(H, qword[ARG_COFFSET_C]);
        mov(qword[COFFSET_CX], H);
        vxorps(ymm8, ymm8, ymm8);
        vxorps(ymm9, ymm9, ymm9);
        vxorps(ymm10, ymm10, ymm10);
        vxorps(ymm11, ymm11, ymm11);
        vxorps(ymm12, ymm12, ymm12);
        vxorps(ymm13, ymm13, ymm13);
        vxorps(ymm14, ymm14, ymm14);
        vxorps(ymm15, ymm15, ymm15);
        mov(H, 0x1);
        movq(xmm7, H);
        vpbroadcastw(ymm7, xmm7);
        mov(J, M);
        cmp(J, 0x10);
        jl(l10e4, T_NEAR);
        align(4);

        L(la0);
        mov(CO1, C);
        add(C, 0x40);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x20);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x40);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l868, T_NEAR);
        align(4);

        L(ldc);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(l544, T_NEAR);
        sub(H, 0x14);
        jle(l260, T_NEAR);
        align(4);

        L(l104);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l104, T_NEAR);
        align(4);

        L(l260);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l3dc, T_NEAR);
        align(4);

        L(l270);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l270, T_NEAR);
        align(4);

        L(l3dc);
        add(H, 0x10);
        jle(l544, T_NEAR);
        align(4);

        L(l3e8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3e8, T_NEAR);
        align(4);

        L(l544);
        mov(H, K);
        test(H, 0x4);
        je(l5dc, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x40);
        add(BO, 0x10);
        align(4);

        L(l5dc);
        mov(H, K);
        test(H, 0x2);
        je(l6a0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l6a0);
        mov(H, K);
        test(H, 0x1);
        je(l780, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l780);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        vmovdqu(ymm0, yword[H + 0x20]);
        vpaddd(ymm12, ymm12, ymm0);
        vpaddd(ymm13, ymm13, ymm0);
        vpaddd(ymm14, ymm14, ymm0);
        vpaddd(ymm15, ymm15, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + 0x20]);
        vpaddd(ymm0, ymm12, ymm0);
        vmovdqu(yword[CO1 + 0x20], ymm0);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(ymm0, yword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(yword[CO1 + LDC * 1], ymm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(ymm0, yword[CO1 + LDC * 1 + 0x20]);
        vpaddd(ymm0, ymm13, ymm0);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm0);
        vxorps(ymm13, ymm13, ymm13);
        vmovdqu(ymm0, yword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovdqu(yword[CO1 + LDC * 2], ymm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(ymm0, yword[CO1 + LDC * 2 + 0x20]);
        vpaddd(ymm0, ymm14, ymm0);
        vmovdqu(yword[CO1 + LDC * 2 + 0x20], ymm0);
        vxorps(ymm14, ymm14, ymm14);
        vmovdqu(ymm0, yword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovdqu(yword[CO1 + H * 1], ymm0);
        vxorps(ymm11, ymm11, ymm11);
        vmovdqu(ymm0, yword[CO1 + H * 1 + 0x20]);
        vpaddd(ymm0, ymm15, ymm0);
        vmovdqu(yword[CO1 + H * 1 + 0x20], ymm0);
        vxorps(ymm15, ymm15, ymm15);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(ldc, T_NEAR);
        align(4);

        L(l868);
        test(I, 0x2);
        jle(ld48, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lb5c, T_NEAR);
        sub(H, 0x12);
        jle(l978, T_NEAR);
        align(4);

        L(l89c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l89c, T_NEAR);
        align(4);

        L(l978);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(la74, T_NEAR);
        align(4);

        L(l988);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l988, T_NEAR);
        align(4);

        L(la74);
        add(H, 0x10);
        jle(lb5c, T_NEAR);
        align(4);

        L(la80);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(la80, T_NEAR);
        align(4);

        L(lb5c);
        mov(H, K);
        test(H, 0x4);
        je(lbb0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x40);
        add(BO, 0x8);
        align(4);

        L(lbb0);
        mov(H, K);
        test(H, 0x2);
        je(lc30, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(lc30);
        mov(H, K);
        test(H, 0x1);
        je(lcd0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(lcd0);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vmovdqu(ymm0, yword[H + 0x20]);
        vpaddd(ymm12, ymm12, ymm0);
        vpaddd(ymm13, ymm13, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + 0x20]);
        vpaddd(ymm0, ymm12, ymm0);
        vmovdqu(yword[CO1 + 0x20], ymm0);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(ymm0, yword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(yword[CO1 + LDC * 1], ymm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(ymm0, yword[CO1 + LDC * 1 + 0x20]);
        vpaddd(ymm0, ymm13, ymm0);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm0);
        vxorps(ymm13, ymm13, ymm13);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(ld48);
        test(I, 0x1);
        jle(l10d0, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lf7c, T_NEAR);
        sub(H, 0x11);
        jle(le18, T_NEAR);
        align(4);

        L(ld7c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(ld7c, T_NEAR);
        align(4);

        L(le18);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(led4, T_NEAR);
        align(4);

        L(le28);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(le28, T_NEAR);
        align(4);

        L(led4);
        add(H, 0x10);
        jle(lf7c, T_NEAR);
        align(4);

        L(lee0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(lee0, T_NEAR);
        align(4);

        L(lf7c);
        mov(H, K);
        test(H, 0x4);
        je(lfb0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x40);
        add(BO, 0x4);
        align(4);

        L(lfb0);
        mov(H, K);
        test(H, 0x2);
        je(l1010, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x20);
        add(BO, 0x2);
        align(4);

        L(l1010);
        mov(H, K);
        test(H, 0x1);
        je(l108c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x10);
        add(BO, 0x1);
        align(4);

        L(l108c);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vmovdqu(ymm0, yword[H + 0x20]);
        vpaddd(ymm12, ymm12, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + 0x20]);
        vpaddd(ymm0, ymm12, ymm0);
        vmovdqu(yword[CO1 + 0x20], ymm0);
        vxorps(ymm12, ymm12, ymm12);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l10d0);
        mov(A, AO);
        sub(J, 0x10);
        cmp(J, 0x10);
        jge(la0, T_NEAR);
        align(4);

        L(l10e4);
        test(J, 0x8);
        jle(l1bdc, T_NEAR);
        mov(CO1, C);
        add(C, 0x20);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x10);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x20);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l160c, T_NEAR);
        align(4);

        L(l1130);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l142c, T_NEAR);
        sub(H, 0x14);
        jle(l1238, T_NEAR);
        align(4);

        L(l1150);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1150, T_NEAR);
        align(4);

        L(l1238);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l1338, T_NEAR);
        align(4);

        L(l1248);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1248, T_NEAR);
        align(4);

        L(l1338);
        add(H, 0x10);
        jle(l142c, T_NEAR);
        align(4);

        L(l1344);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1344, T_NEAR);
        align(4);

        L(l142c);
        mov(H, K);
        test(H, 0x4);
        je(l148c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x20);
        add(BO, 0x10);
        align(4);

        L(l148c);
        mov(H, K);
        test(H, 0x2);
        je(l1504, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l1504);
        mov(H, K);
        test(H, 0x1);
        je(l158c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l158c);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(yword[CO1 + LDC * 1], ymm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(ymm0, yword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovdqu(yword[CO1 + LDC * 2], ymm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(ymm0, yword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovdqu(yword[CO1 + H * 1], ymm0);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l1130, T_NEAR);
        align(4);

        L(l160c);
        test(I, 0x2);
        jle(l1964, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1834, T_NEAR);
        sub(H, 0x12);
        jle(l16d8, T_NEAR);
        align(4);

        L(l163c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l163c, T_NEAR);
        align(4);

        L(l16d8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l178c, T_NEAR);
        align(4);

        L(l16e8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l16e8, T_NEAR);
        align(4);

        L(l178c);
        add(H, 0x10);
        jle(l1834, T_NEAR);
        align(4);

        L(l1798);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l1798, T_NEAR);
        align(4);

        L(l1834);
        mov(H, K);
        test(H, 0x4);
        je(l1870, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l1870);
        mov(H, K);
        test(H, 0x2);
        je(l18c4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l18c4);
        mov(H, K);
        test(H, 0x1);
        je(l1924, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l1924);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(ymm0, yword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(yword[CO1 + LDC * 1], ymm0);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l1964);
        test(I, 0x1);
        jle(l1bd8, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1afc, T_NEAR);
        sub(H, 0x11);
        jle(l1a00, T_NEAR);
        align(4);

        L(l1990);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l1990, T_NEAR);
        align(4);

        L(l1a00);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l1a84, T_NEAR);
        align(4);

        L(l1a0c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l1a0c, T_NEAR);
        align(4);

        L(l1a84);
        add(H, 0x10);
        jle(l1afc, T_NEAR);
        align(4);

        L(l1a8c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l1a8c, T_NEAR);
        align(4);

        L(l1afc);
        mov(H, K);
        test(H, 0x4);
        je(l1b24, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(l1b24);
        mov(H, K);
        test(H, 0x2);
        je(l1b64, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(l1b64);
        mov(H, K);
        test(H, 0x1);
        je(l1bb0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x1);
        align(4);

        L(l1bb0);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(ymm0, yword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(ymm0, yword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(yword[CO1], ymm0);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l1bd8);
        mov(A, AO);
        align(4);

        L(l1bdc);
        test(J, 0x4);
        jle(l26d8, T_NEAR);
        mov(CO1, C);
        add(C, 0x10);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x8);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x10);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l2104, T_NEAR);
        align(4);

        L(l1c28);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1f24, T_NEAR);
        sub(H, 0x14);
        jle(l1d30, T_NEAR);
        align(4);

        L(l1c48);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1c48, T_NEAR);
        align(4);

        L(l1d30);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l1e30, T_NEAR);
        align(4);

        L(l1d40);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1d40, T_NEAR);
        align(4);

        L(l1e30);
        add(H, 0x10);
        jle(l1f24, T_NEAR);
        align(4);

        L(l1e3c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1e3c, T_NEAR);
        align(4);

        L(l1f24);
        mov(H, K);
        test(H, 0x4);
        je(l1f84, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x10);
        align(4);

        L(l1f84);
        mov(H, K);
        test(H, 0x2);
        je(l1ffc, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l1ffc);
        mov(H, K);
        test(H, 0x1);
        je(l2084, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l2084);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(xmm0, xword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xmm0, xword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(xword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xmm0, xword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(xword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(xmm0, xword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovdqu(xword[CO1 + LDC * 2], xmm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(xmm0, xword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovdqu(xword[CO1 + H * 1], xmm0);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l1c28, T_NEAR);
        align(4);

        L(l2104);
        test(I, 0x2);
        jle(l245c, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l232c, T_NEAR);
        sub(H, 0x12);
        jle(l21d0, T_NEAR);
        align(4);

        L(l2134);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2134, T_NEAR);
        align(4);

        L(l21d0);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l2284, T_NEAR);
        align(4);

        L(l21e0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l21e0, T_NEAR);
        align(4);

        L(l2284);
        add(H, 0x10);
        jle(l232c, T_NEAR);
        align(4);

        L(l2290);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2290, T_NEAR);
        align(4);

        L(l232c);
        mov(H, K);
        test(H, 0x4);
        je(l2368, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l2368);
        mov(H, K);
        test(H, 0x2);
        je(l23bc, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l23bc);
        mov(H, K);
        test(H, 0x1);
        je(l241c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l241c);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(xmm0, xword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xmm0, xword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(xword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xmm0, xword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovdqu(xword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l245c);
        test(I, 0x1);
        jle(l26d4, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l25f8, T_NEAR);
        sub(H, 0x11);
        jle(l24f8, T_NEAR);
        align(4);

        L(l2488);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2488, T_NEAR);
        align(4);

        L(l24f8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l2580, T_NEAR);
        align(4);

        L(l2504);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2504, T_NEAR);
        align(4);

        L(l2580);
        add(H, 0x10);
        jle(l25f8, T_NEAR);
        align(4);

        L(l2588);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2588, T_NEAR);
        align(4);

        L(l25f8);
        mov(H, K);
        test(H, 0x4);
        je(l2620, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l2620);
        mov(H, K);
        test(H, 0x2);
        je(l2660, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l2660);
        mov(H, K);
        test(H, 0x1);
        je(l26ac, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x1);
        align(4);

        L(l26ac);
        mov(H, qword[COFFSET_CY]);
        vmovdqu(xmm0, xword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xmm0, xword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovdqu(xword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l26d4);
        mov(A, AO);
        align(4);

        L(l26d8);
        test(J, 0x2);
        jle(l31d4, T_NEAR);
        mov(CO1, C);
        add(C, 0x8);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x4);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x8);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l2c00, T_NEAR);
        align(4);

        L(l2724);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2a20, T_NEAR);
        sub(H, 0x14);
        jle(l282c, T_NEAR);
        align(4);

        L(l2744);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2744, T_NEAR);
        align(4);

        L(l282c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l292c, T_NEAR);
        align(4);

        L(l283c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l283c, T_NEAR);
        align(4);

        L(l292c);
        add(H, 0x10);
        jle(l2a20, T_NEAR);
        align(4);

        L(l2938);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2938, T_NEAR);
        align(4);

        L(l2a20);
        mov(H, K);
        test(H, 0x4);
        je(l2a80, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x10);
        align(4);

        L(l2a80);
        mov(H, K);
        test(H, 0x2);
        je(l2af8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l2af8);
        mov(H, K);
        test(H, 0x1);
        je(l2b80, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l2b80);
        mov(H, qword[COFFSET_CY]);
        vmovsd(xmm0, qword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovsd(xmm0, qword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovlps(qword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovsd(xmm0, qword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovlps(qword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovsd(xmm0, qword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovlps(qword[CO1 + LDC * 2], xmm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovsd(xmm0, qword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovlps(qword[CO1 + H * 1], xmm0);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l2724, T_NEAR);
        align(4);

        L(l2c00);
        test(I, 0x2);
        jle(l2f58, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2e28, T_NEAR);
        sub(H, 0x12);
        jle(l2ccc, T_NEAR);
        align(4);

        L(l2c30);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2c30, T_NEAR);
        align(4);

        L(l2ccc);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l2d80, T_NEAR);
        align(4);

        L(l2cdc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2cdc, T_NEAR);
        align(4);

        L(l2d80);
        add(H, 0x10);
        jle(l2e28, T_NEAR);
        align(4);

        L(l2d8c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2d8c, T_NEAR);
        align(4);

        L(l2e28);
        mov(H, K);
        test(H, 0x4);
        je(l2e64, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l2e64);
        mov(H, K);
        test(H, 0x2);
        je(l2eb8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l2eb8);
        mov(H, K);
        test(H, 0x1);
        je(l2f18, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l2f18);
        mov(H, qword[COFFSET_CY]);
        vmovsd(xmm0, qword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovsd(xmm0, qword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovlps(qword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovsd(xmm0, qword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovlps(qword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l2f58);
        test(I, 0x1);
        jle(l31d0, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l30f4, T_NEAR);
        sub(H, 0x11);
        jle(l2ff4, T_NEAR);
        align(4);

        L(l2f84);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2f84, T_NEAR);
        align(4);

        L(l2ff4);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l307c, T_NEAR);
        align(4);

        L(l3000);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3000, T_NEAR);
        align(4);

        L(l307c);
        add(H, 0x10);
        jle(l30f4, T_NEAR);
        align(4);

        L(l3084);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3084, T_NEAR);
        align(4);

        L(l30f4);
        mov(H, K);
        test(H, 0x4);
        je(l311c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l311c);
        mov(H, K);
        test(H, 0x2);
        je(l315c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l315c);
        mov(H, K);
        test(H, 0x1);
        je(l31a8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x1);
        align(4);

        L(l31a8);
        mov(H, qword[COFFSET_CY]);
        vmovsd(xmm0, qword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovsd(xmm0, qword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovlps(qword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l31d0);
        mov(A, AO);
        align(4);

        L(l31d4);
        test(J, 0x1);
        jle(l3cd0, T_NEAR);
        mov(CO1, C);
        add(C, 0x4);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x2);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(H, qword[COFFSET_CX]);
        mov(qword[COFFSET_CY], H);
        add(H, 0x4);
        mov(qword[COFFSET_CX], H);
        mov(I, N);
        cmp(I, 0x4);
        jl(l36fc, T_NEAR);
        align(4);

        L(l3220);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l351c, T_NEAR);
        sub(H, 0x14);
        jle(l3328, T_NEAR);
        align(4);

        L(l3240);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3240, T_NEAR);
        align(4);

        L(l3328);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l3428, T_NEAR);
        align(4);

        L(l3338);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3338, T_NEAR);
        align(4);

        L(l3428);
        add(H, 0x10);
        jle(l351c, T_NEAR);
        align(4);

        L(l3434);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3434, T_NEAR);
        align(4);

        L(l351c);
        mov(H, K);
        test(H, 0x4);
        je(l357c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x10);
        align(4);

        L(l357c);
        mov(H, K);
        test(H, 0x2);
        je(l35f4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x8);
        align(4);

        L(l35f4);
        mov(H, K);
        test(H, 0x1);
        je(l367c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x1);
        add(BO, 0x4);
        align(4);

        L(l367c);
        mov(H, qword[COFFSET_CY]);
        vmovss(xmm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        vpaddd(ymm10, ymm10, ymm0);
        vpaddd(ymm11, ymm11, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(xmm0, dword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovss(dword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(xmm0, dword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovss(dword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        vmovss(xmm0, dword[CO1 + LDC * 2]);
        vpaddd(ymm0, ymm10, ymm0);
        vmovss(dword[CO1 + LDC * 2], xmm0);
        vxorps(ymm10, ymm10, ymm10);
        vmovss(xmm0, dword[CO1 + H * 1]);
        vpaddd(ymm0, ymm11, ymm0);
        vmovss(dword[CO1 + H * 1], xmm0);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l3220, T_NEAR);
        align(4);

        L(l36fc);
        test(I, 0x2);
        jle(l3a54, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3924, T_NEAR);
        sub(H, 0x12);
        jle(l37c8, T_NEAR);
        align(4);

        L(l372c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l372c, T_NEAR);
        align(4);

        L(l37c8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l387c, T_NEAR);
        align(4);

        L(l37d8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l37d8, T_NEAR);
        align(4);

        L(l387c);
        add(H, 0x10);
        jle(l3924, T_NEAR);
        align(4);

        L(l3888);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l3888, T_NEAR);
        align(4);

        L(l3924);
        mov(H, K);
        test(H, 0x4);
        je(l3960, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l3960);
        mov(H, K);
        test(H, 0x2);
        je(l39b4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l39b4);
        mov(H, K);
        test(H, 0x1);
        je(l3a14, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x1);
        add(BO, 0x2);
        align(4);

        L(l3a14);
        mov(H, qword[COFFSET_CY]);
        vmovss(xmm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        vpaddd(ymm9, ymm9, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(xmm0, dword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovss(dword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(xmm0, dword[CO1 + LDC * 1]);
        vpaddd(ymm0, ymm9, ymm0);
        vmovss(dword[CO1 + LDC * 1], xmm0);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l3a54);
        test(I, 0x1);
        jle(l3ccc, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3bf0, T_NEAR);
        sub(H, 0x11);
        jle(l3af0, T_NEAR);
        align(4);

        L(l3a80);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3a80, T_NEAR);
        align(4);

        L(l3af0);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l3b78, T_NEAR);
        align(4);

        L(l3afc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3afc, T_NEAR);
        align(4);

        L(l3b78);
        add(H, 0x10);
        jle(l3bf0, T_NEAR);
        align(4);

        L(l3b80);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l3b80, T_NEAR);
        align(4);

        L(l3bf0);
        mov(H, K);
        test(H, 0x4);
        je(l3c18, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l3c18);
        mov(H, K);
        test(H, 0x2);
        je(l3c58, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l3c58);
        mov(H, K);
        test(H, 0x1);
        je(l3ca4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x1);
        add(BO, 0x1);
        align(4);

        L(l3ca4);
        mov(H, qword[COFFSET_CY]);
        vmovss(xmm0, dword[H]);
        vpaddd(ymm8, ymm8, ymm0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(xmm0, dword[CO1]);
        vpaddd(ymm0, ymm8, ymm0);
        vmovss(dword[CO1], xmm0);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l3ccc);
        mov(A, AO);
        align(4);

        L(l3cd0);
        vzeroupper();
        add(rsp, stack_alloc_size);
        postamble();
    }
    outLocalLabel();

#undef M
#undef N
#undef K
#undef A
#undef B
#undef C
#undef LDC
#undef AA
#undef I
#undef J
#undef H
#undef AO
#undef BO
#undef CO1
#undef CO2
#ifdef _WIN32
#undef ARG_A
#undef ARG_B
#endif
#undef ARG_C
#undef ARG_LDC
#undef ARG_COFFSET_C
#undef COFFSET_CX
#undef COFFSET_CY
}

} // namespace cpu
} // namespace impl
} // namespace dnnl
