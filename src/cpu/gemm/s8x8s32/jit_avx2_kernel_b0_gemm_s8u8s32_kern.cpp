/*******************************************************************************
* Copyright 2019 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#include "common_u8.hpp"
#include "jit_generator.hpp"

namespace dnnl {
namespace impl {
namespace cpu {

jit_avx2_kernel_b0_gemm_s8u8s32_kern::jit_avx2_kernel_b0_gemm_s8u8s32_kern()
    : jit_generator(nullptr, S8U8S32_COMPUTE_KERNEL_CODE_SIZE) {

#ifndef _WIN32

#define M rdi
#define N rsi
#define K rdx
#define A r8
#define B r9
#define C r10
#define LDC r11

#define AA rcx
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#else

#define M rcx
#define N rdx
#define K r8
#define A rsi
#define B r9
#define C r10
#define LDC r11

#define AA rdi
#define I r12
#define J r13
#define H rax
#define AO r14
#define BO r15
#define CO1 rbx
#define CO2 rbp

#endif

#ifdef _WIN32
#define ARG_A (args_offset - 16) + rsp
#define ARG_B (args_offset - 8) + rsp
#endif
#define ARG_C (args_offset + 0) + rsp
#define ARG_LDC (args_offset + 8) + rsp

    inLocalLabel();
    {

        Xbyak::Label l1014;
        Xbyak::Label l1034;
        Xbyak::Label l111c;
        Xbyak::Label l112c;
        Xbyak::Label l121c;
        Xbyak::Label l1228;
        Xbyak::Label l1310;
        Xbyak::Label l1370;
        Xbyak::Label l13e8;
        Xbyak::Label l1470;
        Xbyak::Label l14b0;
        Xbyak::Label l14e0;
        Xbyak::Label l157c;
        Xbyak::Label l158c;
        Xbyak::Label l1630;
        Xbyak::Label l163c;
        Xbyak::Label l16d8;
        Xbyak::Label l1714;
        Xbyak::Label l1768;
        Xbyak::Label l17c8;
        Xbyak::Label l17e4;
        Xbyak::Label l1810;
        Xbyak::Label l1880;
        Xbyak::Label l188c;
        Xbyak::Label l1904;
        Xbyak::Label l190c;
        Xbyak::Label l197c;
        Xbyak::Label l19a4;
        Xbyak::Label l19e4;
        Xbyak::Label l1a30;
        Xbyak::Label l1a44;
        Xbyak::Label l1a48;
        Xbyak::Label l1a80;
        Xbyak::Label l1aa0;
        Xbyak::Label l1b88;
        Xbyak::Label l1b98;
        Xbyak::Label l1c88;
        Xbyak::Label l1c94;
        Xbyak::Label l1d7c;
        Xbyak::Label l1ddc;
        Xbyak::Label l1e54;
        Xbyak::Label l1edc;
        Xbyak::Label l1f1c;
        Xbyak::Label l1f4c;
        Xbyak::Label l1fe8;
        Xbyak::Label l1ff8;
        Xbyak::Label l209c;
        Xbyak::Label l20a8;
        Xbyak::Label l2144;
        Xbyak::Label l2180;
        Xbyak::Label l21d4;
        Xbyak::Label l2234;
        Xbyak::Label l2250;
        Xbyak::Label l227c;
        Xbyak::Label l22ec;
        Xbyak::Label l22f8;
        Xbyak::Label l2374;
        Xbyak::Label l237c;
        Xbyak::Label l23ec;
        Xbyak::Label l240;
        Xbyak::Label l2414;
        Xbyak::Label l2454;
        Xbyak::Label l24a0;
        Xbyak::Label l24b4;
        Xbyak::Label l24b8;
        Xbyak::Label l24f0;
        Xbyak::Label l250;
        Xbyak::Label l2510;
        Xbyak::Label l25f8;
        Xbyak::Label l2608;
        Xbyak::Label l26f8;
        Xbyak::Label l2704;
        Xbyak::Label l27ec;
        Xbyak::Label l284c;
        Xbyak::Label l28c4;
        Xbyak::Label l294c;
        Xbyak::Label l298c;
        Xbyak::Label l29bc;
        Xbyak::Label l2a58;
        Xbyak::Label l2a68;
        Xbyak::Label l2b0c;
        Xbyak::Label l2b18;
        Xbyak::Label l2bb4;
        Xbyak::Label l2bf0;
        Xbyak::Label l2c44;
        Xbyak::Label l2ca4;
        Xbyak::Label l2cc0;
        Xbyak::Label l2cec;
        Xbyak::Label l2d5c;
        Xbyak::Label l2d68;
        Xbyak::Label l2de4;
        Xbyak::Label l2dec;
        Xbyak::Label l2e5c;
        Xbyak::Label l2e84;
        Xbyak::Label l2ec4;
        Xbyak::Label l2f10;
        Xbyak::Label l2f24;
        Xbyak::Label l2f28;
        Xbyak::Label l2f60;
        Xbyak::Label l2f80;
        Xbyak::Label l3068;
        Xbyak::Label l3078;
        Xbyak::Label l3168;
        Xbyak::Label l3174;
        Xbyak::Label l325c;
        Xbyak::Label l32bc;
        Xbyak::Label l3334;
        Xbyak::Label l33bc;
        Xbyak::Label l33fc;
        Xbyak::Label l342c;
        Xbyak::Label l34c8;
        Xbyak::Label l34d8;
        Xbyak::Label l357c;
        Xbyak::Label l3588;
        Xbyak::Label l3624;
        Xbyak::Label l3660;
        Xbyak::Label l36b4;
        Xbyak::Label l3714;
        Xbyak::Label l3730;
        Xbyak::Label l375c;
        Xbyak::Label l37cc;
        Xbyak::Label l37d8;
        Xbyak::Label l3854;
        Xbyak::Label l385c;
        Xbyak::Label l38cc;
        Xbyak::Label l38f4;
        Xbyak::Label l3934;
        Xbyak::Label l3980;
        Xbyak::Label l3994;
        Xbyak::Label l3998;
        Xbyak::Label l3bc;
        Xbyak::Label l3c8;
        Xbyak::Label l524;
        Xbyak::Label l5bc;
        Xbyak::Label l680;
        Xbyak::Label l760;
        Xbyak::Label l7cc;
        Xbyak::Label l800;
        Xbyak::Label l8dc;
        Xbyak::Label l8ec;
        Xbyak::Label l94;
        Xbyak::Label l9d8;
        Xbyak::Label l9e4;
        Xbyak::Label lac0;
        Xbyak::Label lb14;
        Xbyak::Label lb94;
        Xbyak::Label lbc;
        Xbyak::Label lc34;
        Xbyak::Label lc68;
        Xbyak::Label lc9c;
        Xbyak::Label ld38;
        Xbyak::Label ld48;
        Xbyak::Label ldf4;
        Xbyak::Label le00;
        Xbyak::Label le4;
        Xbyak::Label le9c;
        Xbyak::Label led0;
        Xbyak::Label lf30;
        Xbyak::Label lfac;
        Xbyak::Label lfc8;
        Xbyak::Label lfdc;

        auto stack_alloc_size = 32;
        auto args_offset = stack_alloc_size + get_size_of_abi_save_regs() + 8;
#ifdef _WIN32
        args_offset += 48;
#endif
        preamble();
        sub(rsp, stack_alloc_size);
#ifdef _WIN32
        mov(A, ptr[ARG_A]);
        mov(B, ptr[ARG_B]);
#endif

        mov(C, qword[ARG_C]);
        mov(LDC, qword[ARG_LDC]);
        sub(A, -64);
        sub(B, -64);
        mov(M, qword[M]);
        mov(N, qword[N]);
        mov(K, qword[K]);
        lea(LDC, ptr[LDC * 4 + 0x0]);
        vxorps(ymm8, ymm8, ymm8);
        vxorps(ymm9, ymm9, ymm9);
        vxorps(ymm10, ymm10, ymm10);
        vxorps(ymm11, ymm11, ymm11);
        vxorps(ymm12, ymm12, ymm12);
        vxorps(ymm13, ymm13, ymm13);
        vxorps(ymm14, ymm14, ymm14);
        vxorps(ymm15, ymm15, ymm15);
        mov(H, 0x1);
        movq(xmm7, H);
        vpbroadcastw(ymm7, xmm7);
        mov(J, M);
        cmp(J, 0x10);
        jl(lfdc, T_NEAR);
        align(4);

        L(l94);
        mov(CO1, C);
        add(C, 0x40);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x20);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(I, N);
        cmp(I, 0x4);
        jl(l7cc, T_NEAR);
        align(4);

        L(lbc);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(l524, T_NEAR);
        sub(H, 0x14);
        jle(l240, T_NEAR);
        align(4);

        L(le4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(le4, T_NEAR);
        align(4);

        L(l240);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l3bc, T_NEAR);
        align(4);

        L(l250);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l250, T_NEAR);
        align(4);

        L(l3bc);
        add(H, 0x10);
        jle(l524, T_NEAR);
        align(4);

        L(l3c8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3c8, T_NEAR);
        align(4);

        L(l524);
        mov(H, K);
        test(H, 0x4);
        je(l5bc, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x40);
        add(BO, 0x10);
        align(4);

        L(l5bc);
        mov(H, K);
        test(H, 0x2);
        je(l680, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l680);
        mov(H, K);
        test(H, 0x1);
        je(l760, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm14, ymm14, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm15, ymm15, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l760);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm13);
        vxorps(ymm13, ymm13, ymm13);
        vmovdqu(yword[CO1 + LDC * 2], ymm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(yword[CO1 + LDC * 2 + 0x20], ymm14);
        vxorps(ymm14, ymm14, ymm14);
        vmovdqu(yword[CO1 + H * 1], ymm11);
        vxorps(ymm11, ymm11, ymm11);
        vmovdqu(yword[CO1 + H * 1 + 0x20], ymm15);
        vxorps(ymm15, ymm15, ymm15);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(lbc, T_NEAR);
        align(4);

        L(l7cc);
        test(I, 0x2);
        jle(lc68, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(lac0, T_NEAR);
        sub(H, 0x12);
        jle(l8dc, T_NEAR);
        align(4);

        L(l800);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l800, T_NEAR);
        align(4);

        L(l8dc);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l9d8, T_NEAR);
        align(4);

        L(l8ec);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l8ec, T_NEAR);
        align(4);

        L(l9d8);
        add(H, 0x10);
        jle(lac0, T_NEAR);
        align(4);

        L(l9e4);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l9e4, T_NEAR);
        align(4);

        L(lac0);
        mov(H, K);
        test(H, 0x4);
        je(lb14, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x40);
        add(BO, 0x8);
        align(4);

        L(lb14);
        mov(H, K);
        test(H, 0x2);
        je(lb94, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(lb94);
        mov(H, K);
        test(H, 0x1);
        je(lc34, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpmaddubsw(ymm6, ymm5, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm13, ymm13, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(lc34);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 1 + 0x20], ymm13);
        vxorps(ymm13, ymm13, ymm13);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(lc68);
        test(I, 0x1);
        jle(lfc8, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vmovdqu(ymm1, yword[AO - 0x20]);
        mov(H, K);
        sar(H, 0x3);
        jle(le9c, T_NEAR);
        sub(H, 0x11);
        jle(ld38, T_NEAR);
        align(4);

        L(lc9c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(lc9c, T_NEAR);
        align(4);

        L(ld38);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(ldf4, T_NEAR);
        align(4);

        L(ld48);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        prefetchw(byte[CO2 + 0x40]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(ld48, T_NEAR);
        align(4);

        L(ldf4);
        add(H, 0x10);
        jle(le9c, T_NEAR);
        align(4);

        L(le00);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO]);
        vmovdqu(ymm1, yword[AO + 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        prefetcht0(byte[AO + 0x240]);
        prefetcht0(byte[AO + 0x280]);
        vmovdqu(ymm0, yword[AO + 0x40]);
        vmovdqu(ymm1, yword[AO + 0x60]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x80);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(le00, T_NEAR);
        align(4);

        L(le9c);
        mov(H, K);
        test(H, 0x4);
        je(led0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x40);
        add(BO, 0x4);
        align(4);

        L(led0);
        mov(H, K);
        test(H, 0x2);
        je(lf30, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vmovdqu(ymm1, yword[AO - 0x30]);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x20);
        add(BO, 0x2);
        align(4);

        L(lf30);
        mov(H, K);
        test(H, 0x1);
        je(lfac, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vbroadcastf128(ymm1, xword[AO - 0x38]);
        vpunpcklbw(ymm5, ymm1, ymm6);
        vpunpckhbw(ymm1, ymm1, ymm6);
        vinsertf128(ymm1, ymm5, xmm1, 0x1);
        vpunpcklwd(ymm5, ymm1, ymm6);
        vpunpckhwd(ymm1, ymm1, ymm6);
        vperm2f128(ymm1, ymm5, ymm1, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpmaddubsw(ymm6, ymm4, ymm1);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm12, ymm12, ymm6);
        add(AO, 0x10);
        add(BO, 0x1);
        align(4);

        L(lfac);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + 0x20], ymm12);
        vxorps(ymm12, ymm12, ymm12);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(lfc8);
        mov(A, AO);
        sub(J, 0x10);
        cmp(J, 0x10);
        jge(l94, T_NEAR);
        align(4);

        L(lfdc);
        test(J, 0x8);
        jle(l1a48, T_NEAR);
        mov(CO1, C);
        add(C, 0x20);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x10);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(I, N);
        cmp(I, 0x4);
        jl(l14b0, T_NEAR);
        align(4);

        L(l1014);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1310, T_NEAR);
        sub(H, 0x14);
        jle(l111c, T_NEAR);
        align(4);

        L(l1034);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1034, T_NEAR);
        align(4);

        L(l111c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l121c, T_NEAR);
        align(4);

        L(l112c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l112c, T_NEAR);
        align(4);

        L(l121c);
        add(H, 0x10);
        jle(l1310, T_NEAR);
        align(4);

        L(l1228);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1228, T_NEAR);
        align(4);

        L(l1310);
        mov(H, K);
        test(H, 0x4);
        je(l1370, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x20);
        add(BO, 0x10);
        align(4);

        L(l1370);
        mov(H, K);
        test(H, 0x2);
        je(l13e8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l13e8);
        mov(H, K);
        test(H, 0x1);
        je(l1470, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l1470);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(yword[CO1 + LDC * 2], ymm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(yword[CO1 + H * 1], ymm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l1014, T_NEAR);
        align(4);

        L(l14b0);
        test(I, 0x2);
        jle(l17e4, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l16d8, T_NEAR);
        sub(H, 0x12);
        jle(l157c, T_NEAR);
        align(4);

        L(l14e0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l14e0, T_NEAR);
        align(4);

        L(l157c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l1630, T_NEAR);
        align(4);

        L(l158c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l158c, T_NEAR);
        align(4);

        L(l1630);
        add(H, 0x10);
        jle(l16d8, T_NEAR);
        align(4);

        L(l163c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l163c, T_NEAR);
        align(4);

        L(l16d8);
        mov(H, K);
        test(H, 0x4);
        je(l1714, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x20);
        add(BO, 0x8);
        align(4);

        L(l1714);
        mov(H, K);
        test(H, 0x2);
        je(l1768, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l1768);
        mov(H, K);
        test(H, 0x1);
        je(l17c8, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l17c8);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(yword[CO1 + LDC * 1], ymm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l17e4);
        test(I, 0x1);
        jle(l1a44, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l197c, T_NEAR);
        sub(H, 0x11);
        jle(l1880, T_NEAR);
        align(4);

        L(l1810);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l1810, T_NEAR);
        align(4);

        L(l1880);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l1904, T_NEAR);
        align(4);

        L(l188c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l188c, T_NEAR);
        align(4);

        L(l1904);
        add(H, 0x10);
        jle(l197c, T_NEAR);
        align(4);

        L(l190c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x220]);
        prefetcht0(byte[AO + 0x260]);
        vmovdqu(ymm0, yword[AO]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x40);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l190c, T_NEAR);
        align(4);

        L(l197c);
        mov(H, K);
        test(H, 0x4);
        je(l19a4, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x20);
        add(BO, 0x4);
        align(4);

        L(l19a4);
        mov(H, K);
        test(H, 0x2);
        je(l19e4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x2);
        align(4);

        L(l19e4);
        mov(H, K);
        test(H, 0x1);
        je(l1a30, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x1);
        align(4);

        L(l1a30);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(yword[CO1], ymm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l1a44);
        mov(A, AO);
        align(4);

        L(l1a48);
        test(J, 0x4);
        jle(l24b8, T_NEAR);
        mov(CO1, C);
        add(C, 0x10);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x8);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(I, N);
        cmp(I, 0x4);
        jl(l1f1c, T_NEAR);
        align(4);

        L(l1a80);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l1d7c, T_NEAR);
        sub(H, 0x14);
        jle(l1b88, T_NEAR);
        align(4);

        L(l1aa0);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1aa0, T_NEAR);
        align(4);

        L(l1b88);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l1c88, T_NEAR);
        align(4);

        L(l1b98);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1b98, T_NEAR);
        align(4);

        L(l1c88);
        add(H, 0x10);
        jle(l1d7c, T_NEAR);
        align(4);

        L(l1c94);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l1c94, T_NEAR);
        align(4);

        L(l1d7c);
        mov(H, K);
        test(H, 0x4);
        je(l1ddc, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x10);
        add(BO, 0x10);
        align(4);

        L(l1ddc);
        mov(H, K);
        test(H, 0x2);
        je(l1e54, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l1e54);
        mov(H, K);
        test(H, 0x1);
        je(l1edc, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l1edc);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovdqu(xword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovdqu(xword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l1a80, T_NEAR);
        align(4);

        L(l1f1c);
        test(I, 0x2);
        jle(l2250, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2144, T_NEAR);
        sub(H, 0x12);
        jle(l1fe8, T_NEAR);
        align(4);

        L(l1f4c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l1f4c, T_NEAR);
        align(4);

        L(l1fe8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l209c, T_NEAR);
        align(4);

        L(l1ff8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l1ff8, T_NEAR);
        align(4);

        L(l209c);
        add(H, 0x10);
        jle(l2144, T_NEAR);
        align(4);

        L(l20a8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l20a8, T_NEAR);
        align(4);

        L(l2144);
        mov(H, K);
        test(H, 0x4);
        je(l2180, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x10);
        add(BO, 0x8);
        align(4);

        L(l2180);
        mov(H, K);
        test(H, 0x2);
        je(l21d4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l21d4);
        mov(H, K);
        test(H, 0x1);
        je(l2234, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l2234);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovdqu(xword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l2250);
        test(I, 0x1);
        jle(l24b4, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l23ec, T_NEAR);
        sub(H, 0x11);
        jle(l22ec, T_NEAR);
        align(4);

        L(l227c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l227c, T_NEAR);
        align(4);

        L(l22ec);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l2374, T_NEAR);
        align(4);

        L(l22f8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l22f8, T_NEAR);
        align(4);

        L(l2374);
        add(H, 0x10);
        jle(l23ec, T_NEAR);
        align(4);

        L(l237c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x210]);
        prefetcht0(byte[AO + 0x250]);
        vmovdqu(ymm0, yword[AO - 0x20]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x20);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l237c, T_NEAR);
        align(4);

        L(l23ec);
        mov(H, K);
        test(H, 0x4);
        je(l2414, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x10);
        add(BO, 0x4);
        align(4);

        L(l2414);
        mov(H, K);
        test(H, 0x2);
        je(l2454, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x2);
        align(4);

        L(l2454);
        mov(H, K);
        test(H, 0x1);
        je(l24a0, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x1);
        align(4);

        L(l24a0);
        lea(H, ptr[LDC + LDC * 2]);
        vmovdqu(xword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l24b4);
        mov(A, AO);
        align(4);

        L(l24b8);
        test(J, 0x2);
        jle(l2f28, T_NEAR);
        mov(CO1, C);
        add(C, 0x8);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x4);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(I, N);
        cmp(I, 0x4);
        jl(l298c, T_NEAR);
        align(4);

        L(l24f0);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l27ec, T_NEAR);
        sub(H, 0x14);
        jle(l25f8, T_NEAR);
        align(4);

        L(l2510);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2510, T_NEAR);
        align(4);

        L(l25f8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l26f8, T_NEAR);
        align(4);

        L(l2608);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2608, T_NEAR);
        align(4);

        L(l26f8);
        add(H, 0x10);
        jle(l27ec, T_NEAR);
        align(4);

        L(l2704);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2704, T_NEAR);
        align(4);

        L(l27ec);
        mov(H, K);
        test(H, 0x4);
        je(l284c, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x8);
        add(BO, 0x10);
        align(4);

        L(l284c);
        mov(H, K);
        test(H, 0x2);
        je(l28c4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l28c4);
        mov(H, K);
        test(H, 0x1);
        je(l294c, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l294c);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovlps(qword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovlps(qword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovlps(qword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l24f0, T_NEAR);
        align(4);

        L(l298c);
        test(I, 0x2);
        jle(l2cc0, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2bb4, T_NEAR);
        sub(H, 0x12);
        jle(l2a58, T_NEAR);
        align(4);

        L(l29bc);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l29bc, T_NEAR);
        align(4);

        L(l2a58);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l2b0c, T_NEAR);
        align(4);

        L(l2a68);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2a68, T_NEAR);
        align(4);

        L(l2b0c);
        add(H, 0x10);
        jle(l2bb4, T_NEAR);
        align(4);

        L(l2b18);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l2b18, T_NEAR);
        align(4);

        L(l2bb4);
        mov(H, K);
        test(H, 0x4);
        je(l2bf0, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x8);
        add(BO, 0x8);
        align(4);

        L(l2bf0);
        mov(H, K);
        test(H, 0x2);
        je(l2c44, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l2c44);
        mov(H, K);
        test(H, 0x1);
        je(l2ca4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l2ca4);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovlps(qword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l2cc0);
        test(I, 0x1);
        jle(l2f24, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l2e5c, T_NEAR);
        sub(H, 0x11);
        jle(l2d5c, T_NEAR);
        align(4);

        L(l2cec);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2cec, T_NEAR);
        align(4);

        L(l2d5c);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l2de4, T_NEAR);
        align(4);

        L(l2d68);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2d68, T_NEAR);
        align(4);

        L(l2de4);
        add(H, 0x10);
        jle(l2e5c, T_NEAR);
        align(4);

        L(l2dec);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x208]);
        prefetcht0(byte[AO + 0x248]);
        vmovdqu(ymm0, yword[AO - 0x30]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x10);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l2dec, T_NEAR);
        align(4);

        L(l2e5c);
        mov(H, K);
        test(H, 0x4);
        je(l2e84, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x8);
        add(BO, 0x4);
        align(4);

        L(l2e84);
        mov(H, K);
        test(H, 0x2);
        je(l2ec4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x2);
        align(4);

        L(l2ec4);
        mov(H, K);
        test(H, 0x1);
        je(l2f10, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x1);
        align(4);

        L(l2f10);
        lea(H, ptr[LDC + LDC * 2]);
        vmovlps(qword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l2f24);
        mov(A, AO);
        align(4);

        L(l2f28);
        test(J, 0x1);
        jle(l3998, T_NEAR);
        mov(CO1, C);
        add(C, 0x4);
        mov(BO, B);
        mov(AA, K);
        shl(AA, 0x2);
        lea(AA, ptr[A + AA * 1 + 0x200]);
        mov(I, N);
        cmp(I, 0x4);
        jl(l33fc, T_NEAR);
        align(4);

        L(l2f60);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l325c, T_NEAR);
        sub(H, 0x14);
        jle(l3068, T_NEAR);
        align(4);

        L(l2f80);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l2f80, T_NEAR);
        align(4);

        L(l3068);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x4);
        jle(l3168, T_NEAR);
        align(4);

        L(l3078);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3078, T_NEAR);
        align(4);

        L(l3168);
        add(H, 0x10);
        jle(l325c, T_NEAR);
        align(4);

        L(l3174);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x200]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x30]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x2c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x28]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vpbroadcastd(ymm5, dword[BO - 0x24]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x20);
        sub(H, 0x1);
        jg(l3174, T_NEAR);
        align(4);

        L(l325c);
        mov(H, K);
        test(H, 0x4);
        je(l32bc, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x4);
        add(BO, 0x10);
        align(4);

        L(l32bc);
        mov(H, K);
        test(H, 0x2);
        je(l3334, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastw(ymm4, word[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3a]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x2);
        add(BO, 0x8);
        align(4);

        L(l3334);
        mov(H, K);
        test(H, 0x1);
        je(l33bc, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        vpbroadcastb(ymm4, byte[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm10, ymm10, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3d]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm11, ymm11, ymm6);
        add(AO, 0x1);
        add(BO, 0x4);
        align(4);

        L(l33bc);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(dword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        vmovss(dword[CO1 + LDC * 2], xmm10);
        vxorps(ymm10, ymm10, ymm10);
        vmovss(dword[CO1 + H * 1], xmm11);
        vxorps(ymm11, ymm11, ymm11);
        lea(CO1, ptr[CO1 + LDC * 4]);
        sub(I, 0x4);
        cmp(I, 0x4);
        jge(l2f60, T_NEAR);
        align(4);

        L(l33fc);
        test(I, 0x2);
        jle(l3730, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l3624, T_NEAR);
        sub(H, 0x12);
        jle(l34c8, T_NEAR);
        align(4);

        L(l342c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l342c, T_NEAR);
        align(4);

        L(l34c8);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x2);
        jle(l357c, T_NEAR);
        align(4);

        L(l34d8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l34d8, T_NEAR);
        align(4);

        L(l357c);
        add(H, 0x10);
        jle(l3624, T_NEAR);
        align(4);

        L(l3588);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x38]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        vpbroadcastd(ymm5, dword[BO - 0x34]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x10);
        sub(H, 0x1);
        jg(l3588, T_NEAR);
        align(4);

        L(l3624);
        mov(H, K);
        test(H, 0x4);
        je(l3660, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastd(ymm5, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x4);
        add(BO, 0x8);
        align(4);

        L(l3660);
        mov(H, K);
        test(H, 0x2);
        je(l36b4, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastw(ymm5, word[BO - 0x3e]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x2);
        add(BO, 0x4);
        align(4);

        L(l36b4);
        mov(H, K);
        test(H, 0x1);
        je(l3714, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        vpbroadcastb(ymm5, byte[BO - 0x3f]);
        vpmaddubsw(ymm6, ymm5, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm9, ymm9, ymm6);
        add(AO, 0x1);
        add(BO, 0x2);
        align(4);

        L(l3714);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        vmovss(dword[CO1 + LDC * 1], xmm9);
        vxorps(ymm9, ymm9, ymm9);
        lea(CO1, ptr[CO1 + LDC * 2]);
        align(4);

        L(l3730);
        test(I, 0x1);
        jle(l3994, T_NEAR);
        mov(AO, A);
        vmovdqu(ymm0, yword[AO - 0x40]);
        mov(H, K);
        sar(H, 0x3);
        jle(l38cc, T_NEAR);
        sub(H, 0x11);
        jle(l37cc, T_NEAR);
        align(4);

        L(l375c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l375c, T_NEAR);
        align(4);

        L(l37cc);
        lea(CO2, ptr[CO1 + 0x1c]);
        add(H, 0x1);
        jle(l3854, T_NEAR);
        align(4);

        L(l37d8);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetchw(byte[CO2 + 0x0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        lea(CO2, ptr[CO2 + LDC * 1 + 0x0]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l37d8, T_NEAR);
        align(4);

        L(l3854);
        add(H, 0x10);
        jle(l38cc, T_NEAR);
        align(4);

        L(l385c);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x1c0]);
        prefetcht0(byte[BO + 0x1c0]);
        prefetcht0(byte[AO + 0x200]);
        vmovdqu(ymm0, yword[AO - 0x3c]);
        prefetcht1(byte[AA - 0x40]);
        vpbroadcastd(ymm4, dword[BO - 0x3c]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        prefetcht0(byte[AO + 0x204]);
        prefetcht0(byte[AO + 0x244]);
        vmovdqu(ymm0, yword[AO - 0x38]);
        lea(AA, ptr[AA + 0x40]);
        add(AO, 0x8);
        add(BO, 0x8);
        sub(H, 0x1);
        jg(l385c, T_NEAR);
        align(4);

        L(l38cc);
        mov(H, K);
        test(H, 0x4);
        je(l38f4, T_NEAR);
        vpbroadcastd(ymm4, dword[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x4);
        add(BO, 0x4);
        align(4);

        L(l38f4);
        mov(H, K);
        test(H, 0x2);
        je(l3934, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vmovdqu(ymm0, yword[AO - 0x40]);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastw(ymm4, word[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x2);
        add(BO, 0x2);
        align(4);

        L(l3934);
        mov(H, K);
        test(H, 0x1);
        je(l3980, T_NEAR);
        vxorps(ymm6, ymm6, ymm6);
        vbroadcastf128(ymm0, xword[AO - 0x40]);
        vpunpcklbw(ymm5, ymm0, ymm6);
        vpunpckhbw(ymm0, ymm0, ymm6);
        vinsertf128(ymm0, ymm5, xmm0, 0x1);
        vpunpcklwd(ymm5, ymm0, ymm6);
        vpunpckhwd(ymm0, ymm0, ymm6);
        vperm2f128(ymm0, ymm5, ymm0, 0x20);
        vpbroadcastb(ymm4, byte[BO - 0x40]);
        vpmaddubsw(ymm6, ymm4, ymm0);
        vpmaddwd(ymm6, ymm7, ymm6);
        vpaddd(ymm8, ymm8, ymm6);
        add(AO, 0x1);
        add(BO, 0x1);
        align(4);

        L(l3980);
        lea(H, ptr[LDC + LDC * 2]);
        vmovss(dword[CO1], xmm8);
        vxorps(ymm8, ymm8, ymm8);
        lea(CO1, ptr[CO1 + LDC * 1]);
        align(4);

        L(l3994);
        mov(A, AO);
        align(4);

        L(l3998);
        vzeroupper();
        add(rsp, stack_alloc_size);
        postamble();
    }
    outLocalLabel();

#undef M
#undef N
#undef K
#undef A
#undef B
#undef C
#undef LDC
#undef AA
#undef I
#undef J
#undef H
#undef AO
#undef BO
#undef CO1
#undef CO2
#ifdef _WIN32
#undef ARG_A
#undef ARG_B
#endif
#undef ARG_C
#undef ARG_LDC
}

} // namespace cpu
} // namespace impl
} // namespace dnnl
