/*******************************************************************************
* Copyright 2018 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#include "common_f32.hpp"
#include "jit_generator.hpp"

namespace mkldnn {
namespace impl {
namespace cpu {

jit_avx2_kernel_b0_sgemm_kern::jit_avx2_kernel_b0_sgemm_kern(): jit_generator(nullptr, GEMM_CODE_SIZE)
{

#ifndef _WIN32

#define M	rdi
#define N	rsi
#define K	rdx
#define A	r8
#define B	r9
#define C	r10
#define LDC	r11

#define AA	rcx
#define I	r12
#define J	r13
#define H	rax
#define AO	rbx
#define BO	rbp
#define CO1	r14
#define CO2	r15

#define STACKSIZE4

#define OLD_C		8+STACKSIZE+rsp
#define OLD_LDC		16+STACKSIZE+rsp
#define OFFSET		24+STACKSIZE+rsp

#else

#define M	rcx
#define N	rdx
#define K	r8
#define A	r9
#define B	rsi
#define C	rdi
#define LDC	r10
#define AA	r11
#define I	r12
#define J	r13
#define H	rax
#define AO	rbx
#define BO	rbp
#define CO1	r14
#define CO2	r15

#define STACKSIZE	256

#define OLD_C		56+STACKSIZE+rsp
#define OLD_LDC		64+STACKSIZE+rsp
#define OFFSET		72+STACKSIZE+rsp

#endif

inLocalLabel();
{

Xbyak::Label l100c;
Xbyak::Label l110c;
Xbyak::Label l111c;
Xbyak::Label l115c;
Xbyak::Label l11a0;
Xbyak::Label l11e8;
Xbyak::Label l1268;
Xbyak::Label l1274;
Xbyak::Label l129c;
Xbyak::Label l12c0;
Xbyak::Label l1304;
Xbyak::Label l135c;
Xbyak::Label l1368;
Xbyak::Label l1388;
Xbyak::Label l13a0;
Xbyak::Label l13a4;
Xbyak::Label l13d8;
Xbyak::Label l143c;
Xbyak::Label l1534;
Xbyak::Label l1540;
Xbyak::Label l1580;
Xbyak::Label l15c0;
Xbyak::Label l1604;
Xbyak::Label l1684;
Xbyak::Label l1690;
Xbyak::Label l16b8;
Xbyak::Label l16d4;
Xbyak::Label l1718;
Xbyak::Label l1774;
Xbyak::Label l1780;
Xbyak::Label l17a0;
Xbyak::Label l17b0;
Xbyak::Label l17b4;
Xbyak::Label l17e8;
Xbyak::Label l184c;
Xbyak::Label l1944;
Xbyak::Label l1950;
Xbyak::Label l1990;
Xbyak::Label l19d0;
Xbyak::Label l1a14;
Xbyak::Label l1a94;
Xbyak::Label l1aa0;
Xbyak::Label l1ac8;
Xbyak::Label l1ae4;
Xbyak::Label l1b28;
Xbyak::Label l1b84;
Xbyak::Label l1b90;
Xbyak::Label l1bb0;
Xbyak::Label l1bc0;
Xbyak::Label l1bc4;
Xbyak::Label l1bf8;
Xbyak::Label l1c44;
Xbyak::Label l1d18;
Xbyak::Label l1d24;
Xbyak::Label l1d60;
Xbyak::Label l1da0;
Xbyak::Label l1ddc;
Xbyak::Label l1e54;
Xbyak::Label l1e60;
Xbyak::Label l1e88;
Xbyak::Label l1ea4;
Xbyak::Label l1ee4;
Xbyak::Label l1f3c;
Xbyak::Label l1f48;
Xbyak::Label l1f64;
Xbyak::Label l1f74;
Xbyak::Label l1f78;
Xbyak::Label l2e4;
Xbyak::Label l31c;
Xbyak::Label l50;
Xbyak::Label l504;
Xbyak::Label l510;
Xbyak::Label l580;
Xbyak::Label l5f4;
Xbyak::Label l670;
Xbyak::Label l78;
Xbyak::Label l7a8;
Xbyak::Label l7b4;
Xbyak::Label l7fc;
Xbyak::Label l838;
Xbyak::Label l88c;
Xbyak::Label l978;
Xbyak::Label l984;
Xbyak::Label l9b4;
Xbyak::Label l9dc;
Xbyak::Label l9f0;
Xbyak::Label la24;
Xbyak::Label la90;
Xbyak::Label lc04;
Xbyak::Label lc14;
Xbyak::Label lc6c;
Xbyak::Label lcc4;
Xbyak::Label ld14;
Xbyak::Label lddc;
Xbyak::Label lde8;
Xbyak::Label le20;
Xbyak::Label le50;
Xbyak::Label le98;
Xbyak::Label lf20;
Xbyak::Label lf2c;
Xbyak::Label lf54;
Xbyak::Label lf70;
Xbyak::Label lf74;
Xbyak::Label lfa8;
Xbyak::Label lfc;

	sub(rsp, 0x40);
	mov(qword[rsp], AO);
	mov(qword[rsp+0x8], BO);
	mov(qword[rsp+0x10], I);
	mov(qword[rsp+0x18], J);
	mov(qword[rsp+0x20], CO1);
	mov(qword[rsp+0x28], CO2);
	mov(M, qword[M]);
	mov(N, qword[N]);
	mov(K, qword[K]);
	mov(C, qword[rsp+0x48]);
	mov(LDC, qword[rsp+0x50]);
	sub(A, -128);
	sub(B, -128);
	shl(LDC, 0x2);
	mov(J, M);
	cmp(J, 0x18);
	jl(l9f0, T_NEAR);
	align(4);

L(l50);
	mov(AA, K);
	imul(AA, AA, 0x60);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x60);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l5f4, T_NEAR);
	align(4);

L(l78);
	prefetcht2(byte[AA-0x80]);
	vxorps(ymm4, ymm4, ymm4);
	vbroadcastss(ymm3, dword[BO-0x80]);
	vxorps(ymm5, ymm5, ymm5);
	vmovups(ymm0, yword[A-0x80]);
	vxorps(ymm6, ymm6, ymm6);
	vmovups(ymm1, yword[A-0x60]);
	vxorps(ymm7, ymm7, ymm7);
	vmovups(ymm2, yword[A-0x40]);
	vxorps(ymm8, ymm8, ymm8);
	vxorps(ymm9, ymm9, ymm9);
	prefetcht0(byte[CO1+0x1c]);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	vxorps(ymm10, ymm10, ymm10);
	vxorps(ymm11, ymm11, ymm11);
	prefetcht0(byte[CO2+0x1c]);
	prefetcht0(byte[CO2+LDC*1+0x1c]);
	vxorps(ymm12, ymm12, ymm12);
	vxorps(ymm13, ymm13, ymm13);
	vxorps(ymm14, ymm14, ymm14);
	vxorps(ymm15, ymm15, ymm15);
	mov(AO, A);
	mov(H, K);
	sar(H, 0x2);
	jle(l504, T_NEAR);
	sub(H, 0x22);
	jle(l2e4, T_NEAR);
	align(4);

L(lfc);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	prefetcht0(byte[AO+0x240]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x78]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x74]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x68]);
	prefetcht0(byte[AO+0x2c0]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x64]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x80]);
	vbroadcastss(ymm3, dword[BO-0x60]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x5c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x58]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x54]);
	prefetcht0(byte[AO+0x340]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0xa0]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0xc0]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0xe0]);
	vbroadcastss(ymm3, dword[BO-0x50]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x4c]);
	prefetcht0(byte[AO+0x380]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x48]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x44]);
	sub(BO, -64);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x100]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x120]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x140]);
	sub(AO, -384);
	sub(H, 0x1);
	vbroadcastss(ymm3, dword[BO-0x80]);
	jg(lfc, T_NEAR);
	align(4);

L(l2e4);
	prefetcht2(byte[AA-0x40]);
	prefetcht0(byte[CO1+0x1c]);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	prefetcht0(byte[CO2+0x1c]);
	prefetcht0(byte[CO2+LDC*1+0x1c]);
	prefetcht0(byte[CO1+0x5c]);
	prefetcht0(byte[CO1+LDC*1+0x5c]);
	prefetcht0(byte[CO2+0x5c]);
	prefetcht0(byte[CO2+LDC*1+0x5c]);
	add(H, 0x22);
	prefetcht2(byte[AA]);
	align(4);

L(l31c);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	prefetcht0(byte[AO+0x240]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x78]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x74]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x68]);
	prefetcht0(byte[AO+0x2c0]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x64]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x80]);
	vbroadcastss(ymm3, dword[BO-0x60]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x5c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x58]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x54]);
	prefetcht0(byte[AO+0x340]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0xa0]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0xc0]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0xe0]);
	vbroadcastss(ymm3, dword[BO-0x50]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x4c]);
	prefetcht0(byte[AO+0x380]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x48]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x44]);
	sub(BO, -64);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x100]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x120]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x140]);
	sub(AO, -384);
	vbroadcastss(ymm3, dword[BO-0x80]);
	sub(H, 0x1);
	jg(l31c, T_NEAR);
	align(4);

L(l504);
	mov(H, K);
	and_(H, 0x3);
	je(l580, T_NEAR);
	align(4);

L(l510);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x78]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x74]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	sub(AO, -96);
	sub(BO, -16);
	dec(H);
	jg(l510, T_NEAR);
	align(4);

L(l580);
	vmovups(yword[CO1], ymm4);
	vmovups(yword[CO1+0x20], ymm8);
	vmovups(yword[CO1+0x40], ymm12);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm5);
	vmovups(yword[CO1+LDC*1+0x20], ymm9);
	vmovups(yword[CO1+LDC*1+0x40], ymm13);
	lea(CO1, ptr[CO1+LDC*4]);
	prefetcht2(byte[AA+0x80]);
	vmovups(yword[CO2], ymm6);
	vmovups(yword[CO2+0x20], ymm10);
	vmovups(yword[CO2+0x40], ymm14);
	prefetcht2(byte[AA+0xc0]);
	vmovups(yword[CO2+LDC*1], ymm7);
	vmovups(yword[CO2+LDC*1+0x20], ymm11);
	vmovups(yword[CO2+LDC*1+0x40], ymm15);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -192);
	dec(I);
	jg(l78, T_NEAR);
	align(4);

L(l5f4);
	test(N, 0x2);
	jle(l838, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm4, ymm4, ymm4);
	vbroadcastss(ymm3, dword[BO-0x80]);
	vxorps(ymm5, ymm5, ymm5);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm6, ymm6, ymm6);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm7, ymm7, ymm7);
	vmovups(ymm2, yword[AO-0x40]);
	vxorps(ymm8, ymm8, ymm8);
	vxorps(ymm9, ymm9, ymm9);
	prefetcht0(byte[CO1+0x1c]);
	vxorps(ymm10, ymm10, ymm10);
	vxorps(ymm11, ymm11, ymm11);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	vxorps(ymm12, ymm12, ymm12);
	vxorps(ymm13, ymm13, ymm13);
	vxorps(ymm14, ymm14, ymm14);
	vxorps(ymm15, ymm15, ymm15);
	mov(H, K);
	sar(H, 0x2);
	jle(l7a8, T_NEAR);
	align(4);

L(l670);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	prefetcht0(byte[AO+0x240]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x78]);
	prefetcht0(byte[AO+0x2c0]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x74]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x80]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0xa0]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0xc0]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0xe0]);
	vbroadcastss(ymm3, dword[BO-0x68]);
	prefetcht0(byte[AO+0x340]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x64]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x100]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x120]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x140]);
	vbroadcastss(ymm3, dword[BO-0x60]);
	prefetcht0(byte[AO+0x380]);
	sub(BO, -32);
	sub(AO, -384);
	dec(H);
	jg(l670, T_NEAR);
	align(4);

L(l7a8);
	mov(H, K);
	and_(H, 0x3);
	je(l7fc, T_NEAR);
	align(4);

L(l7b4);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x78]);
	sub(AO, -96);
	sub(BO, -8);
	dec(H);
	jg(l7b4, T_NEAR);
	align(4);

L(l7fc);
	vmovups(yword[CO1], ymm4);
	vmovups(yword[CO1+0x20], ymm8);
	vmovups(yword[CO1+0x40], ymm12);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm5);
	vmovups(yword[CO1+LDC*1+0x20], ymm9);
	vmovups(yword[CO1+LDC*1+0x40], ymm13);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -64);
	align(4);

L(l838);
	test(N, 0x1);
	jle(l9dc, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm4, ymm4, ymm4);
	vxorps(ymm8, ymm8, ymm8);
	vxorps(ymm12, ymm12, ymm12);
	vmovups(ymm0, yword[AO-0x80]);
	vmovups(ymm1, yword[AO-0x60]);
	vmovups(ymm2, yword[AO-0x40]);
	vbroadcastss(ymm3, dword[BO-0x80]);
	vbroadcastss(ymm5, dword[BO-0x7c]);
	prefetcht0(byte[CO1+0x1c]);
	prefetcht0(byte[CO1+0x5c]);
	mov(H, K);
	sar(H, 0x2);
	jle(l978, T_NEAR);
	align(4);

L(l88c);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm3, ymm1);
	prefetcht0(byte[AO+0x240]);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x78]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm4, ymm5, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm8, ymm5, ymm1);
	prefetcht0(byte[AO+0x2c0]);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm12, ymm5, ymm2);
	vmovups(ymm2, yword[AO+0x80]);
	vbroadcastss(ymm5, dword[BO-0x74]);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0xa0]);
	vfmadd231ps(ymm8, ymm3, ymm1);
	prefetcht0(byte[AO+0x340]);
	vmovups(ymm1, yword[AO+0xc0]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0xe0]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	vfmadd231ps(ymm4, ymm5, ymm0);
	vmovups(ymm0, yword[AO+0x100]);
	vfmadd231ps(ymm8, ymm5, ymm1);
	prefetcht0(byte[AO+0x380]);
	vmovups(ymm1, yword[AO+0x120]);
	vfmadd231ps(ymm12, ymm5, ymm2);
	vmovups(ymm2, yword[AO+0x140]);
	vbroadcastss(ymm5, dword[BO-0x6c]);
	sub(BO, -16);
	sub(AO, -384);
	dec(H);
	jg(l88c, T_NEAR);
	align(4);

L(l978);
	mov(H, K);
	and_(H, 0x3);
	je(l9b4, T_NEAR);
	align(4);

L(l984);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	sub(BO, -4);
	sub(AO, -96);
	dec(H);
	jg(l984, T_NEAR);
	align(4);

L(l9b4);
	vmovups(yword[CO1], ymm4);
	vmovups(yword[CO1+0x20], ymm8);
	vmovups(yword[CO1+0x40], ymm12);
	prefetcht2(byte[AA+0x40]);
	add(CO1, LDC);
	add(CO2, LDC);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -64);
	align(4);

L(l9dc);
	mov(A, AO);
	sub(J, 0x18);
	cmp(J, 0x18);
	jge(l50, T_NEAR);
	align(4);

L(l9f0);
	test(J, 0x10);
	jle(lf74, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x40);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x40);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(lcc4, T_NEAR);
	align(4);

L(la24);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm8, ymm8, ymm8);
	vbroadcastss(ymm6, dword[BO-0x80]);
	vxorps(ymm9, ymm9, ymm9);
	vxorps(ymm10, ymm10, ymm10);
	vxorps(ymm11, ymm11, ymm11);
	vxorps(ymm12, ymm12, ymm12);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm13, ymm13, ymm13);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm14, ymm14, ymm14);
	vmovups(ymm2, yword[AO-0x40]);
	vxorps(ymm15, ymm15, ymm15);
	vmovups(ymm3, yword[AO-0x20]);
	prefetcht0(byte[CO1+0x3c]);
	prefetcht0(byte[CO1+LDC*1+0x3c]);
	prefetcht0(byte[CO2+0x3c]);
	prefetcht0(byte[CO2+LDC*1+0x3c]);
	mov(H, K);
	sar(H, 0x2);
	jle(lc04, T_NEAR);
	align(4);

L(la90);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x78]);
	prefetcht0(byte[AO+0x240]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x74]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x70]);
	vmovups(ymm0, yword[AO]);
	vmovups(ymm1, yword[AO+0x20]);
	vfmadd231ps(ymm8, ymm6, ymm2);
	vfmadd231ps(ymm12, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x6c]);
	vfmadd231ps(ymm9, ymm6, ymm2);
	vfmadd231ps(ymm13, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x68]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm10, ymm6, ymm2);
	vfmadd231ps(ymm14, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x64]);
	vfmadd231ps(ymm11, ymm6, ymm2);
	vfmadd231ps(ymm15, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x60]);
	vmovups(ymm2, yword[AO+0x40]);
	vmovups(ymm3, yword[AO+0x60]);
	prefetcht0(byte[BO+0x140]);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x5c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x58]);
	prefetcht0(byte[AO+0x2c0]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x54]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x50]);
	vmovups(ymm0, yword[AO+0x80]);
	vmovups(ymm1, yword[AO+0xa0]);
	vfmadd231ps(ymm8, ymm6, ymm2);
	vfmadd231ps(ymm12, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x4c]);
	vfmadd231ps(ymm9, ymm6, ymm2);
	vfmadd231ps(ymm13, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x48]);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm10, ymm6, ymm2);
	vfmadd231ps(ymm14, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x44]);
	vfmadd231ps(ymm11, ymm6, ymm2);
	vfmadd231ps(ymm15, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x40]);
	vmovups(ymm2, yword[AO+0xc0]);
	vmovups(ymm3, yword[AO+0xe0]);
	sub(BO, -64);
	sub(AO, -256);
	dec(H);
	jg(la90, T_NEAR);
	align(4);

L(lc04);
	prefetcht2(byte[AA-0x40]);
	mov(H, K);
	and_(H, 0x3);
	je(lc6c, T_NEAR);
	align(4);

L(lc14);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x78]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x74]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vmovups(ymm1, yword[AO-0x20]);
	vbroadcastss(ymm6, dword[BO-0x70]);
	sub(AO, -64);
	sub(BO, -16);
	dec(H);
	jg(lc14, T_NEAR);
	align(4);

L(lc6c);
	vmovups(yword[CO1], ymm8);
	vmovups(yword[CO1+0x20], ymm12);
	prefetcht2(byte[AA]);
	vmovups(yword[CO1+LDC*1], ymm9);
	vmovups(yword[CO1+LDC*1+0x20], ymm13);
	lea(CO1, ptr[CO1+LDC*4]);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO2], ymm10);
	vmovups(yword[CO2+0x20], ymm14);
	prefetcht2(byte[AA+0x80]);
	vmovups(yword[CO2+LDC*1], ymm11);
	vmovups(yword[CO2+LDC*1+0x20], ymm15);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -192);
	dec(I);
	jg(la24, T_NEAR);
	align(4);

L(lcc4);
	test(N, 0x2);
	jle(le50, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm8, ymm8, ymm8);
	vbroadcastss(ymm4, dword[BO-0x80]);
	vxorps(ymm9, ymm9, ymm9);
	vxorps(ymm12, ymm12, ymm12);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm13, ymm13, ymm13);
	vmovups(ymm1, yword[AO-0x60]);
	prefetcht0(byte[CO1+0x3c]);
	prefetcht0(byte[CO1+LDC*1+0x3c]);
	mov(H, K);
	sar(H, 0x2);
	jle(lddc, T_NEAR);
	align(4);

L(ld14);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO-0x20]);
	vbroadcastss(ymm4, dword[BO-0x78]);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x74]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO+0x20]);
	vbroadcastss(ymm4, dword[BO-0x70]);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x6c]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO+0x60]);
	vbroadcastss(ymm4, dword[BO-0x68]);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x64]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO+0x80]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO+0xa0]);
	vbroadcastss(ymm4, dword[BO-0x60]);
	sub(BO, -32);
	sub(AO, -256);
	dec(H);
	jg(ld14, T_NEAR);
	align(4);

L(lddc);
	mov(H, K);
	and_(H, 0x3);
	je(le20, T_NEAR);
	align(4);

L(lde8);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO-0x20]);
	vbroadcastss(ymm4, dword[BO-0x78]);
	sub(AO, -64);
	sub(BO, -8);
	dec(H);
	jg(lde8, T_NEAR);
	align(4);

L(le20);
	vmovups(yword[CO1], ymm8);
	vmovups(yword[CO1+0x20], ymm12);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm9);
	vmovups(yword[CO1+LDC*1+0x20], ymm13);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -128);
	align(4);

L(le50);
	test(N, 0x1);
	jle(lf70, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(ymm2, dword[BO-0x80]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	vxorps(ymm8, ymm8, ymm8);
	vmovups(ymm0, yword[AO-0x80]);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm12, ymm12, ymm12);
	prefetcht0(byte[CO1+0x3c]);
	mov(H, K);
	sar(H, 0x2);
	jle(lf20, T_NEAR);
	align(4);

L(le98);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm12, ymm1, ymm2);
	vbroadcastss(ymm2, dword[BO-0x78]);
	vmovups(ymm1, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm0, ymm3);
	vmovups(ymm0, yword[AO]);
	vfmadd231ps(ymm12, ymm1, ymm3);
	vbroadcastss(ymm3, dword[BO-0x74]);
	vmovups(ymm1, yword[AO+0x20]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm12, ymm1, ymm2);
	vbroadcastss(ymm2, dword[BO-0x70]);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm8, ymm0, ymm3);
	vmovups(ymm0, yword[AO+0x80]);
	vfmadd231ps(ymm12, ymm1, ymm3);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovups(ymm1, yword[AO+0xa0]);
	sub(AO, -256);
	dec(H);
	jg(le98, T_NEAR);
	align(4);

L(lf20);
	mov(H, K);
	and_(H, 0x3);
	je(lf54, T_NEAR);
	align(4);

L(lf2c);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm12, ymm1, ymm2);
	vbroadcastss(ymm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovups(ymm1, yword[AO-0x20]);
	sub(AO, -64);
	dec(H);
	jg(lf2c, T_NEAR);
	align(4);

L(lf54);
	vmovups(yword[CO1], ymm8);
	vmovups(yword[CO1+0x20], ymm12);
	add(CO1, LDC);
	add(CO2, LDC);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -128);
	align(4);

L(lf70);
	mov(A, AO);
	align(4);

L(lf74);
	test(J, 0x8);
	jle(l13a4, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x20);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x20);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l11a0, T_NEAR);
	align(4);

L(lfa8);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm8, ymm8, ymm8);
	vbroadcastss(ymm6, dword[BO-0x80]);
	vxorps(ymm9, ymm9, ymm9);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm10, ymm10, ymm10);
	vxorps(ymm11, ymm11, ymm11);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm12, ymm12, ymm12);
	prefetcht0(byte[CO1+0x1c]);
	vxorps(ymm13, ymm13, ymm13);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	vxorps(ymm14, ymm14, ymm14);
	prefetcht0(byte[CO2+0x1c]);
	vxorps(ymm15, ymm15, ymm15);
	prefetcht0(byte[CO2+LDC*1+0x1c]);
	mov(H, K);
	sar(H, 0x2);
	jle(l110c, T_NEAR);
	align(4);

L(l100c);
	vfmadd231ps(ymm8, ymm6, ymm0);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(ymm6, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	prefetcht0(byte[AO+0x240]);
	vbroadcastss(ymm6, dword[BO-0x78]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x74]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x70]);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x6c]);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x68]);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x64]);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x60]);
	vmovups(ymm1, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x5c]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x58]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x54]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x50]);
	vmovups(ymm0, yword[AO]);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x4c]);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x48]);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x44]);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x40]);
	vmovups(ymm1, yword[AO+0x20]);
	sub(AO, -128);
	sub(BO, -64);
	dec(H);
	jg(l100c, T_NEAR);
	vaddps(ymm8, ymm8, ymm12);
	vaddps(ymm9, ymm9, ymm13);
	vaddps(ymm10, ymm10, ymm14);
	vaddps(ymm11, ymm11, ymm15);
	align(4);

L(l110c);
	prefetcht2(byte[AA-0x40]);
	mov(H, K);
	and_(H, 0x3);
	je(l115c, T_NEAR);
	align(4);

L(l111c);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x78]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x74]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x70]);
	vmovups(ymm0, yword[AO-0x60]);
	sub(AO, -32);
	sub(BO, -16);
	dec(H);
	jg(l111c, T_NEAR);
	align(4);

L(l115c);
	prefetcht2(byte[AA]);
	vmovups(yword[CO1], ymm8);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm9);
	lea(CO1, ptr[CO1+LDC*4]);
	prefetcht2(byte[AA+0x80]);
	vmovups(yword[CO2], ymm10);
	prefetcht2(byte[AA+0xc0]);
	vmovups(yword[CO2+LDC*1], ymm11);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -192);
	dec(I);
	jg(lfa8, T_NEAR);
	align(4);

L(l11a0);
	test(N, 0x2);
	jle(l12c0, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(ymm2, dword[BO-0x80]);
	vxorps(ymm8, ymm8, ymm8);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm9, ymm9, ymm9);
	vmovups(ymm1, yword[AO-0x60]);
	prefetcht0(byte[CO1+0x1c]);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1268, T_NEAR);
	align(4);

L(l11e8);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x78]);
	vmovups(ymm0, yword[AO-0x60]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x74]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x70]);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x6c]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x68]);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x64]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x60]);
	vmovups(ymm0, yword[AO]);
	sub(BO, -32);
	sub(AO, -128);
	dec(H);
	jg(l11e8, T_NEAR);
	align(4);

L(l1268);
	mov(H, K);
	and_(H, 0x3);
	je(l129c, T_NEAR);
	align(4);

L(l1274);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x78]);
	vmovups(ymm0, yword[AO-0x60]);
	sub(BO, -8);
	sub(AO, -32);
	dec(H);
	jg(l1274, T_NEAR);
	align(4);

L(l129c);
	vmovups(yword[CO1], ymm8);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm9);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -128);
	align(4);

L(l12c0);
	test(N, 0x1);
	jle(l13a0, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(ymm2, dword[BO-0x80]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	vxorps(ymm8, ymm8, ymm8);
	vmovups(ymm0, yword[AO-0x80]);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm9, ymm9, ymm9);
	prefetcht0(byte[CO1+0x1c]);
	mov(H, K);
	sar(H, 0x2);
	jle(l135c, T_NEAR);
	align(4);

L(l1304);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x78]);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm9, ymm1, ymm3);
	vbroadcastss(ymm3, dword[BO-0x74]);
	vmovups(ymm1, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x70]);
	vmovups(ymm0, yword[AO]);
	vfmadd231ps(ymm9, ymm1, ymm3);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovups(ymm1, yword[AO+0x20]);
	sub(AO, -128);
	dec(H);
	jg(l1304, T_NEAR);
	vaddps(ymm8, ymm9, ymm8);
	align(4);

L(l135c);
	mov(H, K);
	and_(H, 0x3);
	je(l1388, T_NEAR);
	align(4);

L(l1368);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovups(ymm0, yword[AO-0x60]);
	sub(AO, -32);
	dec(H);
	jg(l1368, T_NEAR);
	align(4);

L(l1388);
	vmovups(yword[CO1], ymm8);
	add(CO1, LDC);
	add(CO2, LDC);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -128);
	align(4);

L(l13a0);
	mov(A, AO);
	align(4);

L(l13a4);
	test(J, 0x4);
	jle(l17b4, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x10);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x10);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l15c0, T_NEAR);
	align(4);

L(l13d8);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(xmm8, xmm8, xmm8);
	vbroadcastss(xmm6, dword[BO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	vmovups(xmm0, xword[AO-0x80]);
	vxorps(xmm10, xmm10, xmm10);
	vxorps(xmm11, xmm11, xmm11);
	vmovups(xmm1, xword[AO-0x70]);
	vxorps(xmm12, xmm12, xmm12);
	prefetcht0(byte[CO1+0xc]);
	vxorps(xmm13, xmm13, xmm13);
	prefetcht0(byte[CO1+LDC*1+0xc]);
	vxorps(xmm14, xmm14, xmm14);
	prefetcht0(byte[CO2+0xc]);
	vxorps(xmm15, xmm15, xmm15);
	prefetcht0(byte[CO2+LDC*1+0xc]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1534, T_NEAR);
	align(4);

L(l143c);
	vfmadd231ps(xmm8, xmm6, xmm0);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(xmm6, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x78]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x74]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x70]);
	vmovups(xmm0, xword[AO-0x60]);
	vfmadd231ps(xmm12, xmm6, xmm1);
	prefetcht0(byte[AO+0x240]);
	vbroadcastss(xmm6, dword[BO-0x6c]);
	vfmadd231ps(xmm13, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x68]);
	vfmadd231ps(xmm14, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x64]);
	vfmadd231ps(xmm15, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x60]);
	vmovups(xmm1, xword[AO-0x50]);
	vfmadd231ps(xmm8, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x5c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x58]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x54]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x50]);
	vmovups(xmm0, xword[AO-0x40]);
	vfmadd231ps(xmm12, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x4c]);
	vfmadd231ps(xmm13, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x48]);
	vfmadd231ps(xmm14, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x44]);
	vfmadd231ps(xmm15, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x40]);
	vmovups(xmm1, xword[AO-0x30]);
	sub(AO, -64);
	sub(BO, -64);
	dec(H);
	jg(l143c, T_NEAR);
	vaddps(xmm8, xmm8, xmm12);
	vaddps(xmm9, xmm9, xmm13);
	vaddps(xmm10, xmm10, xmm14);
	vaddps(xmm11, xmm11, xmm15);
	align(4);

L(l1534);
	mov(H, K);
	and_(H, 0x3);
	je(l1580, T_NEAR);
	align(4);

L(l1540);
	vfmadd231ps(xmm8, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x78]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x74]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x70]);
	vmovups(xmm0, xword[AO-0x70]);
	sub(AO, -16);
	sub(BO, -16);
	dec(H);
	jg(l1540, T_NEAR);
	align(4);

L(l1580);
	vmovups(xword[CO1], xmm8);
	prefetcht2(byte[AA+0x40]);
	vmovups(xword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*4]);
	prefetcht2(byte[AA+0x80]);
	vmovups(xword[CO2], xmm10);
	prefetcht2(byte[AA+0xc0]);
	vmovups(xword[CO2+LDC*1], xmm11);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -128);
	dec(I);
	jg(l13d8, T_NEAR);
	align(4);

L(l15c0);
	test(N, 0x2);
	jle(l16d4, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(xmm2, dword[BO-0x80]);
	vxorps(xmm8, xmm8, xmm8);
	vmovups(xmm0, xword[AO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1+0xc]);
	prefetcht0(byte[CO1+LDC*1+0xc]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1684, T_NEAR);
	align(4);

L(l1604);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovups(xmm0, xword[AO-0x70]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x74]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x70]);
	vmovups(xmm0, xword[AO-0x60]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x6c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x68]);
	vmovups(xmm0, xword[AO-0x50]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x64]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x60]);
	vmovups(xmm0, xword[AO-0x40]);
	sub(BO, -32);
	sub(AO, -64);
	dec(H);
	jg(l1604, T_NEAR);
	align(4);

L(l1684);
	mov(H, K);
	and_(H, 0x3);
	je(l16b8, T_NEAR);
	align(4);

L(l1690);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovups(xmm0, xword[AO-0x70]);
	sub(BO, -8);
	sub(AO, -16);
	dec(H);
	jg(l1690, T_NEAR);
	align(4);

L(l16b8);
	vmovups(xword[CO1], xmm8);
	prefetcht2(byte[AA+0x40]);
	vmovups(xword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	sub(AA, -128);
	align(4);

L(l16d4);
	test(N, 0x1);
	jle(l17b0, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(xmm2, dword[BO-0x80]);
	vbroadcastss(xmm3, dword[BO-0x7c]);
	vxorps(xmm8, xmm8, xmm8);
	vmovups(xmm0, xword[AO-0x80]);
	vmovups(xmm1, xword[AO-0x70]);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1+0xc]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1774, T_NEAR);
	align(4);

L(l1718);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovups(xmm0, xword[AO-0x60]);
	vfmadd231ps(xmm9, xmm1, xmm3);
	vbroadcastss(xmm3, dword[BO-0x74]);
	vmovups(xmm1, xword[AO-0x50]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x70]);
	vmovups(xmm0, xword[AO-0x40]);
	vfmadd231ps(xmm9, xmm1, xmm3);
	vbroadcastss(xmm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovups(xmm1, xword[AO-0x30]);
	sub(AO, -64);
	dec(H);
	jg(l1718, T_NEAR);
	vaddps(xmm8, xmm9, xmm8);
	align(4);

L(l1774);
	mov(H, K);
	and_(H, 0x3);
	je(l17a0, T_NEAR);
	align(4);

L(l1780);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovups(xmm0, xword[AO-0x70]);
	sub(AO, -16);
	dec(H);
	jg(l1780, T_NEAR);
	align(4);

L(l17a0);
	vmovups(xword[CO1], xmm8);
	add(CO1, LDC);
	add(CO2, LDC);
	sub(AA, -128);
	align(4);

L(l17b0);
	mov(A, AO);
	align(4);

L(l17b4);
	test(J, 0x2);
	jle(l1bc4, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x8);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x8);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l19d0, T_NEAR);
	align(4);

L(l17e8);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(xmm8, xmm8, xmm8);
	vbroadcastss(xmm6, dword[BO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	vmovddup(xmm0, qword[AO-0x80]);
	vxorps(xmm10, xmm10, xmm10);
	vxorps(xmm11, xmm11, xmm11);
	vmovddup(xmm1, qword[AO-0x78]);
	vxorps(xmm12, xmm12, xmm12);
	prefetcht0(byte[CO1+0x4]);
	vxorps(xmm13, xmm13, xmm13);
	prefetcht0(byte[CO1+LDC*1+0x4]);
	vxorps(xmm14, xmm14, xmm14);
	prefetcht0(byte[CO2+0x4]);
	vxorps(xmm15, xmm15, xmm15);
	prefetcht0(byte[CO2+LDC*1+0x4]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1944, T_NEAR);
	align(4);

L(l184c);
	vfmadd231ps(xmm8, xmm6, xmm0);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(xmm6, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x78]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x74]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x70]);
	vmovddup(xmm0, qword[AO-0x70]);
	vfmadd231ps(xmm12, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x6c]);
	vfmadd231ps(xmm13, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x68]);
	vfmadd231ps(xmm14, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x64]);
	vfmadd231ps(xmm15, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x60]);
	vmovddup(xmm1, qword[AO-0x68]);
	vfmadd231ps(xmm8, xmm6, xmm0);
	prefetcht0(byte[AO+0x240]);
	vbroadcastss(xmm6, dword[BO-0x5c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x58]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x54]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x50]);
	vmovddup(xmm0, qword[AO-0x60]);
	vfmadd231ps(xmm12, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x4c]);
	vfmadd231ps(xmm13, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x48]);
	vfmadd231ps(xmm14, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x44]);
	vfmadd231ps(xmm15, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x40]);
	vmovddup(xmm1, qword[AO-0x58]);
	sub(AO, -32);
	sub(BO, -64);
	dec(H);
	jg(l184c, T_NEAR);
	vaddps(xmm8, xmm8, xmm12);
	vaddps(xmm9, xmm9, xmm13);
	vaddps(xmm10, xmm10, xmm14);
	vaddps(xmm11, xmm11, xmm15);
	align(4);

L(l1944);
	mov(H, K);
	and_(H, 0x3);
	je(l1990, T_NEAR);
	align(4);

L(l1950);
	vfmadd231ps(xmm8, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x78]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x74]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x70]);
	vmovddup(xmm0, qword[AO-0x78]);
	sub(AO, -8);
	sub(BO, -16);
	dec(H);
	jg(l1950, T_NEAR);
	align(4);

L(l1990);
	vmovlps(qword[CO1], xmm8);
	prefetcht2(byte[AA+0x40]);
	vmovlps(qword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*4]);
	prefetcht2(byte[AA+0x80]);
	vmovlps(qword[CO2], xmm10);
	prefetcht2(byte[AA+0xc0]);
	vmovlps(qword[CO2+LDC*1], xmm11);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -128);
	dec(I);
	jg(l17e8, T_NEAR);
	align(4);

L(l19d0);
	test(N, 0x2);
	jle(l1ae4, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(xmm2, dword[BO-0x80]);
	vxorps(xmm8, xmm8, xmm8);
	vmovddup(xmm0, qword[AO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1+0x4]);
	prefetcht0(byte[CO1+LDC*1+0x4]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1a94, T_NEAR);
	align(4);

L(l1a14);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovddup(xmm0, qword[AO-0x78]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x74]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x70]);
	vmovddup(xmm0, qword[AO-0x70]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x6c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x68]);
	vmovddup(xmm0, qword[AO-0x68]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x64]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x60]);
	vmovddup(xmm0, qword[AO-0x60]);
	sub(BO, -32);
	sub(AO, -32);
	dec(H);
	jg(l1a14, T_NEAR);
	align(4);

L(l1a94);
	mov(H, K);
	and_(H, 0x3);
	je(l1ac8, T_NEAR);
	align(4);

L(l1aa0);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovddup(xmm0, qword[AO-0x78]);
	sub(BO, -8);
	sub(AO, -8);
	dec(H);
	jg(l1aa0, T_NEAR);
	align(4);

L(l1ac8);
	vmovlps(qword[CO1], xmm8);
	prefetcht2(byte[AA+0x40]);
	vmovlps(qword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	sub(AA, -128);
	align(4);

L(l1ae4);
	test(N, 0x1);
	jle(l1bc0, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(xmm2, dword[BO-0x80]);
	vbroadcastss(xmm3, dword[BO-0x7c]);
	vxorps(xmm8, xmm8, xmm8);
	vmovddup(xmm0, qword[AO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	vmovddup(xmm1, qword[AO-0x78]);
	prefetcht0(byte[CO1+0x4]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1b84, T_NEAR);
	align(4);

L(l1b28);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovddup(xmm0, qword[AO-0x70]);
	vfmadd231ps(xmm9, xmm1, xmm3);
	vbroadcastss(xmm3, dword[BO-0x74]);
	vmovddup(xmm1, qword[AO-0x68]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x70]);
	vmovddup(xmm0, qword[AO-0x60]);
	vfmadd231ps(xmm9, xmm1, xmm3);
	vbroadcastss(xmm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovddup(xmm1, qword[AO-0x58]);
	sub(AO, -32);
	dec(H);
	jg(l1b28, T_NEAR);
	vaddps(xmm8, xmm9, xmm8);
	align(4);

L(l1b84);
	mov(H, K);
	and_(H, 0x3);
	je(l1bb0, T_NEAR);
	align(4);

L(l1b90);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovddup(xmm0, qword[AO-0x78]);
	sub(AO, -8);
	dec(H);
	jg(l1b90, T_NEAR);
	align(4);

L(l1bb0);
	vmovlps(qword[CO1], xmm8);
	add(CO1, LDC);
	add(CO2, LDC);
	sub(AA, -128);
	align(4);

L(l1bc0);
	mov(A, AO);
	align(4);

L(l1bc4);
	test(J, 0x1);
	jle(l1f78, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x4);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x4);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l1da0, T_NEAR);
	align(4);

L(l1bf8);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(xmm8, xmm8, xmm8);
	vmovss(xmm6, dword[BO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	vmovss(xmm0, dword[AO-0x80]);
	vxorps(xmm10, xmm10, xmm10);
	vxorps(xmm11, xmm11, xmm11);
	vmovss(xmm1, dword[AO-0x7c]);
	prefetcht0(byte[CO1]);
	prefetcht0(byte[CO1+LDC*1]);
	prefetcht0(byte[CO2]);
	prefetcht0(byte[CO2+LDC*1]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1d18, T_NEAR);
	align(4);

L(l1c44);
	vfmadd231ss(xmm8, xmm6, xmm0);
	prefetcht0(byte[BO+0x100]);
	vmovss(xmm6, dword[BO-0x7c]);
	vfmadd231ss(xmm9, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x78]);
	vfmadd231ss(xmm10, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x74]);
	vfmadd231ss(xmm11, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x70]);
	vmovss(xmm0, dword[AO-0x78]);
	vfmadd231ss(xmm8, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x6c]);
	vfmadd231ss(xmm9, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x68]);
	vfmadd231ss(xmm10, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x64]);
	vfmadd231ss(xmm11, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x60]);
	vmovss(xmm1, dword[AO-0x74]);
	vfmadd231ss(xmm8, xmm6, xmm0);
	prefetcht0(byte[AO+0x240]);
	vmovss(xmm6, dword[BO-0x5c]);
	vfmadd231ss(xmm9, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x58]);
	vfmadd231ss(xmm10, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x54]);
	vfmadd231ss(xmm11, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x50]);
	vmovss(xmm0, dword[AO-0x70]);
	vfmadd231ss(xmm8, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x4c]);
	vfmadd231ss(xmm9, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x48]);
	vfmadd231ss(xmm10, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x44]);
	vfmadd231ss(xmm11, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x40]);
	vmovss(xmm1, dword[AO-0x6c]);
	sub(AO, -16);
	sub(BO, -64);
	dec(H);
	jg(l1c44, T_NEAR);
	align(4);

L(l1d18);
	mov(H, K);
	and_(H, 0x3);
	je(l1d60, T_NEAR);
	align(4);

L(l1d24);
	vfmadd231ss(xmm8, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x7c]);
	vfmadd231ss(xmm9, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x78]);
	vfmadd231ss(xmm10, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x74]);
	vfmadd231ss(xmm11, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x70]);
	vmovss(xmm0, dword[AO-0x7c]);
	sub(AO, -4);
	sub(BO, -16);
	dec(H);
	jg(l1d24, T_NEAR);
	align(4);

L(l1d60);
	vmovss(dword[CO1], xmm8);
	prefetcht2(byte[AA+0x40]);
	vmovss(dword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*4]);
	prefetcht2(byte[AA+0x80]);
	vmovss(dword[CO2], xmm10);
	prefetcht2(byte[AA+0xc0]);
	vmovss(dword[CO2+LDC*1], xmm11);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -128);
	dec(I);
	jg(l1bf8, T_NEAR);
	align(4);

L(l1da0);
	test(N, 0x2);
	jle(l1ea4, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vmovss(xmm2, dword[BO-0x80]);
	vxorps(xmm8, xmm8, xmm8);
	vmovss(xmm0, dword[AO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1]);
	prefetcht0(byte[CO1+LDC*1]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1e54, T_NEAR);
	align(4);

L(l1ddc);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x7c]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x78]);
	vmovss(xmm0, dword[AO-0x7c]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x74]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x70]);
	vmovss(xmm0, dword[AO-0x78]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x6c]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x68]);
	vmovss(xmm0, dword[AO-0x74]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x64]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x60]);
	vmovss(xmm0, dword[AO-0x70]);
	sub(BO, -32);
	sub(AO, -16);
	dec(H);
	jg(l1ddc, T_NEAR);
	align(4);

L(l1e54);
	mov(H, K);
	and_(H, 0x3);
	je(l1e88, T_NEAR);
	align(4);

L(l1e60);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x7c]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x78]);
	vmovss(xmm0, dword[AO-0x7c]);
	sub(BO, -8);
	sub(AO, -4);
	dec(H);
	jg(l1e60, T_NEAR);
	align(4);

L(l1e88);
	vmovss(dword[CO1], xmm8);
	prefetcht2(byte[AA+0x40]);
	vmovss(dword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	sub(AA, -128);
	align(4);

L(l1ea4);
	test(N, 0x1);
	jle(l1f74, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vmovss(xmm2, dword[BO-0x80]);
	vmovss(xmm3, dword[BO-0x7c]);
	vmovss(xmm0, dword[AO-0x80]);
	vmovss(xmm1, dword[AO-0x7c]);
	vxorps(xmm8, xmm8, xmm8);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1f3c, T_NEAR);
	align(4);

L(l1ee4);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x78]);
	vmovss(xmm0, dword[AO-0x78]);
	vfmadd231ss(xmm9, xmm1, xmm3);
	vmovss(xmm3, dword[BO-0x74]);
	vmovss(xmm1, dword[AO-0x74]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x70]);
	vmovss(xmm0, dword[AO-0x70]);
	vfmadd231ss(xmm9, xmm1, xmm3);
	vmovss(xmm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovss(xmm1, dword[AO-0x6c]);
	sub(AO, -16);
	dec(H);
	jg(l1ee4, T_NEAR);
	vaddss(xmm8, xmm9, xmm8);
	align(4);

L(l1f3c);
	mov(H, K);
	and_(H, 0x3);
	je(l1f64, T_NEAR);
	align(4);

L(l1f48);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovss(xmm0, dword[AO-0x7c]);
	sub(AO, -4);
	dec(H);
	jg(l1f48, T_NEAR);
	align(4);

L(l1f64);
	vmovss(dword[CO1], xmm8);
	add(CO1, LDC);
	add(CO2, LDC);
	sub(AA, -128);
	align(4);

L(l1f74);
	mov(A, AO);
	align(4);

L(l1f78);
	mov(AO, qword[rsp]);
	mov(BO, qword[rsp+0x8]);
	mov(I, qword[rsp+0x10]);
	mov(J, qword[rsp+0x18]);
	mov(CO1, qword[rsp+0x20]);
	mov(CO2, qword[rsp+0x28]);
	vzeroupper();
	add(rsp, 0x40);
	ret();
}
outLocalLabel();

#undef M
#undef N
#undef K
#undef A
#undef B
#undef C
#undef LDC
#undef AA
#undef I
#undef J
#undef H
#undef AO
#undef BO
#undef CO1
#undef CO2
#undef STACKSIZE
#undef OLD_C
#undef OLD_LDC
#undef OFFSET
}

}
}
}
