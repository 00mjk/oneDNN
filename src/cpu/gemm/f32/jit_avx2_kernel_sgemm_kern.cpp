/*******************************************************************************
* Copyright 2018 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#include "common_f32.hpp"
#include "jit_generator.hpp"

namespace mkldnn {
namespace impl {
namespace cpu {

jit_avx2_kernel_sgemm_kern::jit_avx2_kernel_sgemm_kern(): jit_generator(nullptr, GEMM_CODE_SIZE)
{

#ifndef _WIN32

#define M	rdi
#define N	rsi
#define K	rdx
#define A	r8
#define B	r9
#define C	r10
#define LDC	r11

#define AA	rcx
#define I	r12
#define J	r13
#define H	rax
#define AO	rbx
#define BO	rbp
#define CO1	r14
#define CO2	r15

#define STACKSIZE4

#define OLD_C		8+STACKSIZE+rsp
#define OLD_LDC		16+STACKSIZE+rsp
#define OFFSET		24+STACKSIZE+rsp

#else

#define M	rcx
#define N	rdx
#define K	r8
#define A	r9
#define B	rsi
#define C	rdi
#define LDC	r10
#define AA	r11
#define I	r12
#define J	r13
#define H	rax
#define AO	rbx
#define BO	rbp
#define CO1	r14
#define CO2	r15

#define STACKSIZE	256

#define OLD_C		56+STACKSIZE+rsp
#define OLD_LDC		64+STACKSIZE+rsp
#define OFFSET		72+STACKSIZE+rsp

#endif

inLocalLabel();
{

Xbyak::Label l1004;
Xbyak::Label l108c;
Xbyak::Label l1098;
Xbyak::Label l10c0;
Xbyak::Label l10f4;
Xbyak::Label l10f8;
Xbyak::Label l112c;
Xbyak::Label l1190;
Xbyak::Label l1290;
Xbyak::Label l12a0;
Xbyak::Label l12e0;
Xbyak::Label l1350;
Xbyak::Label l1398;
Xbyak::Label l1418;
Xbyak::Label l1424;
Xbyak::Label l144c;
Xbyak::Label l1484;
Xbyak::Label l14c8;
Xbyak::Label l1520;
Xbyak::Label l152c;
Xbyak::Label l154c;
Xbyak::Label l156c;
Xbyak::Label l1570;
Xbyak::Label l15a4;
Xbyak::Label l1608;
Xbyak::Label l1700;
Xbyak::Label l170c;
Xbyak::Label l174c;
Xbyak::Label l17b4;
Xbyak::Label l17f8;
Xbyak::Label l1878;
Xbyak::Label l1884;
Xbyak::Label l18ac;
Xbyak::Label l18dc;
Xbyak::Label l1920;
Xbyak::Label l197c;
Xbyak::Label l1988;
Xbyak::Label l19a8;
Xbyak::Label l19c4;
Xbyak::Label l19c8;
Xbyak::Label l19fc;
Xbyak::Label l1a60;
Xbyak::Label l1b58;
Xbyak::Label l1b64;
Xbyak::Label l1ba4;
Xbyak::Label l1c0c;
Xbyak::Label l1c50;
Xbyak::Label l1cd0;
Xbyak::Label l1cdc;
Xbyak::Label l1d04;
Xbyak::Label l1d34;
Xbyak::Label l1d78;
Xbyak::Label l1dd4;
Xbyak::Label l1de0;
Xbyak::Label l1e00;
Xbyak::Label l1e1c;
Xbyak::Label l1e20;
Xbyak::Label l1e54;
Xbyak::Label l1ea0;
Xbyak::Label l1f74;
Xbyak::Label l1f80;
Xbyak::Label l1fbc;
Xbyak::Label l2024;
Xbyak::Label l2060;
Xbyak::Label l20d8;
Xbyak::Label l20e4;
Xbyak::Label l210c;
Xbyak::Label l213c;
Xbyak::Label l217c;
Xbyak::Label l21d4;
Xbyak::Label l21e0;
Xbyak::Label l21fc;
Xbyak::Label l2218;
Xbyak::Label l221c;
Xbyak::Label l2e4;
Xbyak::Label l31c;
Xbyak::Label l50;
Xbyak::Label l504;
Xbyak::Label l510;
Xbyak::Label l580;
Xbyak::Label l678;
Xbyak::Label l6f4;
Xbyak::Label l78;
Xbyak::Label l82c;
Xbyak::Label l838;
Xbyak::Label l880;
Xbyak::Label l900;
Xbyak::Label l954;
Xbyak::Label la40;
Xbyak::Label la4c;
Xbyak::Label la7c;
Xbyak::Label lac4;
Xbyak::Label lad8;
Xbyak::Label lb0c;
Xbyak::Label lb78;
Xbyak::Label lcec;
Xbyak::Label lcfc;
Xbyak::Label ld54;
Xbyak::Label le04;
Xbyak::Label le54;
Xbyak::Label lf1c;
Xbyak::Label lf28;
Xbyak::Label lf60;
Xbyak::Label lfbc;
Xbyak::Label lfc;

	sub(rsp, 0x40);
	mov(qword[rsp], AO);
	mov(qword[rsp+0x8], BO);
	mov(qword[rsp+0x10], I);
	mov(qword[rsp+0x18], J);
	mov(qword[rsp+0x20], CO1);
	mov(qword[rsp+0x28], CO2);
	mov(M, qword[M]);
	mov(N, qword[N]);
	mov(K, qword[K]);
	mov(C, qword[rsp+0x48]);
	mov(LDC, qword[rsp+0x50]);
	sub(A, -128);
	sub(B, -128);
	shl(LDC, 0x2);
	mov(J, M);
	cmp(J, 0x18);
	jl(lad8, T_NEAR);
	align(4);

L(l50);
	mov(AA, K);
	imul(AA, AA, 0x60);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x60);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l678, T_NEAR);
	align(4);

L(l78);
	prefetcht2(byte[AA-0x80]);
	vxorps(ymm4, ymm4, ymm4);
	vbroadcastss(ymm3, dword[BO-0x80]);
	vxorps(ymm5, ymm5, ymm5);
	vmovups(ymm0, yword[A-0x80]);
	vxorps(ymm6, ymm6, ymm6);
	vmovups(ymm1, yword[A-0x60]);
	vxorps(ymm7, ymm7, ymm7);
	vmovups(ymm2, yword[A-0x40]);
	vxorps(ymm8, ymm8, ymm8);
	vxorps(ymm9, ymm9, ymm9);
	prefetcht0(byte[CO1+0x1c]);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	vxorps(ymm10, ymm10, ymm10);
	vxorps(ymm11, ymm11, ymm11);
	prefetcht0(byte[CO2+0x1c]);
	prefetcht0(byte[CO2+LDC*1+0x1c]);
	vxorps(ymm12, ymm12, ymm12);
	vxorps(ymm13, ymm13, ymm13);
	vxorps(ymm14, ymm14, ymm14);
	vxorps(ymm15, ymm15, ymm15);
	mov(AO, A);
	mov(H, K);
	sar(H, 0x2);
	jle(l504, T_NEAR);
	sub(H, 0x22);
	jle(l2e4, T_NEAR);
	align(4);

L(lfc);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	prefetcht0(byte[AO+0x240]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x78]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x74]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x68]);
	prefetcht0(byte[AO+0x2c0]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x64]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x80]);
	vbroadcastss(ymm3, dword[BO-0x60]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x5c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x58]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x54]);
	prefetcht0(byte[AO+0x340]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0xa0]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0xc0]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0xe0]);
	vbroadcastss(ymm3, dword[BO-0x50]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x4c]);
	prefetcht0(byte[AO+0x380]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x48]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x44]);
	sub(BO, -64);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x100]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x120]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x140]);
	sub(AO, -384);
	sub(H, 0x1);
	vbroadcastss(ymm3, dword[BO-0x80]);
	jg(lfc, T_NEAR);
	align(4);

L(l2e4);
	prefetcht2(byte[AA-0x40]);
	prefetcht0(byte[CO1+0x1c]);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	prefetcht0(byte[CO2+0x1c]);
	prefetcht0(byte[CO2+LDC*1+0x1c]);
	prefetcht0(byte[CO1+0x5c]);
	prefetcht0(byte[CO1+LDC*1+0x5c]);
	prefetcht0(byte[CO2+0x5c]);
	prefetcht0(byte[CO2+LDC*1+0x5c]);
	add(H, 0x22);
	prefetcht2(byte[AA]);
	align(4);

L(l31c);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	prefetcht0(byte[AO+0x240]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x78]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x74]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x68]);
	prefetcht0(byte[AO+0x2c0]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x64]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x80]);
	vbroadcastss(ymm3, dword[BO-0x60]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x5c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x58]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x54]);
	prefetcht0(byte[AO+0x340]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0xa0]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0xc0]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0xe0]);
	vbroadcastss(ymm3, dword[BO-0x50]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x4c]);
	prefetcht0(byte[AO+0x380]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x48]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x44]);
	sub(BO, -64);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x100]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x120]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x140]);
	sub(AO, -384);
	vbroadcastss(ymm3, dword[BO-0x80]);
	sub(H, 0x1);
	jg(l31c, T_NEAR);
	align(4);

L(l504);
	mov(H, K);
	and_(H, 0x3);
	je(l580, T_NEAR);
	align(4);

L(l510);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x78]);
	vfmadd231ps(ymm6, ymm3, ymm0);
	vfmadd231ps(ymm10, ymm3, ymm1);
	vfmadd231ps(ymm14, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x74]);
	vfmadd231ps(ymm7, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm11, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm15, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	sub(AO, -96);
	sub(BO, -16);
	dec(H);
	jg(l510, T_NEAR);
	align(4);

L(l580);
	vmovups(ymm0, yword[CO1]);
	vaddps(ymm4, ymm0, ymm4);
	vmovups(ymm1, yword[CO1+0x20]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(ymm2, yword[CO1+0x40]);
	vaddps(ymm12, ymm2, ymm12);
	vmovups(yword[CO1], ymm4);
	vmovups(yword[CO1+0x20], ymm8);
	vmovups(yword[CO1+0x40], ymm12);
	vmovups(ymm0, yword[CO1+LDC*1]);
	vaddps(ymm5, ymm0, ymm5);
	vmovups(ymm1, yword[CO1+LDC*1+0x20]);
	vaddps(ymm9, ymm1, ymm9);
	vmovups(ymm2, yword[CO1+LDC*1+0x40]);
	vaddps(ymm13, ymm2, ymm13);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm5);
	vmovups(yword[CO1+LDC*1+0x20], ymm9);
	vmovups(yword[CO1+LDC*1+0x40], ymm13);
	lea(CO1, ptr[CO1+LDC*4]);
	vmovups(ymm0, yword[CO2]);
	vaddps(ymm6, ymm0, ymm6);
	vmovups(ymm1, yword[CO2+0x20]);
	vaddps(ymm10, ymm1, ymm10);
	vmovups(ymm2, yword[CO2+0x40]);
	vaddps(ymm14, ymm2, ymm14);
	prefetcht2(byte[AA+0x80]);
	vmovups(yword[CO2], ymm6);
	vmovups(yword[CO2+0x20], ymm10);
	vmovups(yword[CO2+0x40], ymm14);
	vmovups(ymm0, yword[CO2+LDC*1]);
	vaddps(ymm7, ymm0, ymm7);
	vmovups(ymm1, yword[CO2+LDC*1+0x20]);
	vaddps(ymm11, ymm1, ymm11);
	vmovups(ymm2, yword[CO2+LDC*1+0x40]);
	vaddps(ymm15, ymm2, ymm15);
	prefetcht2(byte[AA+0xc0]);
	vmovups(yword[CO2+LDC*1], ymm7);
	vmovups(yword[CO2+LDC*1+0x20], ymm11);
	vmovups(yword[CO2+LDC*1+0x40], ymm15);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -192);
	dec(I);
	jg(l78, T_NEAR);
	align(4);

L(l678);
	test(N, 0x2);
	jle(l900, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm4, ymm4, ymm4);
	vbroadcastss(ymm3, dword[BO-0x80]);
	vxorps(ymm5, ymm5, ymm5);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm6, ymm6, ymm6);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm7, ymm7, ymm7);
	vmovups(ymm2, yword[AO-0x40]);
	vxorps(ymm8, ymm8, ymm8);
	vxorps(ymm9, ymm9, ymm9);
	prefetcht0(byte[CO1+0x1c]);
	vxorps(ymm10, ymm10, ymm10);
	vxorps(ymm11, ymm11, ymm11);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	vxorps(ymm12, ymm12, ymm12);
	vxorps(ymm13, ymm13, ymm13);
	vxorps(ymm14, ymm14, ymm14);
	vxorps(ymm15, ymm15, ymm15);
	mov(H, K);
	sar(H, 0x2);
	jle(l82c, T_NEAR);
	align(4);

L(l6f4);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	prefetcht0(byte[AO+0x240]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x78]);
	prefetcht0(byte[AO+0x2c0]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x74]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x80]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0xa0]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0xc0]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0xe0]);
	vbroadcastss(ymm3, dword[BO-0x68]);
	prefetcht0(byte[AO+0x340]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x64]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0x100]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO+0x120]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x140]);
	vbroadcastss(ymm3, dword[BO-0x60]);
	prefetcht0(byte[AO+0x380]);
	sub(BO, -32);
	sub(AO, -384);
	dec(H);
	jg(l6f4, T_NEAR);
	align(4);

L(l82c);
	mov(H, K);
	and_(H, 0x3);
	je(l880, T_NEAR);
	align(4);

L(l838);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	vfmadd231ps(ymm5, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm9, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm13, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x78]);
	sub(AO, -96);
	sub(BO, -8);
	dec(H);
	jg(l838, T_NEAR);
	align(4);

L(l880);
	vmovups(ymm0, yword[CO1]);
	vaddps(ymm4, ymm0, ymm4);
	vmovups(ymm1, yword[CO1+0x20]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(ymm2, yword[CO1+0x40]);
	vaddps(ymm12, ymm2, ymm12);
	vmovups(yword[CO1], ymm4);
	vmovups(yword[CO1+0x20], ymm8);
	vmovups(yword[CO1+0x40], ymm12);
	vmovups(ymm0, yword[CO1+LDC*1]);
	vaddps(ymm5, ymm0, ymm5);
	vmovups(ymm1, yword[CO1+LDC*1+0x20]);
	vaddps(ymm9, ymm1, ymm9);
	vmovups(ymm2, yword[CO1+LDC*1+0x40]);
	vaddps(ymm13, ymm2, ymm13);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm5);
	vmovups(yword[CO1+LDC*1+0x20], ymm9);
	vmovups(yword[CO1+LDC*1+0x40], ymm13);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -64);
	align(4);

L(l900);
	test(N, 0x1);
	jle(lac4, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm4, ymm4, ymm4);
	vxorps(ymm8, ymm8, ymm8);
	vxorps(ymm12, ymm12, ymm12);
	vmovups(ymm0, yword[AO-0x80]);
	vmovups(ymm1, yword[AO-0x60]);
	vmovups(ymm2, yword[AO-0x40]);
	vbroadcastss(ymm3, dword[BO-0x80]);
	vbroadcastss(ymm5, dword[BO-0x7c]);
	prefetcht0(byte[CO1+0x1c]);
	prefetcht0(byte[CO1+0x5c]);
	mov(H, K);
	sar(H, 0x2);
	jle(la40, T_NEAR);
	align(4);

L(l954);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm3, ymm1);
	prefetcht0(byte[AO+0x240]);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x78]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm4, ymm5, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm8, ymm5, ymm1);
	prefetcht0(byte[AO+0x2c0]);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm12, ymm5, ymm2);
	vmovups(ymm2, yword[AO+0x80]);
	vbroadcastss(ymm5, dword[BO-0x74]);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vmovups(ymm0, yword[AO+0xa0]);
	vfmadd231ps(ymm8, ymm3, ymm1);
	prefetcht0(byte[AO+0x340]);
	vmovups(ymm1, yword[AO+0xc0]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0xe0]);
	vbroadcastss(ymm3, dword[BO-0x70]);
	vfmadd231ps(ymm4, ymm5, ymm0);
	vmovups(ymm0, yword[AO+0x100]);
	vfmadd231ps(ymm8, ymm5, ymm1);
	prefetcht0(byte[AO+0x380]);
	vmovups(ymm1, yword[AO+0x120]);
	vfmadd231ps(ymm12, ymm5, ymm2);
	vmovups(ymm2, yword[AO+0x140]);
	vbroadcastss(ymm5, dword[BO-0x6c]);
	sub(BO, -16);
	sub(AO, -384);
	dec(H);
	jg(l954, T_NEAR);
	align(4);

L(la40);
	mov(H, K);
	and_(H, 0x3);
	je(la7c, T_NEAR);
	align(4);

L(la4c);
	vfmadd231ps(ymm4, ymm3, ymm0);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm3, ymm1);
	vmovups(ymm1, yword[AO]);
	vfmadd231ps(ymm12, ymm3, ymm2);
	vmovups(ymm2, yword[AO+0x20]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	sub(BO, -4);
	sub(AO, -96);
	dec(H);
	jg(la4c, T_NEAR);
	align(4);

L(la7c);
	vmovups(ymm0, yword[CO1]);
	vaddps(ymm4, ymm0, ymm4);
	vmovups(ymm1, yword[CO1+0x20]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(ymm2, yword[CO1+0x40]);
	vaddps(ymm12, ymm2, ymm12);
	vmovups(yword[CO1], ymm4);
	vmovups(yword[CO1+0x20], ymm8);
	vmovups(yword[CO1+0x40], ymm12);
	prefetcht2(byte[AA+0x40]);
	add(CO1, LDC);
	add(CO2, LDC);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -64);
	align(4);

L(lac4);
	mov(A, AO);
	sub(J, 0x18);
	cmp(J, 0x18);
	jge(l50, T_NEAR);
	align(4);

L(lad8);
	test(J, 0x10);
	jle(l10f8, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x40);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x40);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(le04, T_NEAR);
	align(4);

L(lb0c);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm8, ymm8, ymm8);
	vbroadcastss(ymm6, dword[BO-0x80]);
	vxorps(ymm9, ymm9, ymm9);
	vxorps(ymm10, ymm10, ymm10);
	vxorps(ymm11, ymm11, ymm11);
	vxorps(ymm12, ymm12, ymm12);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm13, ymm13, ymm13);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm14, ymm14, ymm14);
	vmovups(ymm2, yword[AO-0x40]);
	vxorps(ymm15, ymm15, ymm15);
	vmovups(ymm3, yword[AO-0x20]);
	prefetcht0(byte[CO1+0x3c]);
	prefetcht0(byte[CO1+LDC*1+0x3c]);
	prefetcht0(byte[CO2+0x3c]);
	prefetcht0(byte[CO2+LDC*1+0x3c]);
	mov(H, K);
	sar(H, 0x2);
	jle(lcec, T_NEAR);
	align(4);

L(lb78);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x78]);
	prefetcht0(byte[AO+0x240]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x74]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x70]);
	vmovups(ymm0, yword[AO]);
	vmovups(ymm1, yword[AO+0x20]);
	vfmadd231ps(ymm8, ymm6, ymm2);
	vfmadd231ps(ymm12, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x6c]);
	vfmadd231ps(ymm9, ymm6, ymm2);
	vfmadd231ps(ymm13, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x68]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm10, ymm6, ymm2);
	vfmadd231ps(ymm14, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x64]);
	vfmadd231ps(ymm11, ymm6, ymm2);
	vfmadd231ps(ymm15, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x60]);
	vmovups(ymm2, yword[AO+0x40]);
	vmovups(ymm3, yword[AO+0x60]);
	prefetcht0(byte[BO+0x140]);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x5c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x58]);
	prefetcht0(byte[AO+0x2c0]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x54]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x50]);
	vmovups(ymm0, yword[AO+0x80]);
	vmovups(ymm1, yword[AO+0xa0]);
	vfmadd231ps(ymm8, ymm6, ymm2);
	vfmadd231ps(ymm12, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x4c]);
	vfmadd231ps(ymm9, ymm6, ymm2);
	vfmadd231ps(ymm13, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x48]);
	prefetcht0(byte[AO+0x300]);
	vfmadd231ps(ymm10, ymm6, ymm2);
	vfmadd231ps(ymm14, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x44]);
	vfmadd231ps(ymm11, ymm6, ymm2);
	vfmadd231ps(ymm15, ymm6, ymm3);
	vbroadcastss(ymm6, dword[BO-0x40]);
	vmovups(ymm2, yword[AO+0xc0]);
	vmovups(ymm3, yword[AO+0xe0]);
	sub(BO, -64);
	sub(AO, -256);
	dec(H);
	jg(lb78, T_NEAR);
	align(4);

L(lcec);
	prefetcht2(byte[AA-0x40]);
	mov(H, K);
	and_(H, 0x3);
	je(ld54, T_NEAR);
	align(4);

L(lcfc);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x78]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x74]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vmovups(ymm1, yword[AO-0x20]);
	vbroadcastss(ymm6, dword[BO-0x70]);
	sub(AO, -64);
	sub(BO, -16);
	dec(H);
	jg(lcfc, T_NEAR);
	align(4);

L(ld54);
	vmovups(ymm1, yword[CO1]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(ymm2, yword[CO1+0x20]);
	vaddps(ymm12, ymm2, ymm12);
	vmovups(yword[CO1], ymm8);
	vmovups(yword[CO1+0x20], ymm12);
	vmovups(ymm1, yword[CO1+LDC*1]);
	vaddps(ymm9, ymm1, ymm9);
	vmovups(ymm2, yword[CO1+LDC*1+0x20]);
	vaddps(ymm13, ymm2, ymm13);
	prefetcht2(byte[AA]);
	vmovups(yword[CO1+LDC*1], ymm9);
	vmovups(yword[CO1+LDC*1+0x20], ymm13);
	lea(CO1, ptr[CO1+LDC*4]);
	vmovups(ymm1, yword[CO2]);
	vaddps(ymm10, ymm1, ymm10);
	vmovups(ymm2, yword[CO2+0x20]);
	vaddps(ymm14, ymm2, ymm14);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO2], ymm10);
	vmovups(yword[CO2+0x20], ymm14);
	vmovups(ymm1, yword[CO2+LDC*1]);
	vaddps(ymm11, ymm1, ymm11);
	vmovups(ymm2, yword[CO2+LDC*1+0x20]);
	vaddps(ymm15, ymm2, ymm15);
	prefetcht2(byte[AA+0x80]);
	vmovups(yword[CO2+LDC*1], ymm11);
	vmovups(yword[CO2+LDC*1+0x20], ymm15);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -192);
	dec(I);
	jg(lb0c, T_NEAR);
	align(4);

L(le04);
	test(N, 0x2);
	jle(lfbc, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm8, ymm8, ymm8);
	vbroadcastss(ymm4, dword[BO-0x80]);
	vxorps(ymm9, ymm9, ymm9);
	vxorps(ymm12, ymm12, ymm12);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm13, ymm13, ymm13);
	vmovups(ymm1, yword[AO-0x60]);
	prefetcht0(byte[CO1+0x3c]);
	prefetcht0(byte[CO1+LDC*1+0x3c]);
	mov(H, K);
	sar(H, 0x2);
	jle(lf1c, T_NEAR);
	align(4);

L(le54);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO-0x20]);
	vbroadcastss(ymm4, dword[BO-0x78]);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x74]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO+0x20]);
	vbroadcastss(ymm4, dword[BO-0x70]);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x6c]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO+0x60]);
	vbroadcastss(ymm4, dword[BO-0x68]);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x64]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO+0x80]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO+0xa0]);
	vbroadcastss(ymm4, dword[BO-0x60]);
	sub(BO, -32);
	sub(AO, -256);
	dec(H);
	jg(le54, T_NEAR);
	align(4);

L(lf1c);
	mov(H, K);
	and_(H, 0x3);
	je(lf60, T_NEAR);
	align(4);

L(lf28);
	vfmadd231ps(ymm8, ymm4, ymm0);
	vfmadd231ps(ymm12, ymm4, ymm1);
	vbroadcastss(ymm4, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm4, ymm0);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm13, ymm4, ymm1);
	vmovups(ymm1, yword[AO-0x20]);
	vbroadcastss(ymm4, dword[BO-0x78]);
	sub(AO, -64);
	sub(BO, -8);
	dec(H);
	jg(lf28, T_NEAR);
	align(4);

L(lf60);
	vmovups(ymm1, yword[CO1]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(ymm2, yword[CO1+0x20]);
	vaddps(ymm12, ymm2, ymm12);
	vmovups(yword[CO1], ymm8);
	vmovups(yword[CO1+0x20], ymm12);
	vmovups(ymm1, yword[CO1+LDC*1]);
	vaddps(ymm9, ymm1, ymm9);
	vmovups(ymm2, yword[CO1+LDC*1+0x20]);
	vaddps(ymm13, ymm2, ymm13);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm9);
	vmovups(yword[CO1+LDC*1+0x20], ymm13);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -128);
	align(4);

L(lfbc);
	test(N, 0x1);
	jle(l10f4, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(ymm2, dword[BO-0x80]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	vxorps(ymm8, ymm8, ymm8);
	vmovups(ymm0, yword[AO-0x80]);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm12, ymm12, ymm12);
	prefetcht0(byte[CO1+0x3c]);
	mov(H, K);
	sar(H, 0x2);
	jle(l108c, T_NEAR);
	align(4);

L(l1004);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm12, ymm1, ymm2);
	vbroadcastss(ymm2, dword[BO-0x78]);
	vmovups(ymm1, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm0, ymm3);
	vmovups(ymm0, yword[AO]);
	vfmadd231ps(ymm12, ymm1, ymm3);
	vbroadcastss(ymm3, dword[BO-0x74]);
	vmovups(ymm1, yword[AO+0x20]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vmovups(ymm0, yword[AO+0x40]);
	vfmadd231ps(ymm12, ymm1, ymm2);
	vbroadcastss(ymm2, dword[BO-0x70]);
	vmovups(ymm1, yword[AO+0x60]);
	vfmadd231ps(ymm8, ymm0, ymm3);
	vmovups(ymm0, yword[AO+0x80]);
	vfmadd231ps(ymm12, ymm1, ymm3);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovups(ymm1, yword[AO+0xa0]);
	sub(AO, -256);
	dec(H);
	jg(l1004, T_NEAR);
	align(4);

L(l108c);
	mov(H, K);
	and_(H, 0x3);
	je(l10c0, T_NEAR);
	align(4);

L(l1098);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm12, ymm1, ymm2);
	vbroadcastss(ymm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovups(ymm1, yword[AO-0x20]);
	sub(AO, -64);
	dec(H);
	jg(l1098, T_NEAR);
	align(4);

L(l10c0);
	vmovups(ymm1, yword[CO1]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(ymm2, yword[CO1+0x20]);
	vaddps(ymm12, ymm2, ymm12);
	vmovups(yword[CO1], ymm8);
	vmovups(yword[CO1+0x20], ymm12);
	add(CO1, LDC);
	add(CO2, LDC);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -128);
	align(4);

L(l10f4);
	mov(A, AO);
	align(4);

L(l10f8);
	test(J, 0x8);
	jle(l1570, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x20);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x20);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l1350, T_NEAR);
	align(4);

L(l112c);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(ymm8, ymm8, ymm8);
	vbroadcastss(ymm6, dword[BO-0x80]);
	vxorps(ymm9, ymm9, ymm9);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm10, ymm10, ymm10);
	vxorps(ymm11, ymm11, ymm11);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm12, ymm12, ymm12);
	prefetcht0(byte[CO1+0x1c]);
	vxorps(ymm13, ymm13, ymm13);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	vxorps(ymm14, ymm14, ymm14);
	prefetcht0(byte[CO2+0x1c]);
	vxorps(ymm15, ymm15, ymm15);
	prefetcht0(byte[CO2+LDC*1+0x1c]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1290, T_NEAR);
	align(4);

L(l1190);
	vfmadd231ps(ymm8, ymm6, ymm0);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(ymm6, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	prefetcht0(byte[AO+0x240]);
	vbroadcastss(ymm6, dword[BO-0x78]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x74]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x70]);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x6c]);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x68]);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x64]);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x60]);
	vmovups(ymm1, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x5c]);
	prefetcht0(byte[AO+0x280]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x58]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x54]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x50]);
	vmovups(ymm0, yword[AO]);
	vfmadd231ps(ymm12, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x4c]);
	vfmadd231ps(ymm13, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x48]);
	vfmadd231ps(ymm14, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x44]);
	vfmadd231ps(ymm15, ymm6, ymm1);
	vbroadcastss(ymm6, dword[BO-0x40]);
	vmovups(ymm1, yword[AO+0x20]);
	sub(AO, -128);
	sub(BO, -64);
	dec(H);
	jg(l1190, T_NEAR);
	vaddps(ymm8, ymm8, ymm12);
	vaddps(ymm9, ymm9, ymm13);
	vaddps(ymm10, ymm10, ymm14);
	vaddps(ymm11, ymm11, ymm15);
	align(4);

L(l1290);
	prefetcht2(byte[AA-0x40]);
	mov(H, K);
	and_(H, 0x3);
	je(l12e0, T_NEAR);
	align(4);

L(l12a0);
	vfmadd231ps(ymm8, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x78]);
	vfmadd231ps(ymm10, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x74]);
	vfmadd231ps(ymm11, ymm6, ymm0);
	vbroadcastss(ymm6, dword[BO-0x70]);
	vmovups(ymm0, yword[AO-0x60]);
	sub(AO, -32);
	sub(BO, -16);
	dec(H);
	jg(l12a0, T_NEAR);
	align(4);

L(l12e0);
	prefetcht2(byte[AA]);
	vmovups(ymm1, yword[CO1]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(yword[CO1], ymm8);
	vmovups(ymm1, yword[CO1+LDC*1]);
	vaddps(ymm9, ymm1, ymm9);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm9);
	lea(CO1, ptr[CO1+LDC*4]);
	vmovups(ymm1, yword[CO2]);
	vaddps(ymm10, ymm1, ymm10);
	prefetcht2(byte[AA+0x80]);
	vmovups(yword[CO2], ymm10);
	vmovups(ymm1, yword[CO2+LDC*1]);
	vaddps(ymm11, ymm1, ymm11);
	prefetcht2(byte[AA+0xc0]);
	vmovups(yword[CO2+LDC*1], ymm11);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -192);
	dec(I);
	jg(l112c, T_NEAR);
	align(4);

L(l1350);
	test(N, 0x2);
	jle(l1484, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(ymm2, dword[BO-0x80]);
	vxorps(ymm8, ymm8, ymm8);
	vmovups(ymm0, yword[AO-0x80]);
	vxorps(ymm9, ymm9, ymm9);
	vmovups(ymm1, yword[AO-0x60]);
	prefetcht0(byte[CO1+0x1c]);
	prefetcht0(byte[CO1+LDC*1+0x1c]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1418, T_NEAR);
	align(4);

L(l1398);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x78]);
	vmovups(ymm0, yword[AO-0x60]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x74]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x70]);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x6c]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x68]);
	vmovups(ymm0, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x64]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x60]);
	vmovups(ymm0, yword[AO]);
	sub(BO, -32);
	sub(AO, -128);
	dec(H);
	jg(l1398, T_NEAR);
	align(4);

L(l1418);
	mov(H, K);
	and_(H, 0x3);
	je(l144c, T_NEAR);
	align(4);

L(l1424);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x7c]);
	vfmadd231ps(ymm9, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x78]);
	vmovups(ymm0, yword[AO-0x60]);
	sub(BO, -8);
	sub(AO, -32);
	dec(H);
	jg(l1424, T_NEAR);
	align(4);

L(l144c);
	vmovups(ymm1, yword[CO1]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(yword[CO1], ymm8);
	vmovups(ymm1, yword[CO1+LDC*1]);
	vaddps(ymm9, ymm1, ymm9);
	prefetcht2(byte[AA+0x40]);
	vmovups(yword[CO1+LDC*1], ymm9);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -128);
	align(4);

L(l1484);
	test(N, 0x1);
	jle(l156c, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(ymm2, dword[BO-0x80]);
	vbroadcastss(ymm3, dword[BO-0x7c]);
	vxorps(ymm8, ymm8, ymm8);
	vmovups(ymm0, yword[AO-0x80]);
	vmovups(ymm1, yword[AO-0x60]);
	vxorps(ymm9, ymm9, ymm9);
	prefetcht0(byte[CO1+0x1c]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1520, T_NEAR);
	align(4);

L(l14c8);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x78]);
	vmovups(ymm0, yword[AO-0x40]);
	vfmadd231ps(ymm9, ymm1, ymm3);
	vbroadcastss(ymm3, dword[BO-0x74]);
	vmovups(ymm1, yword[AO-0x20]);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x70]);
	vmovups(ymm0, yword[AO]);
	vfmadd231ps(ymm9, ymm1, ymm3);
	vbroadcastss(ymm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovups(ymm1, yword[AO+0x20]);
	sub(AO, -128);
	dec(H);
	jg(l14c8, T_NEAR);
	vaddps(ymm8, ymm9, ymm8);
	align(4);

L(l1520);
	mov(H, K);
	and_(H, 0x3);
	je(l154c, T_NEAR);
	align(4);

L(l152c);
	vfmadd231ps(ymm8, ymm0, ymm2);
	vbroadcastss(ymm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovups(ymm0, yword[AO-0x60]);
	sub(AO, -32);
	dec(H);
	jg(l152c, T_NEAR);
	align(4);

L(l154c);
	vmovups(ymm1, yword[CO1]);
	vaddps(ymm8, ymm1, ymm8);
	vmovups(yword[CO1], ymm8);
	add(CO1, LDC);
	add(CO2, LDC);
	prefetcht2(byte[AA+0x80]);
	sub(AA, -128);
	align(4);

L(l156c);
	mov(A, AO);
	align(4);

L(l1570);
	test(J, 0x4);
	jle(l19c8, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x10);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x10);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l17b4, T_NEAR);
	align(4);

L(l15a4);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(xmm8, xmm8, xmm8);
	vbroadcastss(xmm6, dword[BO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	vmovups(xmm0, xword[AO-0x80]);
	vxorps(xmm10, xmm10, xmm10);
	vxorps(xmm11, xmm11, xmm11);
	vmovups(xmm1, xword[AO-0x70]);
	vxorps(xmm12, xmm12, xmm12);
	prefetcht0(byte[CO1+0xc]);
	vxorps(xmm13, xmm13, xmm13);
	prefetcht0(byte[CO1+LDC*1+0xc]);
	vxorps(xmm14, xmm14, xmm14);
	prefetcht0(byte[CO2+0xc]);
	vxorps(xmm15, xmm15, xmm15);
	prefetcht0(byte[CO2+LDC*1+0xc]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1700, T_NEAR);
	align(4);

L(l1608);
	vfmadd231ps(xmm8, xmm6, xmm0);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(xmm6, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x78]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x74]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x70]);
	vmovups(xmm0, xword[AO-0x60]);
	vfmadd231ps(xmm12, xmm6, xmm1);
	prefetcht0(byte[AO+0x240]);
	vbroadcastss(xmm6, dword[BO-0x6c]);
	vfmadd231ps(xmm13, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x68]);
	vfmadd231ps(xmm14, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x64]);
	vfmadd231ps(xmm15, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x60]);
	vmovups(xmm1, xword[AO-0x50]);
	vfmadd231ps(xmm8, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x5c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x58]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x54]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x50]);
	vmovups(xmm0, xword[AO-0x40]);
	vfmadd231ps(xmm12, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x4c]);
	vfmadd231ps(xmm13, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x48]);
	vfmadd231ps(xmm14, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x44]);
	vfmadd231ps(xmm15, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x40]);
	vmovups(xmm1, xword[AO-0x30]);
	sub(AO, -64);
	sub(BO, -64);
	dec(H);
	jg(l1608, T_NEAR);
	vaddps(xmm8, xmm8, xmm12);
	vaddps(xmm9, xmm9, xmm13);
	vaddps(xmm10, xmm10, xmm14);
	vaddps(xmm11, xmm11, xmm15);
	align(4);

L(l1700);
	mov(H, K);
	and_(H, 0x3);
	je(l174c, T_NEAR);
	align(4);

L(l170c);
	vfmadd231ps(xmm8, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x78]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x74]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x70]);
	vmovups(xmm0, xword[AO-0x70]);
	sub(AO, -16);
	sub(BO, -16);
	dec(H);
	jg(l170c, T_NEAR);
	align(4);

L(l174c);
	vmovups(xmm1, xword[CO1]);
	vaddps(xmm8, xmm1, xmm8);
	vmovups(xword[CO1], xmm8);
	vmovups(xmm1, xword[CO1+LDC*1]);
	vaddps(xmm9, xmm1, xmm9);
	prefetcht2(byte[AA+0x40]);
	vmovups(xword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*4]);
	vmovups(xmm1, xword[CO2]);
	vaddps(xmm10, xmm1, xmm10);
	prefetcht2(byte[AA+0x80]);
	vmovups(xword[CO2], xmm10);
	vmovups(xmm1, xword[CO2+LDC*1]);
	vaddps(xmm11, xmm1, xmm11);
	prefetcht2(byte[AA+0xc0]);
	vmovups(xword[CO2+LDC*1], xmm11);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -128);
	dec(I);
	jg(l15a4, T_NEAR);
	align(4);

L(l17b4);
	test(N, 0x2);
	jle(l18dc, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(xmm2, dword[BO-0x80]);
	vxorps(xmm8, xmm8, xmm8);
	vmovups(xmm0, xword[AO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1+0xc]);
	prefetcht0(byte[CO1+LDC*1+0xc]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1878, T_NEAR);
	align(4);

L(l17f8);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovups(xmm0, xword[AO-0x70]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x74]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x70]);
	vmovups(xmm0, xword[AO-0x60]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x6c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x68]);
	vmovups(xmm0, xword[AO-0x50]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x64]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x60]);
	vmovups(xmm0, xword[AO-0x40]);
	sub(BO, -32);
	sub(AO, -64);
	dec(H);
	jg(l17f8, T_NEAR);
	align(4);

L(l1878);
	mov(H, K);
	and_(H, 0x3);
	je(l18ac, T_NEAR);
	align(4);

L(l1884);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovups(xmm0, xword[AO-0x70]);
	sub(BO, -8);
	sub(AO, -16);
	dec(H);
	jg(l1884, T_NEAR);
	align(4);

L(l18ac);
	vmovups(xmm1, xword[CO1]);
	vaddps(xmm8, xmm1, xmm8);
	vmovups(xword[CO1], xmm8);
	vmovups(xmm1, xword[CO1+LDC*1]);
	vaddps(xmm9, xmm1, xmm9);
	prefetcht2(byte[AA+0x40]);
	vmovups(xword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	sub(AA, -128);
	align(4);

L(l18dc);
	test(N, 0x1);
	jle(l19c4, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(xmm2, dword[BO-0x80]);
	vbroadcastss(xmm3, dword[BO-0x7c]);
	vxorps(xmm8, xmm8, xmm8);
	vmovups(xmm0, xword[AO-0x80]);
	vmovups(xmm1, xword[AO-0x70]);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1+0xc]);
	mov(H, K);
	sar(H, 0x2);
	jle(l197c, T_NEAR);
	align(4);

L(l1920);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovups(xmm0, xword[AO-0x60]);
	vfmadd231ps(xmm9, xmm1, xmm3);
	vbroadcastss(xmm3, dword[BO-0x74]);
	vmovups(xmm1, xword[AO-0x50]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x70]);
	vmovups(xmm0, xword[AO-0x40]);
	vfmadd231ps(xmm9, xmm1, xmm3);
	vbroadcastss(xmm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovups(xmm1, xword[AO-0x30]);
	sub(AO, -64);
	dec(H);
	jg(l1920, T_NEAR);
	vaddps(xmm8, xmm9, xmm8);
	align(4);

L(l197c);
	mov(H, K);
	and_(H, 0x3);
	je(l19a8, T_NEAR);
	align(4);

L(l1988);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovups(xmm0, xword[AO-0x70]);
	sub(AO, -16);
	dec(H);
	jg(l1988, T_NEAR);
	align(4);

L(l19a8);
	vmovups(xmm1, xword[CO1]);
	vaddps(xmm8, xmm1, xmm8);
	vmovups(xword[CO1], xmm8);
	add(CO1, LDC);
	add(CO2, LDC);
	sub(AA, -128);
	align(4);

L(l19c4);
	mov(A, AO);
	align(4);

L(l19c8);
	test(J, 0x2);
	jle(l1e20, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x8);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x8);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l1c0c, T_NEAR);
	align(4);

L(l19fc);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(xmm8, xmm8, xmm8);
	vbroadcastss(xmm6, dword[BO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	vmovddup(xmm0, qword[AO-0x80]);
	vxorps(xmm10, xmm10, xmm10);
	vxorps(xmm11, xmm11, xmm11);
	vmovddup(xmm1, qword[AO-0x78]);
	vxorps(xmm12, xmm12, xmm12);
	prefetcht0(byte[CO1+0x4]);
	vxorps(xmm13, xmm13, xmm13);
	prefetcht0(byte[CO1+LDC*1+0x4]);
	vxorps(xmm14, xmm14, xmm14);
	prefetcht0(byte[CO2+0x4]);
	vxorps(xmm15, xmm15, xmm15);
	prefetcht0(byte[CO2+LDC*1+0x4]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1b58, T_NEAR);
	align(4);

L(l1a60);
	vfmadd231ps(xmm8, xmm6, xmm0);
	prefetcht0(byte[BO+0x100]);
	vbroadcastss(xmm6, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x78]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x74]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x70]);
	vmovddup(xmm0, qword[AO-0x70]);
	vfmadd231ps(xmm12, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x6c]);
	vfmadd231ps(xmm13, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x68]);
	vfmadd231ps(xmm14, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x64]);
	vfmadd231ps(xmm15, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x60]);
	vmovddup(xmm1, qword[AO-0x68]);
	vfmadd231ps(xmm8, xmm6, xmm0);
	prefetcht0(byte[AO+0x240]);
	vbroadcastss(xmm6, dword[BO-0x5c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x58]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x54]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x50]);
	vmovddup(xmm0, qword[AO-0x60]);
	vfmadd231ps(xmm12, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x4c]);
	vfmadd231ps(xmm13, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x48]);
	vfmadd231ps(xmm14, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x44]);
	vfmadd231ps(xmm15, xmm6, xmm1);
	vbroadcastss(xmm6, dword[BO-0x40]);
	vmovddup(xmm1, qword[AO-0x58]);
	sub(AO, -32);
	sub(BO, -64);
	dec(H);
	jg(l1a60, T_NEAR);
	vaddps(xmm8, xmm8, xmm12);
	vaddps(xmm9, xmm9, xmm13);
	vaddps(xmm10, xmm10, xmm14);
	vaddps(xmm11, xmm11, xmm15);
	align(4);

L(l1b58);
	mov(H, K);
	and_(H, 0x3);
	je(l1ba4, T_NEAR);
	align(4);

L(l1b64);
	vfmadd231ps(xmm8, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x78]);
	vfmadd231ps(xmm10, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x74]);
	vfmadd231ps(xmm11, xmm6, xmm0);
	vbroadcastss(xmm6, dword[BO-0x70]);
	vmovddup(xmm0, qword[AO-0x78]);
	sub(AO, -8);
	sub(BO, -16);
	dec(H);
	jg(l1b64, T_NEAR);
	align(4);

L(l1ba4);
	vmovsd(xmm1, qword[CO1]);
	vaddps(xmm8, xmm1, xmm8);
	vmovlps(qword[CO1], xmm8);
	vmovsd(xmm1, qword[CO1+LDC*1]);
	vaddps(xmm9, xmm1, xmm9);
	prefetcht2(byte[AA+0x40]);
	vmovlps(qword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*4]);
	vmovsd(xmm1, qword[CO2]);
	vaddps(xmm10, xmm1, xmm10);
	prefetcht2(byte[AA+0x80]);
	vmovlps(qword[CO2], xmm10);
	vmovsd(xmm1, qword[CO2+LDC*1]);
	vaddps(xmm11, xmm1, xmm11);
	prefetcht2(byte[AA+0xc0]);
	vmovlps(qword[CO2+LDC*1], xmm11);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -128);
	dec(I);
	jg(l19fc, T_NEAR);
	align(4);

L(l1c0c);
	test(N, 0x2);
	jle(l1d34, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(xmm2, dword[BO-0x80]);
	vxorps(xmm8, xmm8, xmm8);
	vmovddup(xmm0, qword[AO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1+0x4]);
	prefetcht0(byte[CO1+LDC*1+0x4]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1cd0, T_NEAR);
	align(4);

L(l1c50);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovddup(xmm0, qword[AO-0x78]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x74]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x70]);
	vmovddup(xmm0, qword[AO-0x70]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x6c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x68]);
	vmovddup(xmm0, qword[AO-0x68]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x64]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x60]);
	vmovddup(xmm0, qword[AO-0x60]);
	sub(BO, -32);
	sub(AO, -32);
	dec(H);
	jg(l1c50, T_NEAR);
	align(4);

L(l1cd0);
	mov(H, K);
	and_(H, 0x3);
	je(l1d04, T_NEAR);
	align(4);

L(l1cdc);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	vfmadd231ps(xmm9, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovddup(xmm0, qword[AO-0x78]);
	sub(BO, -8);
	sub(AO, -8);
	dec(H);
	jg(l1cdc, T_NEAR);
	align(4);

L(l1d04);
	vmovsd(xmm1, qword[CO1]);
	vaddps(xmm8, xmm1, xmm8);
	vmovlps(qword[CO1], xmm8);
	vmovsd(xmm1, qword[CO1+LDC*1]);
	vaddps(xmm9, xmm1, xmm9);
	prefetcht2(byte[AA+0x40]);
	vmovlps(qword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	sub(AA, -128);
	align(4);

L(l1d34);
	test(N, 0x1);
	jle(l1e1c, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vbroadcastss(xmm2, dword[BO-0x80]);
	vbroadcastss(xmm3, dword[BO-0x7c]);
	vxorps(xmm8, xmm8, xmm8);
	vmovddup(xmm0, qword[AO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	vmovddup(xmm1, qword[AO-0x78]);
	prefetcht0(byte[CO1+0x4]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1dd4, T_NEAR);
	align(4);

L(l1d78);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x78]);
	vmovddup(xmm0, qword[AO-0x70]);
	vfmadd231ps(xmm9, xmm1, xmm3);
	vbroadcastss(xmm3, dword[BO-0x74]);
	vmovddup(xmm1, qword[AO-0x68]);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x70]);
	vmovddup(xmm0, qword[AO-0x60]);
	vfmadd231ps(xmm9, xmm1, xmm3);
	vbroadcastss(xmm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovddup(xmm1, qword[AO-0x58]);
	sub(AO, -32);
	dec(H);
	jg(l1d78, T_NEAR);
	vaddps(xmm8, xmm9, xmm8);
	align(4);

L(l1dd4);
	mov(H, K);
	and_(H, 0x3);
	je(l1e00, T_NEAR);
	align(4);

L(l1de0);
	vfmadd231ps(xmm8, xmm0, xmm2);
	vbroadcastss(xmm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovddup(xmm0, qword[AO-0x78]);
	sub(AO, -8);
	dec(H);
	jg(l1de0, T_NEAR);
	align(4);

L(l1e00);
	vmovsd(xmm1, qword[CO1]);
	vaddps(xmm8, xmm1, xmm8);
	vmovlps(qword[CO1], xmm8);
	add(CO1, LDC);
	add(CO2, LDC);
	sub(AA, -128);
	align(4);

L(l1e1c);
	mov(A, AO);
	align(4);

L(l1e20);
	test(J, 0x1);
	jle(l221c, T_NEAR);
	mov(AA, K);
	imul(AA, AA, 0x4);
	add(AA, A);
	mov(CO1, C);
	lea(CO2, ptr[C+LDC*2]);
	add(C, 0x4);
	mov(BO, B);
	mov(I, N);
	sar(I, 0x2);
	jle(l2024, T_NEAR);
	align(4);

L(l1e54);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vxorps(xmm8, xmm8, xmm8);
	vmovss(xmm6, dword[BO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	vmovss(xmm0, dword[AO-0x80]);
	vxorps(xmm10, xmm10, xmm10);
	vxorps(xmm11, xmm11, xmm11);
	vmovss(xmm1, dword[AO-0x7c]);
	prefetcht0(byte[CO1]);
	prefetcht0(byte[CO1+LDC*1]);
	prefetcht0(byte[CO2]);
	prefetcht0(byte[CO2+LDC*1]);
	mov(H, K);
	sar(H, 0x2);
	jle(l1f74, T_NEAR);
	align(4);

L(l1ea0);
	vfmadd231ss(xmm8, xmm6, xmm0);
	prefetcht0(byte[BO+0x100]);
	vmovss(xmm6, dword[BO-0x7c]);
	vfmadd231ss(xmm9, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x78]);
	vfmadd231ss(xmm10, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x74]);
	vfmadd231ss(xmm11, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x70]);
	vmovss(xmm0, dword[AO-0x78]);
	vfmadd231ss(xmm8, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x6c]);
	vfmadd231ss(xmm9, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x68]);
	vfmadd231ss(xmm10, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x64]);
	vfmadd231ss(xmm11, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x60]);
	vmovss(xmm1, dword[AO-0x74]);
	vfmadd231ss(xmm8, xmm6, xmm0);
	prefetcht0(byte[AO+0x240]);
	vmovss(xmm6, dword[BO-0x5c]);
	vfmadd231ss(xmm9, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x58]);
	vfmadd231ss(xmm10, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x54]);
	vfmadd231ss(xmm11, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x50]);
	vmovss(xmm0, dword[AO-0x70]);
	vfmadd231ss(xmm8, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x4c]);
	vfmadd231ss(xmm9, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x48]);
	vfmadd231ss(xmm10, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x44]);
	vfmadd231ss(xmm11, xmm6, xmm1);
	vmovss(xmm6, dword[BO-0x40]);
	vmovss(xmm1, dword[AO-0x6c]);
	sub(AO, -16);
	sub(BO, -64);
	dec(H);
	jg(l1ea0, T_NEAR);
	align(4);

L(l1f74);
	mov(H, K);
	and_(H, 0x3);
	je(l1fbc, T_NEAR);
	align(4);

L(l1f80);
	vfmadd231ss(xmm8, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x7c]);
	vfmadd231ss(xmm9, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x78]);
	vfmadd231ss(xmm10, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x74]);
	vfmadd231ss(xmm11, xmm6, xmm0);
	vmovss(xmm6, dword[BO-0x70]);
	vmovss(xmm0, dword[AO-0x7c]);
	sub(AO, -4);
	sub(BO, -16);
	dec(H);
	jg(l1f80, T_NEAR);
	align(4);

L(l1fbc);
	vmovss(xmm1, dword[CO1]);
	vaddss(xmm8, xmm1, xmm8);
	vmovss(dword[CO1], xmm8);
	vmovss(xmm1, dword[CO1+LDC*1]);
	vaddss(xmm9, xmm1, xmm9);
	prefetcht2(byte[AA+0x40]);
	vmovss(dword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*4]);
	vmovss(xmm1, dword[CO2]);
	vaddss(xmm10, xmm1, xmm10);
	prefetcht2(byte[AA+0x80]);
	vmovss(dword[CO2], xmm10);
	vmovss(xmm1, dword[CO2+LDC*1]);
	vaddss(xmm11, xmm1, xmm11);
	prefetcht2(byte[AA+0xc0]);
	vmovss(dword[CO2+LDC*1], xmm11);
	lea(CO2, ptr[CO2+LDC*4]);
	sub(AA, -128);
	dec(I);
	jg(l1e54, T_NEAR);
	align(4);

L(l2024);
	test(N, 0x2);
	jle(l213c, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vmovss(xmm2, dword[BO-0x80]);
	vxorps(xmm8, xmm8, xmm8);
	vmovss(xmm0, dword[AO-0x80]);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1]);
	prefetcht0(byte[CO1+LDC*1]);
	mov(H, K);
	sar(H, 0x2);
	jle(l20d8, T_NEAR);
	align(4);

L(l2060);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x7c]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x78]);
	vmovss(xmm0, dword[AO-0x7c]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x74]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x70]);
	vmovss(xmm0, dword[AO-0x78]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x6c]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x68]);
	vmovss(xmm0, dword[AO-0x74]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x64]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x60]);
	vmovss(xmm0, dword[AO-0x70]);
	sub(BO, -32);
	sub(AO, -16);
	dec(H);
	jg(l2060, T_NEAR);
	align(4);

L(l20d8);
	mov(H, K);
	and_(H, 0x3);
	je(l210c, T_NEAR);
	align(4);

L(l20e4);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x7c]);
	vfmadd231ss(xmm9, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x78]);
	vmovss(xmm0, dword[AO-0x7c]);
	sub(BO, -8);
	sub(AO, -4);
	dec(H);
	jg(l20e4, T_NEAR);
	align(4);

L(l210c);
	vmovss(xmm1, dword[CO1]);
	vaddss(xmm8, xmm1, xmm8);
	vmovss(dword[CO1], xmm8);
	vmovss(xmm1, dword[CO1+LDC*1]);
	vaddss(xmm9, xmm1, xmm9);
	prefetcht2(byte[AA+0x40]);
	vmovss(dword[CO1+LDC*1], xmm9);
	lea(CO1, ptr[CO1+LDC*2]);
	lea(CO2, ptr[CO2+LDC*2]);
	sub(AA, -128);
	align(4);

L(l213c);
	test(N, 0x1);
	jle(l2218, T_NEAR);
	prefetcht2(byte[AA-0x80]);
	mov(AO, A);
	vmovss(xmm2, dword[BO-0x80]);
	vmovss(xmm3, dword[BO-0x7c]);
	vmovss(xmm0, dword[AO-0x80]);
	vmovss(xmm1, dword[AO-0x7c]);
	vxorps(xmm8, xmm8, xmm8);
	vxorps(xmm9, xmm9, xmm9);
	prefetcht0(byte[CO1]);
	mov(H, K);
	sar(H, 0x2);
	jle(l21d4, T_NEAR);
	align(4);

L(l217c);
	prefetcht0(byte[BO+0x100]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x78]);
	vmovss(xmm0, dword[AO-0x78]);
	vfmadd231ss(xmm9, xmm1, xmm3);
	vmovss(xmm3, dword[BO-0x74]);
	vmovss(xmm1, dword[AO-0x74]);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x70]);
	vmovss(xmm0, dword[AO-0x70]);
	vfmadd231ss(xmm9, xmm1, xmm3);
	vmovss(xmm3, dword[BO-0x6c]);
	sub(BO, -16);
	vmovss(xmm1, dword[AO-0x6c]);
	sub(AO, -16);
	dec(H);
	jg(l217c, T_NEAR);
	vaddss(xmm8, xmm9, xmm8);
	align(4);

L(l21d4);
	mov(H, K);
	and_(H, 0x3);
	je(l21fc, T_NEAR);
	align(4);

L(l21e0);
	vfmadd231ss(xmm8, xmm0, xmm2);
	vmovss(xmm2, dword[BO-0x7c]);
	sub(BO, -4);
	vmovss(xmm0, dword[AO-0x7c]);
	sub(AO, -4);
	dec(H);
	jg(l21e0, T_NEAR);
	align(4);

L(l21fc);
	vmovss(xmm1, dword[CO1]);
	vaddss(xmm8, xmm1, xmm8);
	vmovss(dword[CO1], xmm8);
	add(CO1, LDC);
	add(CO2, LDC);
	sub(AA, -128);
	align(4);

L(l2218);
	mov(A, AO);
	align(4);

L(l221c);
	mov(AO, qword[rsp]);
	mov(BO, qword[rsp+0x8]);
	mov(I, qword[rsp+0x10]);
	mov(J, qword[rsp+0x18]);
	mov(CO1, qword[rsp+0x20]);
	mov(CO2, qword[rsp+0x28]);
	vzeroupper();
	add(rsp, 0x40);
	ret();
}
outLocalLabel();

#undef M
#undef N
#undef K
#undef A
#undef B
#undef C
#undef LDC
#undef AA
#undef I
#undef J
#undef H
#undef AO
#undef BO
#undef CO1
#undef CO2
#undef STACKSIZE
#undef OLD_C
#undef OLD_LDC
#undef OFFSET
}

}
}
}
